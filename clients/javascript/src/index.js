/**
 * BitMEX API
 * REST API for the BitMEX.com trading platform.<br><br><a href=\"/app/restAPI\">REST Documentation</a><br><a href=\"/app/wsAPI\">Websocket Documentation</a>
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessToken', 'model/Affiliate', 'model/Announcement', 'model/ApiKey', 'model/Chat', 'model/ConnectedUsers', 'model/Error', 'model/Execution', 'model/Funding', 'model/InlineResponse200', 'model/Instrument', 'model/InstrumentInterval', 'model/Insurance', 'model/Leaderboard', 'model/Liquidation', 'model/Margin', 'model/Order', 'model/OrderBook', 'model/OrderBookL2', 'model/Position', 'model/Quote', 'model/Settlement', 'model/Stats', 'model/StatsHistory', 'model/Trade', 'model/TradeBin', 'model/Transaction', 'model/User', 'model/UserCommission', 'model/UserPreferences', 'api/AnnouncementApi', 'api/ApiKeyApi', 'api/ChatApi', 'api/ExecutionApi', 'api/FundingApi', 'api/InstrumentApi', 'api/InsuranceApi', 'api/LeaderboardApi', 'api/LiquidationApi', 'api/OrderApi', 'api/OrderBookApi', 'api/PositionApi', 'api/QuoteApi', 'api/SchemaApi', 'api/SettlementApi', 'api/StatsApi', 'api/TradeApi', 'api/UserApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessToken'), require('./model/Affiliate'), require('./model/Announcement'), require('./model/ApiKey'), require('./model/Chat'), require('./model/ConnectedUsers'), require('./model/Error'), require('./model/Execution'), require('./model/Funding'), require('./model/InlineResponse200'), require('./model/Instrument'), require('./model/InstrumentInterval'), require('./model/Insurance'), require('./model/Leaderboard'), require('./model/Liquidation'), require('./model/Margin'), require('./model/Order'), require('./model/OrderBook'), require('./model/OrderBookL2'), require('./model/Position'), require('./model/Quote'), require('./model/Settlement'), require('./model/Stats'), require('./model/StatsHistory'), require('./model/Trade'), require('./model/TradeBin'), require('./model/Transaction'), require('./model/User'), require('./model/UserCommission'), require('./model/UserPreferences'), require('./api/AnnouncementApi'), require('./api/ApiKeyApi'), require('./api/ChatApi'), require('./api/ExecutionApi'), require('./api/FundingApi'), require('./api/InstrumentApi'), require('./api/InsuranceApi'), require('./api/LeaderboardApi'), require('./api/LiquidationApi'), require('./api/OrderApi'), require('./api/OrderBookApi'), require('./api/PositionApi'), require('./api/QuoteApi'), require('./api/SchemaApi'), require('./api/SettlementApi'), require('./api/StatsApi'), require('./api/TradeApi'), require('./api/UserApi'));
  }
}(function(ApiClient, AccessToken, Affiliate, Announcement, ApiKey, Chat, ConnectedUsers, Error, Execution, Funding, InlineResponse200, Instrument, InstrumentInterval, Insurance, Leaderboard, Liquidation, Margin, Order, OrderBook, OrderBookL2, Position, Quote, Settlement, Stats, StatsHistory, Trade, TradeBin, Transaction, User, UserCommission, UserPreferences, AnnouncementApi, ApiKeyApi, ChatApi, ExecutionApi, FundingApi, InstrumentApi, InsuranceApi, LeaderboardApi, LiquidationApi, OrderApi, OrderBookApi, PositionApi, QuoteApi, SchemaApi, SettlementApi, StatsApi, TradeApi, UserApi) {
  'use strict';

  /**
   * REST_API_for_the_BitMEX_com_trading_platform_brbra_hrefapprestAPIREST_Documentationabra_hrefappwsAPIWebsocket_Documentationa.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var BitMexApi = require('index'); // See note below*.
   * var xxxSvc = new BitMexApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new BitMexApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new BitMexApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new BitMexApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.2.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken: AccessToken,
    /**
     * The Affiliate model constructor.
     * @property {module:model/Affiliate}
     */
    Affiliate: Affiliate,
    /**
     * The Announcement model constructor.
     * @property {module:model/Announcement}
     */
    Announcement: Announcement,
    /**
     * The ApiKey model constructor.
     * @property {module:model/ApiKey}
     */
    ApiKey: ApiKey,
    /**
     * The Chat model constructor.
     * @property {module:model/Chat}
     */
    Chat: Chat,
    /**
     * The ConnectedUsers model constructor.
     * @property {module:model/ConnectedUsers}
     */
    ConnectedUsers: ConnectedUsers,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The Execution model constructor.
     * @property {module:model/Execution}
     */
    Execution: Execution,
    /**
     * The Funding model constructor.
     * @property {module:model/Funding}
     */
    Funding: Funding,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The Instrument model constructor.
     * @property {module:model/Instrument}
     */
    Instrument: Instrument,
    /**
     * The InstrumentInterval model constructor.
     * @property {module:model/InstrumentInterval}
     */
    InstrumentInterval: InstrumentInterval,
    /**
     * The Insurance model constructor.
     * @property {module:model/Insurance}
     */
    Insurance: Insurance,
    /**
     * The Leaderboard model constructor.
     * @property {module:model/Leaderboard}
     */
    Leaderboard: Leaderboard,
    /**
     * The Liquidation model constructor.
     * @property {module:model/Liquidation}
     */
    Liquidation: Liquidation,
    /**
     * The Margin model constructor.
     * @property {module:model/Margin}
     */
    Margin: Margin,
    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order: Order,
    /**
     * The OrderBook model constructor.
     * @property {module:model/OrderBook}
     */
    OrderBook: OrderBook,
    /**
     * The OrderBookL2 model constructor.
     * @property {module:model/OrderBookL2}
     */
    OrderBookL2: OrderBookL2,
    /**
     * The Position model constructor.
     * @property {module:model/Position}
     */
    Position: Position,
    /**
     * The Quote model constructor.
     * @property {module:model/Quote}
     */
    Quote: Quote,
    /**
     * The Settlement model constructor.
     * @property {module:model/Settlement}
     */
    Settlement: Settlement,
    /**
     * The Stats model constructor.
     * @property {module:model/Stats}
     */
    Stats: Stats,
    /**
     * The StatsHistory model constructor.
     * @property {module:model/StatsHistory}
     */
    StatsHistory: StatsHistory,
    /**
     * The Trade model constructor.
     * @property {module:model/Trade}
     */
    Trade: Trade,
    /**
     * The TradeBin model constructor.
     * @property {module:model/TradeBin}
     */
    TradeBin: TradeBin,
    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction: Transaction,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserCommission model constructor.
     * @property {module:model/UserCommission}
     */
    UserCommission: UserCommission,
    /**
     * The UserPreferences model constructor.
     * @property {module:model/UserPreferences}
     */
    UserPreferences: UserPreferences,
    /**
     * The AnnouncementApi service constructor.
     * @property {module:api/AnnouncementApi}
     */
    AnnouncementApi: AnnouncementApi,
    /**
     * The ApiKeyApi service constructor.
     * @property {module:api/ApiKeyApi}
     */
    ApiKeyApi: ApiKeyApi,
    /**
     * The ChatApi service constructor.
     * @property {module:api/ChatApi}
     */
    ChatApi: ChatApi,
    /**
     * The ExecutionApi service constructor.
     * @property {module:api/ExecutionApi}
     */
    ExecutionApi: ExecutionApi,
    /**
     * The FundingApi service constructor.
     * @property {module:api/FundingApi}
     */
    FundingApi: FundingApi,
    /**
     * The InstrumentApi service constructor.
     * @property {module:api/InstrumentApi}
     */
    InstrumentApi: InstrumentApi,
    /**
     * The InsuranceApi service constructor.
     * @property {module:api/InsuranceApi}
     */
    InsuranceApi: InsuranceApi,
    /**
     * The LeaderboardApi service constructor.
     * @property {module:api/LeaderboardApi}
     */
    LeaderboardApi: LeaderboardApi,
    /**
     * The LiquidationApi service constructor.
     * @property {module:api/LiquidationApi}
     */
    LiquidationApi: LiquidationApi,
    /**
     * The OrderApi service constructor.
     * @property {module:api/OrderApi}
     */
    OrderApi: OrderApi,
    /**
     * The OrderBookApi service constructor.
     * @property {module:api/OrderBookApi}
     */
    OrderBookApi: OrderBookApi,
    /**
     * The PositionApi service constructor.
     * @property {module:api/PositionApi}
     */
    PositionApi: PositionApi,
    /**
     * The QuoteApi service constructor.
     * @property {module:api/QuoteApi}
     */
    QuoteApi: QuoteApi,
    /**
     * The SchemaApi service constructor.
     * @property {module:api/SchemaApi}
     */
    SchemaApi: SchemaApi,
    /**
     * The SettlementApi service constructor.
     * @property {module:api/SettlementApi}
     */
    SettlementApi: SettlementApi,
    /**
     * The StatsApi service constructor.
     * @property {module:api/StatsApi}
     */
    StatsApi: StatsApi,
    /**
     * The TradeApi service constructor.
     * @property {module:api/TradeApi}
     */
    TradeApi: TradeApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi
  };

  return exports;
}));
