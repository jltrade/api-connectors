# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Funding(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Funding - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'timestamp': 'date',
            'symbol': 'str',
            'funding_interval': 'date',
            'funding_rate': 'float',
            'funding_rate_daily': 'float'
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'symbol': 'symbol',
            'funding_interval': 'fundingInterval',
            'funding_rate': 'fundingRate',
            'funding_rate_daily': 'fundingRateDaily'
        }

        self._timestamp = None
        self._symbol = None
        self._funding_interval = None
        self._funding_rate = None
        self._funding_rate_daily = None

    @property
    def timestamp(self):
        """
        Gets the timestamp of this Funding.


        :return: The timestamp of this Funding.
        :rtype: date
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """
        Sets the timestamp of this Funding.


        :param timestamp: The timestamp of this Funding.
        :type: date
        """
        self._timestamp = timestamp

    @property
    def symbol(self):
        """
        Gets the symbol of this Funding.


        :return: The symbol of this Funding.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """
        Sets the symbol of this Funding.


        :param symbol: The symbol of this Funding.
        :type: str
        """
        self._symbol = symbol

    @property
    def funding_interval(self):
        """
        Gets the funding_interval of this Funding.


        :return: The funding_interval of this Funding.
        :rtype: date
        """
        return self._funding_interval

    @funding_interval.setter
    def funding_interval(self, funding_interval):
        """
        Sets the funding_interval of this Funding.


        :param funding_interval: The funding_interval of this Funding.
        :type: date
        """
        self._funding_interval = funding_interval

    @property
    def funding_rate(self):
        """
        Gets the funding_rate of this Funding.


        :return: The funding_rate of this Funding.
        :rtype: float
        """
        return self._funding_rate

    @funding_rate.setter
    def funding_rate(self, funding_rate):
        """
        Sets the funding_rate of this Funding.


        :param funding_rate: The funding_rate of this Funding.
        :type: float
        """
        self._funding_rate = funding_rate

    @property
    def funding_rate_daily(self):
        """
        Gets the funding_rate_daily of this Funding.


        :return: The funding_rate_daily of this Funding.
        :rtype: float
        """
        return self._funding_rate_daily

    @funding_rate_daily.setter
    def funding_rate_daily(self, funding_rate_daily):
        """
        Sets the funding_rate_daily of this Funding.


        :param funding_rate_daily: The funding_rate_daily of this Funding.
        :type: float
        """
        self._funding_rate_daily = funding_rate_daily

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

