# coding: utf-8

"""
    BitMEX API

    REST API for the BitMEX.com trading platform.<br><br><a href=\"/app/restAPI\">REST Documentation</a><br><a href=\"/app/wsAPI\">Websocket Documentation</a>

    OpenAPI spec version: 1.2.0
    Contact: support@bitmex.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.order_api import OrderApi


class TestOrderApi(unittest.TestCase):
    """ OrderApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.order_api.OrderApi()

    def tearDown(self):
        pass

    def test_order_amend(self):
        """
        Test case for order_amend

        Amend the quantity or price of an open order.
        """
        pass

    def test_order_amend_bulk(self):
        """
        Test case for order_amend_bulk

        Amend multiple orders.
        """
        pass

    def test_order_cancel(self):
        """
        Test case for order_cancel

        Cancel order(s). Send multiple order IDs to cancel in bulk.
        """
        pass

    def test_order_cancel_all(self):
        """
        Test case for order_cancel_all

        Cancels all of your orders.
        """
        pass

    def test_order_cancel_all_after(self):
        """
        Test case for order_cancel_all_after

        Automatically cancel all your orders after a specified timeout.
        """
        pass

    def test_order_close_position(self):
        """
        Test case for order_close_position

        Close a position. [Deprecated, use POST /order with execInst: 'Close']
        """
        pass

    def test_order_get_orders(self):
        """
        Test case for order_get_orders

        Get your orders.
        """
        pass

    def test_order_new(self):
        """
        Test case for order_new

        Create a new order.
        """
        pass

    def test_order_new_bulk(self):
        """
        Test case for order_new_bulk

        Create multiple new orders.
        """
        pass


if __name__ == '__main__':
    unittest.main()
