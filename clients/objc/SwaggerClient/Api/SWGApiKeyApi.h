#import <Foundation/Foundation.h>
#import "SWGError.h"
#import "SWGApiKey.h"
#import "SWGInlineResponse200.h"
#import "SWGApi.h"

/**
* BitMEX API
* REST API for the BitMEX.com trading platform.<br><br><a href=\"/app/restAPI\">REST Documentation</a><br><a href=\"/app/wsAPI\">Websocket Documentation</a>
*
* OpenAPI spec version: 1.2.0
* Contact: support@bitmex.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGApiKeyApi: NSObject <SWGApi>

extern NSString* kSWGApiKeyApiErrorDomain;
extern NSInteger kSWGApiKeyApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Disable an API Key.
/// 
///
/// @param apiKeyID API Key ID (public component).
/// 
///  code:200 message:"Request was successful",
///  code:400 message:"Parameter Error",
///  code:401 message:"Unauthorized",
///  code:404 message:"Not Found"
///
/// @return SWGApiKey*
-(NSNumber*) apiKeyDisableWithApiKeyID: (NSString*) apiKeyID
    completionHandler: (void (^)(SWGApiKey* output, NSError* error)) handler;


/// Enable an API Key.
/// 
///
/// @param apiKeyID API Key ID (public component).
/// 
///  code:200 message:"Request was successful",
///  code:400 message:"Parameter Error",
///  code:401 message:"Unauthorized",
///  code:404 message:"Not Found"
///
/// @return SWGApiKey*
-(NSNumber*) apiKeyEnableWithApiKeyID: (NSString*) apiKeyID
    completionHandler: (void (^)(SWGApiKey* output, NSError* error)) handler;


/// Get your API Keys.
/// 
///
/// @param reverse If true, will sort results newest first. (optional) (default to false)
/// 
///  code:200 message:"Request was successful",
///  code:400 message:"Parameter Error",
///  code:401 message:"Unauthorized",
///  code:404 message:"Not Found"
///
/// @return NSArray<SWGApiKey>*
-(NSNumber*) apiKeyGetWithReverse: (NSNumber*) reverse
    completionHandler: (void (^)(NSArray<SWGApiKey>* output, NSError* error)) handler;


/// Create a new API Key.
/// API Keys can also be created via [this Python script](https://github.com/BitMEX/market-maker/blob/master/generate-api-key.py) See the [API Key Documentation](/app/apiKeys) for more information on capabilities.
///
/// @param name Key name. This name is for reference only. (optional)
/// @param cidr CIDR block to restrict this key to. To restrict to a single address, append \&quot;/32\&quot;, e.g. 207.39.29.22/32. Leave blank or set to 0.0.0.0/0 to allow all IPs. Only one block may be set. &lt;a href&#x3D;\&quot;http://software77.net/cidr-101.html\&quot;&gt;More on CIDR blocks&lt;/a&gt; (optional)
/// @param permissions Key Permissions. All keys can read margin and position data. Additional permissions must be added. Available: [\&quot;order\&quot;, \&quot;withdraw\&quot;]. (optional)
/// @param enabled Set to true to enable this key on creation. Otherwise, it must be explicitly enabled via /apiKey/enable. (optional) (default to false)
/// @param token OTP Token (YubiKey, Google Authenticator) (optional)
/// 
///  code:200 message:"Request was successful",
///  code:400 message:"Parameter Error",
///  code:401 message:"Unauthorized",
///  code:404 message:"Not Found"
///
/// @return SWGApiKey*
-(NSNumber*) apiKeyNewWithName: (NSString*) name
    cidr: (NSString*) cidr
    permissions: (NSString*) permissions
    enabled: (NSNumber*) enabled
    token: (NSString*) token
    completionHandler: (void (^)(SWGApiKey* output, NSError* error)) handler;


/// Remove an API Key.
/// 
///
/// @param apiKeyID API Key ID (public component).
/// 
///  code:200 message:"Request was successful",
///  code:400 message:"Parameter Error",
///  code:401 message:"Unauthorized",
///  code:404 message:"Not Found"
///
/// @return SWGInlineResponse200*
-(NSNumber*) apiKeyRemoveWithApiKeyID: (NSString*) apiKeyID
    completionHandler: (void (^)(SWGInlineResponse200* output, NSError* error)) handler;



@end
