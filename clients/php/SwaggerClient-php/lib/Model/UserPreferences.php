<?php
/**
 * UserPreferences
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * UserPreferences Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class UserPreferences implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'announcements_last_seen' => '\DateTime',
        'color_theme' => 'string',
        'currency' => 'string',
        'debug' => 'bool',
        'disable_emails' => 'string[]',
        'hide_confirm_dialogs' => 'string[]',
        'hide_connection_modal' => 'bool',
        'hide_from_leaderboard' => 'bool',
        'hide_name_from_leaderboard' => 'bool',
        'hide_notifications' => 'string[]',
        'hide_phone_confirm' => 'bool',
        'locale' => 'string',
        'msgs_seen' => 'string[]',
        'order_book_binning' => 'Number',
        'order_book_type' => 'string',
        'order_controls_plus_minus' => 'bool',
        'sounds' => 'string[]',
        'strict_ip_check' => 'bool',
        'strict_timeout' => 'bool',
        'ticker_group' => 'string',
        'ticker_pinned' => 'bool',
        'trade_layout' => 'string'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'announcements_last_seen' => 'announcementsLastSeen',
        'color_theme' => 'colorTheme',
        'currency' => 'currency',
        'debug' => 'debug',
        'disable_emails' => 'disableEmails',
        'hide_confirm_dialogs' => 'hideConfirmDialogs',
        'hide_connection_modal' => 'hideConnectionModal',
        'hide_from_leaderboard' => 'hideFromLeaderboard',
        'hide_name_from_leaderboard' => 'hideNameFromLeaderboard',
        'hide_notifications' => 'hideNotifications',
        'hide_phone_confirm' => 'hidePhoneConfirm',
        'locale' => 'locale',
        'msgs_seen' => 'msgsSeen',
        'order_book_binning' => 'orderBookBinning',
        'order_book_type' => 'orderBookType',
        'order_controls_plus_minus' => 'orderControlsPlusMinus',
        'sounds' => 'sounds',
        'strict_ip_check' => 'strictIPCheck',
        'strict_timeout' => 'strictTimeout',
        'ticker_group' => 'tickerGroup',
        'ticker_pinned' => 'tickerPinned',
        'trade_layout' => 'tradeLayout'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'announcements_last_seen' => 'setAnnouncementsLastSeen',
        'color_theme' => 'setColorTheme',
        'currency' => 'setCurrency',
        'debug' => 'setDebug',
        'disable_emails' => 'setDisableEmails',
        'hide_confirm_dialogs' => 'setHideConfirmDialogs',
        'hide_connection_modal' => 'setHideConnectionModal',
        'hide_from_leaderboard' => 'setHideFromLeaderboard',
        'hide_name_from_leaderboard' => 'setHideNameFromLeaderboard',
        'hide_notifications' => 'setHideNotifications',
        'hide_phone_confirm' => 'setHidePhoneConfirm',
        'locale' => 'setLocale',
        'msgs_seen' => 'setMsgsSeen',
        'order_book_binning' => 'setOrderBookBinning',
        'order_book_type' => 'setOrderBookType',
        'order_controls_plus_minus' => 'setOrderControlsPlusMinus',
        'sounds' => 'setSounds',
        'strict_ip_check' => 'setStrictIpCheck',
        'strict_timeout' => 'setStrictTimeout',
        'ticker_group' => 'setTickerGroup',
        'ticker_pinned' => 'setTickerPinned',
        'trade_layout' => 'setTradeLayout'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'announcements_last_seen' => 'getAnnouncementsLastSeen',
        'color_theme' => 'getColorTheme',
        'currency' => 'getCurrency',
        'debug' => 'getDebug',
        'disable_emails' => 'getDisableEmails',
        'hide_confirm_dialogs' => 'getHideConfirmDialogs',
        'hide_connection_modal' => 'getHideConnectionModal',
        'hide_from_leaderboard' => 'getHideFromLeaderboard',
        'hide_name_from_leaderboard' => 'getHideNameFromLeaderboard',
        'hide_notifications' => 'getHideNotifications',
        'hide_phone_confirm' => 'getHidePhoneConfirm',
        'locale' => 'getLocale',
        'msgs_seen' => 'getMsgsSeen',
        'order_book_binning' => 'getOrderBookBinning',
        'order_book_type' => 'getOrderBookType',
        'order_controls_plus_minus' => 'getOrderControlsPlusMinus',
        'sounds' => 'getSounds',
        'strict_ip_check' => 'getStrictIpCheck',
        'strict_timeout' => 'getStrictTimeout',
        'ticker_group' => 'getTickerGroup',
        'ticker_pinned' => 'getTickerPinned',
        'trade_layout' => 'getTradeLayout'
    );
  
    
    /**
      * $announcements_last_seen 
      * @var \DateTime
      */
    protected $announcements_last_seen;
    
    /**
      * $color_theme 
      * @var string
      */
    protected $color_theme;
    
    /**
      * $currency 
      * @var string
      */
    protected $currency;
    
    /**
      * $debug 
      * @var bool
      */
    protected $debug;
    
    /**
      * $disable_emails 
      * @var string[]
      */
    protected $disable_emails;
    
    /**
      * $hide_confirm_dialogs 
      * @var string[]
      */
    protected $hide_confirm_dialogs;
    
    /**
      * $hide_connection_modal 
      * @var bool
      */
    protected $hide_connection_modal;
    
    /**
      * $hide_from_leaderboard 
      * @var bool
      */
    protected $hide_from_leaderboard;
    
    /**
      * $hide_name_from_leaderboard 
      * @var bool
      */
    protected $hide_name_from_leaderboard;
    
    /**
      * $hide_notifications 
      * @var string[]
      */
    protected $hide_notifications;
    
    /**
      * $hide_phone_confirm 
      * @var bool
      */
    protected $hide_phone_confirm;
    
    /**
      * $locale 
      * @var string
      */
    protected $locale;
    
    /**
      * $msgs_seen 
      * @var string[]
      */
    protected $msgs_seen;
    
    /**
      * $order_book_binning 
      * @var Number
      */
    protected $order_book_binning;
    
    /**
      * $order_book_type 
      * @var string
      */
    protected $order_book_type;
    
    /**
      * $order_controls_plus_minus 
      * @var bool
      */
    protected $order_controls_plus_minus;
    
    /**
      * $sounds 
      * @var string[]
      */
    protected $sounds;
    
    /**
      * $strict_ip_check 
      * @var bool
      */
    protected $strict_ip_check;
    
    /**
      * $strict_timeout 
      * @var bool
      */
    protected $strict_timeout;
    
    /**
      * $ticker_group 
      * @var string
      */
    protected $ticker_group;
    
    /**
      * $ticker_pinned 
      * @var bool
      */
    protected $ticker_pinned;
    
    /**
      * $trade_layout 
      * @var string
      */
    protected $trade_layout;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->announcements_last_seen = $data["announcements_last_seen"];
            $this->color_theme = $data["color_theme"];
            $this->currency = $data["currency"];
            $this->debug = $data["debug"];
            $this->disable_emails = $data["disable_emails"];
            $this->hide_confirm_dialogs = $data["hide_confirm_dialogs"];
            $this->hide_connection_modal = $data["hide_connection_modal"];
            $this->hide_from_leaderboard = $data["hide_from_leaderboard"];
            $this->hide_name_from_leaderboard = $data["hide_name_from_leaderboard"];
            $this->hide_notifications = $data["hide_notifications"];
            $this->hide_phone_confirm = $data["hide_phone_confirm"];
            $this->locale = $data["locale"];
            $this->msgs_seen = $data["msgs_seen"];
            $this->order_book_binning = $data["order_book_binning"];
            $this->order_book_type = $data["order_book_type"];
            $this->order_controls_plus_minus = $data["order_controls_plus_minus"];
            $this->sounds = $data["sounds"];
            $this->strict_ip_check = $data["strict_ip_check"];
            $this->strict_timeout = $data["strict_timeout"];
            $this->ticker_group = $data["ticker_group"];
            $this->ticker_pinned = $data["ticker_pinned"];
            $this->trade_layout = $data["trade_layout"];
        }
    }
    
    /**
     * Gets announcements_last_seen
     * @return \DateTime
     */
    public function getAnnouncementsLastSeen()
    {
        return $this->announcements_last_seen;
    }
  
    /**
     * Sets announcements_last_seen
     * @param \DateTime $announcements_last_seen 
     * @return $this
     */
    public function setAnnouncementsLastSeen($announcements_last_seen)
    {
        
        $this->announcements_last_seen = $announcements_last_seen;
        return $this;
    }
    
    /**
     * Gets color_theme
     * @return string
     */
    public function getColorTheme()
    {
        return $this->color_theme;
    }
  
    /**
     * Sets color_theme
     * @param string $color_theme 
     * @return $this
     */
    public function setColorTheme($color_theme)
    {
        
        $this->color_theme = $color_theme;
        return $this;
    }
    
    /**
     * Gets currency
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }
  
    /**
     * Sets currency
     * @param string $currency 
     * @return $this
     */
    public function setCurrency($currency)
    {
        
        $this->currency = $currency;
        return $this;
    }
    
    /**
     * Gets debug
     * @return bool
     */
    public function getDebug()
    {
        return $this->debug;
    }
  
    /**
     * Sets debug
     * @param bool $debug 
     * @return $this
     */
    public function setDebug($debug)
    {
        
        $this->debug = $debug;
        return $this;
    }
    
    /**
     * Gets disable_emails
     * @return string[]
     */
    public function getDisableEmails()
    {
        return $this->disable_emails;
    }
  
    /**
     * Sets disable_emails
     * @param string[] $disable_emails 
     * @return $this
     */
    public function setDisableEmails($disable_emails)
    {
        
        $this->disable_emails = $disable_emails;
        return $this;
    }
    
    /**
     * Gets hide_confirm_dialogs
     * @return string[]
     */
    public function getHideConfirmDialogs()
    {
        return $this->hide_confirm_dialogs;
    }
  
    /**
     * Sets hide_confirm_dialogs
     * @param string[] $hide_confirm_dialogs 
     * @return $this
     */
    public function setHideConfirmDialogs($hide_confirm_dialogs)
    {
        
        $this->hide_confirm_dialogs = $hide_confirm_dialogs;
        return $this;
    }
    
    /**
     * Gets hide_connection_modal
     * @return bool
     */
    public function getHideConnectionModal()
    {
        return $this->hide_connection_modal;
    }
  
    /**
     * Sets hide_connection_modal
     * @param bool $hide_connection_modal 
     * @return $this
     */
    public function setHideConnectionModal($hide_connection_modal)
    {
        
        $this->hide_connection_modal = $hide_connection_modal;
        return $this;
    }
    
    /**
     * Gets hide_from_leaderboard
     * @return bool
     */
    public function getHideFromLeaderboard()
    {
        return $this->hide_from_leaderboard;
    }
  
    /**
     * Sets hide_from_leaderboard
     * @param bool $hide_from_leaderboard 
     * @return $this
     */
    public function setHideFromLeaderboard($hide_from_leaderboard)
    {
        
        $this->hide_from_leaderboard = $hide_from_leaderboard;
        return $this;
    }
    
    /**
     * Gets hide_name_from_leaderboard
     * @return bool
     */
    public function getHideNameFromLeaderboard()
    {
        return $this->hide_name_from_leaderboard;
    }
  
    /**
     * Sets hide_name_from_leaderboard
     * @param bool $hide_name_from_leaderboard 
     * @return $this
     */
    public function setHideNameFromLeaderboard($hide_name_from_leaderboard)
    {
        
        $this->hide_name_from_leaderboard = $hide_name_from_leaderboard;
        return $this;
    }
    
    /**
     * Gets hide_notifications
     * @return string[]
     */
    public function getHideNotifications()
    {
        return $this->hide_notifications;
    }
  
    /**
     * Sets hide_notifications
     * @param string[] $hide_notifications 
     * @return $this
     */
    public function setHideNotifications($hide_notifications)
    {
        
        $this->hide_notifications = $hide_notifications;
        return $this;
    }
    
    /**
     * Gets hide_phone_confirm
     * @return bool
     */
    public function getHidePhoneConfirm()
    {
        return $this->hide_phone_confirm;
    }
  
    /**
     * Sets hide_phone_confirm
     * @param bool $hide_phone_confirm 
     * @return $this
     */
    public function setHidePhoneConfirm($hide_phone_confirm)
    {
        
        $this->hide_phone_confirm = $hide_phone_confirm;
        return $this;
    }
    
    /**
     * Gets locale
     * @return string
     */
    public function getLocale()
    {
        return $this->locale;
    }
  
    /**
     * Sets locale
     * @param string $locale 
     * @return $this
     */
    public function setLocale($locale)
    {
        
        $this->locale = $locale;
        return $this;
    }
    
    /**
     * Gets msgs_seen
     * @return string[]
     */
    public function getMsgsSeen()
    {
        return $this->msgs_seen;
    }
  
    /**
     * Sets msgs_seen
     * @param string[] $msgs_seen 
     * @return $this
     */
    public function setMsgsSeen($msgs_seen)
    {
        
        $this->msgs_seen = $msgs_seen;
        return $this;
    }
    
    /**
     * Gets order_book_binning
     * @return Number
     */
    public function getOrderBookBinning()
    {
        return $this->order_book_binning;
    }
  
    /**
     * Sets order_book_binning
     * @param Number $order_book_binning 
     * @return $this
     */
    public function setOrderBookBinning($order_book_binning)
    {
        
        $this->order_book_binning = $order_book_binning;
        return $this;
    }
    
    /**
     * Gets order_book_type
     * @return string
     */
    public function getOrderBookType()
    {
        return $this->order_book_type;
    }
  
    /**
     * Sets order_book_type
     * @param string $order_book_type 
     * @return $this
     */
    public function setOrderBookType($order_book_type)
    {
        
        $this->order_book_type = $order_book_type;
        return $this;
    }
    
    /**
     * Gets order_controls_plus_minus
     * @return bool
     */
    public function getOrderControlsPlusMinus()
    {
        return $this->order_controls_plus_minus;
    }
  
    /**
     * Sets order_controls_plus_minus
     * @param bool $order_controls_plus_minus 
     * @return $this
     */
    public function setOrderControlsPlusMinus($order_controls_plus_minus)
    {
        
        $this->order_controls_plus_minus = $order_controls_plus_minus;
        return $this;
    }
    
    /**
     * Gets sounds
     * @return string[]
     */
    public function getSounds()
    {
        return $this->sounds;
    }
  
    /**
     * Sets sounds
     * @param string[] $sounds 
     * @return $this
     */
    public function setSounds($sounds)
    {
        
        $this->sounds = $sounds;
        return $this;
    }
    
    /**
     * Gets strict_ip_check
     * @return bool
     */
    public function getStrictIpCheck()
    {
        return $this->strict_ip_check;
    }
  
    /**
     * Sets strict_ip_check
     * @param bool $strict_ip_check 
     * @return $this
     */
    public function setStrictIpCheck($strict_ip_check)
    {
        
        $this->strict_ip_check = $strict_ip_check;
        return $this;
    }
    
    /**
     * Gets strict_timeout
     * @return bool
     */
    public function getStrictTimeout()
    {
        return $this->strict_timeout;
    }
  
    /**
     * Sets strict_timeout
     * @param bool $strict_timeout 
     * @return $this
     */
    public function setStrictTimeout($strict_timeout)
    {
        
        $this->strict_timeout = $strict_timeout;
        return $this;
    }
    
    /**
     * Gets ticker_group
     * @return string
     */
    public function getTickerGroup()
    {
        return $this->ticker_group;
    }
  
    /**
     * Sets ticker_group
     * @param string $ticker_group 
     * @return $this
     */
    public function setTickerGroup($ticker_group)
    {
        
        $this->ticker_group = $ticker_group;
        return $this;
    }
    
    /**
     * Gets ticker_pinned
     * @return bool
     */
    public function getTickerPinned()
    {
        return $this->ticker_pinned;
    }
  
    /**
     * Sets ticker_pinned
     * @param bool $ticker_pinned 
     * @return $this
     */
    public function setTickerPinned($ticker_pinned)
    {
        
        $this->ticker_pinned = $ticker_pinned;
        return $this;
    }
    
    /**
     * Gets trade_layout
     * @return string
     */
    public function getTradeLayout()
    {
        return $this->trade_layout;
    }
  
    /**
     * Sets trade_layout
     * @param string $trade_layout 
     * @return $this
     */
    public function setTradeLayout($trade_layout)
    {
        
        $this->trade_layout = $trade_layout;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
