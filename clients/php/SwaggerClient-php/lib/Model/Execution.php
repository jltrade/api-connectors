<?php
/**
 * Execution
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * Execution Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Execution implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'exec_id' => 'string',
        'order_id' => 'string',
        'cl_ord_id' => 'string',
        'cl_ord_link_id' => 'string',
        'account' => 'Number',
        'symbol' => 'string',
        'side' => 'string',
        'last_qty' => 'Number',
        'last_px' => 'double',
        'underlying_last_px' => 'double',
        'last_mkt' => 'string',
        'last_liquidity_ind' => 'string',
        'simple_order_qty' => 'double',
        'order_qty' => 'Number',
        'price' => 'double',
        'display_qty' => 'Number',
        'stop_px' => 'double',
        'peg_offset_value' => 'double',
        'peg_price_type' => 'string',
        'currency' => 'string',
        'settl_currency' => 'string',
        'exec_type' => 'string',
        'ord_type' => 'string',
        'time_in_force' => 'string',
        'exec_inst' => 'string',
        'contingency_type' => 'string',
        'ex_destination' => 'string',
        'ord_status' => 'string',
        'triggered' => 'string',
        'working_indicator' => 'bool',
        'ord_rej_reason' => 'string',
        'simple_leaves_qty' => 'double',
        'leaves_qty' => 'Number',
        'simple_cum_qty' => 'double',
        'cum_qty' => 'Number',
        'avg_px' => 'double',
        'commission' => 'double',
        'trade_publish_indicator' => 'string',
        'multi_leg_reporting_type' => 'string',
        'text' => 'string',
        'trd_match_id' => 'string',
        'exec_cost' => 'Number',
        'exec_comm' => 'Number',
        'home_notional' => 'double',
        'foreign_notional' => 'double',
        'transact_time' => '\DateTime',
        'timestamp' => '\DateTime'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'exec_id' => 'execID',
        'order_id' => 'orderID',
        'cl_ord_id' => 'clOrdID',
        'cl_ord_link_id' => 'clOrdLinkID',
        'account' => 'account',
        'symbol' => 'symbol',
        'side' => 'side',
        'last_qty' => 'lastQty',
        'last_px' => 'lastPx',
        'underlying_last_px' => 'underlyingLastPx',
        'last_mkt' => 'lastMkt',
        'last_liquidity_ind' => 'lastLiquidityInd',
        'simple_order_qty' => 'simpleOrderQty',
        'order_qty' => 'orderQty',
        'price' => 'price',
        'display_qty' => 'displayQty',
        'stop_px' => 'stopPx',
        'peg_offset_value' => 'pegOffsetValue',
        'peg_price_type' => 'pegPriceType',
        'currency' => 'currency',
        'settl_currency' => 'settlCurrency',
        'exec_type' => 'execType',
        'ord_type' => 'ordType',
        'time_in_force' => 'timeInForce',
        'exec_inst' => 'execInst',
        'contingency_type' => 'contingencyType',
        'ex_destination' => 'exDestination',
        'ord_status' => 'ordStatus',
        'triggered' => 'triggered',
        'working_indicator' => 'workingIndicator',
        'ord_rej_reason' => 'ordRejReason',
        'simple_leaves_qty' => 'simpleLeavesQty',
        'leaves_qty' => 'leavesQty',
        'simple_cum_qty' => 'simpleCumQty',
        'cum_qty' => 'cumQty',
        'avg_px' => 'avgPx',
        'commission' => 'commission',
        'trade_publish_indicator' => 'tradePublishIndicator',
        'multi_leg_reporting_type' => 'multiLegReportingType',
        'text' => 'text',
        'trd_match_id' => 'trdMatchID',
        'exec_cost' => 'execCost',
        'exec_comm' => 'execComm',
        'home_notional' => 'homeNotional',
        'foreign_notional' => 'foreignNotional',
        'transact_time' => 'transactTime',
        'timestamp' => 'timestamp'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'exec_id' => 'setExecId',
        'order_id' => 'setOrderId',
        'cl_ord_id' => 'setClOrdId',
        'cl_ord_link_id' => 'setClOrdLinkId',
        'account' => 'setAccount',
        'symbol' => 'setSymbol',
        'side' => 'setSide',
        'last_qty' => 'setLastQty',
        'last_px' => 'setLastPx',
        'underlying_last_px' => 'setUnderlyingLastPx',
        'last_mkt' => 'setLastMkt',
        'last_liquidity_ind' => 'setLastLiquidityInd',
        'simple_order_qty' => 'setSimpleOrderQty',
        'order_qty' => 'setOrderQty',
        'price' => 'setPrice',
        'display_qty' => 'setDisplayQty',
        'stop_px' => 'setStopPx',
        'peg_offset_value' => 'setPegOffsetValue',
        'peg_price_type' => 'setPegPriceType',
        'currency' => 'setCurrency',
        'settl_currency' => 'setSettlCurrency',
        'exec_type' => 'setExecType',
        'ord_type' => 'setOrdType',
        'time_in_force' => 'setTimeInForce',
        'exec_inst' => 'setExecInst',
        'contingency_type' => 'setContingencyType',
        'ex_destination' => 'setExDestination',
        'ord_status' => 'setOrdStatus',
        'triggered' => 'setTriggered',
        'working_indicator' => 'setWorkingIndicator',
        'ord_rej_reason' => 'setOrdRejReason',
        'simple_leaves_qty' => 'setSimpleLeavesQty',
        'leaves_qty' => 'setLeavesQty',
        'simple_cum_qty' => 'setSimpleCumQty',
        'cum_qty' => 'setCumQty',
        'avg_px' => 'setAvgPx',
        'commission' => 'setCommission',
        'trade_publish_indicator' => 'setTradePublishIndicator',
        'multi_leg_reporting_type' => 'setMultiLegReportingType',
        'text' => 'setText',
        'trd_match_id' => 'setTrdMatchId',
        'exec_cost' => 'setExecCost',
        'exec_comm' => 'setExecComm',
        'home_notional' => 'setHomeNotional',
        'foreign_notional' => 'setForeignNotional',
        'transact_time' => 'setTransactTime',
        'timestamp' => 'setTimestamp'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'exec_id' => 'getExecId',
        'order_id' => 'getOrderId',
        'cl_ord_id' => 'getClOrdId',
        'cl_ord_link_id' => 'getClOrdLinkId',
        'account' => 'getAccount',
        'symbol' => 'getSymbol',
        'side' => 'getSide',
        'last_qty' => 'getLastQty',
        'last_px' => 'getLastPx',
        'underlying_last_px' => 'getUnderlyingLastPx',
        'last_mkt' => 'getLastMkt',
        'last_liquidity_ind' => 'getLastLiquidityInd',
        'simple_order_qty' => 'getSimpleOrderQty',
        'order_qty' => 'getOrderQty',
        'price' => 'getPrice',
        'display_qty' => 'getDisplayQty',
        'stop_px' => 'getStopPx',
        'peg_offset_value' => 'getPegOffsetValue',
        'peg_price_type' => 'getPegPriceType',
        'currency' => 'getCurrency',
        'settl_currency' => 'getSettlCurrency',
        'exec_type' => 'getExecType',
        'ord_type' => 'getOrdType',
        'time_in_force' => 'getTimeInForce',
        'exec_inst' => 'getExecInst',
        'contingency_type' => 'getContingencyType',
        'ex_destination' => 'getExDestination',
        'ord_status' => 'getOrdStatus',
        'triggered' => 'getTriggered',
        'working_indicator' => 'getWorkingIndicator',
        'ord_rej_reason' => 'getOrdRejReason',
        'simple_leaves_qty' => 'getSimpleLeavesQty',
        'leaves_qty' => 'getLeavesQty',
        'simple_cum_qty' => 'getSimpleCumQty',
        'cum_qty' => 'getCumQty',
        'avg_px' => 'getAvgPx',
        'commission' => 'getCommission',
        'trade_publish_indicator' => 'getTradePublishIndicator',
        'multi_leg_reporting_type' => 'getMultiLegReportingType',
        'text' => 'getText',
        'trd_match_id' => 'getTrdMatchId',
        'exec_cost' => 'getExecCost',
        'exec_comm' => 'getExecComm',
        'home_notional' => 'getHomeNotional',
        'foreign_notional' => 'getForeignNotional',
        'transact_time' => 'getTransactTime',
        'timestamp' => 'getTimestamp'
    );
  
    
    /**
      * $exec_id 
      * @var string
      */
    protected $exec_id;
    
    /**
      * $order_id 
      * @var string
      */
    protected $order_id;
    
    /**
      * $cl_ord_id 
      * @var string
      */
    protected $cl_ord_id;
    
    /**
      * $cl_ord_link_id 
      * @var string
      */
    protected $cl_ord_link_id;
    
    /**
      * $account 
      * @var Number
      */
    protected $account;
    
    /**
      * $symbol 
      * @var string
      */
    protected $symbol;
    
    /**
      * $side 
      * @var string
      */
    protected $side;
    
    /**
      * $last_qty 
      * @var Number
      */
    protected $last_qty;
    
    /**
      * $last_px 
      * @var double
      */
    protected $last_px;
    
    /**
      * $underlying_last_px 
      * @var double
      */
    protected $underlying_last_px;
    
    /**
      * $last_mkt 
      * @var string
      */
    protected $last_mkt;
    
    /**
      * $last_liquidity_ind 
      * @var string
      */
    protected $last_liquidity_ind;
    
    /**
      * $simple_order_qty 
      * @var double
      */
    protected $simple_order_qty;
    
    /**
      * $order_qty 
      * @var Number
      */
    protected $order_qty;
    
    /**
      * $price 
      * @var double
      */
    protected $price;
    
    /**
      * $display_qty 
      * @var Number
      */
    protected $display_qty;
    
    /**
      * $stop_px 
      * @var double
      */
    protected $stop_px;
    
    /**
      * $peg_offset_value 
      * @var double
      */
    protected $peg_offset_value;
    
    /**
      * $peg_price_type 
      * @var string
      */
    protected $peg_price_type;
    
    /**
      * $currency 
      * @var string
      */
    protected $currency;
    
    /**
      * $settl_currency 
      * @var string
      */
    protected $settl_currency;
    
    /**
      * $exec_type 
      * @var string
      */
    protected $exec_type;
    
    /**
      * $ord_type 
      * @var string
      */
    protected $ord_type;
    
    /**
      * $time_in_force 
      * @var string
      */
    protected $time_in_force;
    
    /**
      * $exec_inst 
      * @var string
      */
    protected $exec_inst;
    
    /**
      * $contingency_type 
      * @var string
      */
    protected $contingency_type;
    
    /**
      * $ex_destination 
      * @var string
      */
    protected $ex_destination;
    
    /**
      * $ord_status 
      * @var string
      */
    protected $ord_status;
    
    /**
      * $triggered 
      * @var string
      */
    protected $triggered;
    
    /**
      * $working_indicator 
      * @var bool
      */
    protected $working_indicator;
    
    /**
      * $ord_rej_reason 
      * @var string
      */
    protected $ord_rej_reason;
    
    /**
      * $simple_leaves_qty 
      * @var double
      */
    protected $simple_leaves_qty;
    
    /**
      * $leaves_qty 
      * @var Number
      */
    protected $leaves_qty;
    
    /**
      * $simple_cum_qty 
      * @var double
      */
    protected $simple_cum_qty;
    
    /**
      * $cum_qty 
      * @var Number
      */
    protected $cum_qty;
    
    /**
      * $avg_px 
      * @var double
      */
    protected $avg_px;
    
    /**
      * $commission 
      * @var double
      */
    protected $commission;
    
    /**
      * $trade_publish_indicator 
      * @var string
      */
    protected $trade_publish_indicator;
    
    /**
      * $multi_leg_reporting_type 
      * @var string
      */
    protected $multi_leg_reporting_type;
    
    /**
      * $text 
      * @var string
      */
    protected $text;
    
    /**
      * $trd_match_id 
      * @var string
      */
    protected $trd_match_id;
    
    /**
      * $exec_cost 
      * @var Number
      */
    protected $exec_cost;
    
    /**
      * $exec_comm 
      * @var Number
      */
    protected $exec_comm;
    
    /**
      * $home_notional 
      * @var double
      */
    protected $home_notional;
    
    /**
      * $foreign_notional 
      * @var double
      */
    protected $foreign_notional;
    
    /**
      * $transact_time 
      * @var \DateTime
      */
    protected $transact_time;
    
    /**
      * $timestamp 
      * @var \DateTime
      */
    protected $timestamp;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->exec_id = $data["exec_id"];
            $this->order_id = $data["order_id"];
            $this->cl_ord_id = $data["cl_ord_id"];
            $this->cl_ord_link_id = $data["cl_ord_link_id"];
            $this->account = $data["account"];
            $this->symbol = $data["symbol"];
            $this->side = $data["side"];
            $this->last_qty = $data["last_qty"];
            $this->last_px = $data["last_px"];
            $this->underlying_last_px = $data["underlying_last_px"];
            $this->last_mkt = $data["last_mkt"];
            $this->last_liquidity_ind = $data["last_liquidity_ind"];
            $this->simple_order_qty = $data["simple_order_qty"];
            $this->order_qty = $data["order_qty"];
            $this->price = $data["price"];
            $this->display_qty = $data["display_qty"];
            $this->stop_px = $data["stop_px"];
            $this->peg_offset_value = $data["peg_offset_value"];
            $this->peg_price_type = $data["peg_price_type"];
            $this->currency = $data["currency"];
            $this->settl_currency = $data["settl_currency"];
            $this->exec_type = $data["exec_type"];
            $this->ord_type = $data["ord_type"];
            $this->time_in_force = $data["time_in_force"];
            $this->exec_inst = $data["exec_inst"];
            $this->contingency_type = $data["contingency_type"];
            $this->ex_destination = $data["ex_destination"];
            $this->ord_status = $data["ord_status"];
            $this->triggered = $data["triggered"];
            $this->working_indicator = $data["working_indicator"];
            $this->ord_rej_reason = $data["ord_rej_reason"];
            $this->simple_leaves_qty = $data["simple_leaves_qty"];
            $this->leaves_qty = $data["leaves_qty"];
            $this->simple_cum_qty = $data["simple_cum_qty"];
            $this->cum_qty = $data["cum_qty"];
            $this->avg_px = $data["avg_px"];
            $this->commission = $data["commission"];
            $this->trade_publish_indicator = $data["trade_publish_indicator"];
            $this->multi_leg_reporting_type = $data["multi_leg_reporting_type"];
            $this->text = $data["text"];
            $this->trd_match_id = $data["trd_match_id"];
            $this->exec_cost = $data["exec_cost"];
            $this->exec_comm = $data["exec_comm"];
            $this->home_notional = $data["home_notional"];
            $this->foreign_notional = $data["foreign_notional"];
            $this->transact_time = $data["transact_time"];
            $this->timestamp = $data["timestamp"];
        }
    }
    
    /**
     * Gets exec_id
     * @return string
     */
    public function getExecId()
    {
        return $this->exec_id;
    }
  
    /**
     * Sets exec_id
     * @param string $exec_id 
     * @return $this
     */
    public function setExecId($exec_id)
    {
        
        $this->exec_id = $exec_id;
        return $this;
    }
    
    /**
     * Gets order_id
     * @return string
     */
    public function getOrderId()
    {
        return $this->order_id;
    }
  
    /**
     * Sets order_id
     * @param string $order_id 
     * @return $this
     */
    public function setOrderId($order_id)
    {
        
        $this->order_id = $order_id;
        return $this;
    }
    
    /**
     * Gets cl_ord_id
     * @return string
     */
    public function getClOrdId()
    {
        return $this->cl_ord_id;
    }
  
    /**
     * Sets cl_ord_id
     * @param string $cl_ord_id 
     * @return $this
     */
    public function setClOrdId($cl_ord_id)
    {
        
        $this->cl_ord_id = $cl_ord_id;
        return $this;
    }
    
    /**
     * Gets cl_ord_link_id
     * @return string
     */
    public function getClOrdLinkId()
    {
        return $this->cl_ord_link_id;
    }
  
    /**
     * Sets cl_ord_link_id
     * @param string $cl_ord_link_id 
     * @return $this
     */
    public function setClOrdLinkId($cl_ord_link_id)
    {
        
        $this->cl_ord_link_id = $cl_ord_link_id;
        return $this;
    }
    
    /**
     * Gets account
     * @return Number
     */
    public function getAccount()
    {
        return $this->account;
    }
  
    /**
     * Sets account
     * @param Number $account 
     * @return $this
     */
    public function setAccount($account)
    {
        
        $this->account = $account;
        return $this;
    }
    
    /**
     * Gets symbol
     * @return string
     */
    public function getSymbol()
    {
        return $this->symbol;
    }
  
    /**
     * Sets symbol
     * @param string $symbol 
     * @return $this
     */
    public function setSymbol($symbol)
    {
        
        $this->symbol = $symbol;
        return $this;
    }
    
    /**
     * Gets side
     * @return string
     */
    public function getSide()
    {
        return $this->side;
    }
  
    /**
     * Sets side
     * @param string $side 
     * @return $this
     */
    public function setSide($side)
    {
        
        $this->side = $side;
        return $this;
    }
    
    /**
     * Gets last_qty
     * @return Number
     */
    public function getLastQty()
    {
        return $this->last_qty;
    }
  
    /**
     * Sets last_qty
     * @param Number $last_qty 
     * @return $this
     */
    public function setLastQty($last_qty)
    {
        
        $this->last_qty = $last_qty;
        return $this;
    }
    
    /**
     * Gets last_px
     * @return double
     */
    public function getLastPx()
    {
        return $this->last_px;
    }
  
    /**
     * Sets last_px
     * @param double $last_px 
     * @return $this
     */
    public function setLastPx($last_px)
    {
        
        $this->last_px = $last_px;
        return $this;
    }
    
    /**
     * Gets underlying_last_px
     * @return double
     */
    public function getUnderlyingLastPx()
    {
        return $this->underlying_last_px;
    }
  
    /**
     * Sets underlying_last_px
     * @param double $underlying_last_px 
     * @return $this
     */
    public function setUnderlyingLastPx($underlying_last_px)
    {
        
        $this->underlying_last_px = $underlying_last_px;
        return $this;
    }
    
    /**
     * Gets last_mkt
     * @return string
     */
    public function getLastMkt()
    {
        return $this->last_mkt;
    }
  
    /**
     * Sets last_mkt
     * @param string $last_mkt 
     * @return $this
     */
    public function setLastMkt($last_mkt)
    {
        
        $this->last_mkt = $last_mkt;
        return $this;
    }
    
    /**
     * Gets last_liquidity_ind
     * @return string
     */
    public function getLastLiquidityInd()
    {
        return $this->last_liquidity_ind;
    }
  
    /**
     * Sets last_liquidity_ind
     * @param string $last_liquidity_ind 
     * @return $this
     */
    public function setLastLiquidityInd($last_liquidity_ind)
    {
        
        $this->last_liquidity_ind = $last_liquidity_ind;
        return $this;
    }
    
    /**
     * Gets simple_order_qty
     * @return double
     */
    public function getSimpleOrderQty()
    {
        return $this->simple_order_qty;
    }
  
    /**
     * Sets simple_order_qty
     * @param double $simple_order_qty 
     * @return $this
     */
    public function setSimpleOrderQty($simple_order_qty)
    {
        
        $this->simple_order_qty = $simple_order_qty;
        return $this;
    }
    
    /**
     * Gets order_qty
     * @return Number
     */
    public function getOrderQty()
    {
        return $this->order_qty;
    }
  
    /**
     * Sets order_qty
     * @param Number $order_qty 
     * @return $this
     */
    public function setOrderQty($order_qty)
    {
        
        $this->order_qty = $order_qty;
        return $this;
    }
    
    /**
     * Gets price
     * @return double
     */
    public function getPrice()
    {
        return $this->price;
    }
  
    /**
     * Sets price
     * @param double $price 
     * @return $this
     */
    public function setPrice($price)
    {
        
        $this->price = $price;
        return $this;
    }
    
    /**
     * Gets display_qty
     * @return Number
     */
    public function getDisplayQty()
    {
        return $this->display_qty;
    }
  
    /**
     * Sets display_qty
     * @param Number $display_qty 
     * @return $this
     */
    public function setDisplayQty($display_qty)
    {
        
        $this->display_qty = $display_qty;
        return $this;
    }
    
    /**
     * Gets stop_px
     * @return double
     */
    public function getStopPx()
    {
        return $this->stop_px;
    }
  
    /**
     * Sets stop_px
     * @param double $stop_px 
     * @return $this
     */
    public function setStopPx($stop_px)
    {
        
        $this->stop_px = $stop_px;
        return $this;
    }
    
    /**
     * Gets peg_offset_value
     * @return double
     */
    public function getPegOffsetValue()
    {
        return $this->peg_offset_value;
    }
  
    /**
     * Sets peg_offset_value
     * @param double $peg_offset_value 
     * @return $this
     */
    public function setPegOffsetValue($peg_offset_value)
    {
        
        $this->peg_offset_value = $peg_offset_value;
        return $this;
    }
    
    /**
     * Gets peg_price_type
     * @return string
     */
    public function getPegPriceType()
    {
        return $this->peg_price_type;
    }
  
    /**
     * Sets peg_price_type
     * @param string $peg_price_type 
     * @return $this
     */
    public function setPegPriceType($peg_price_type)
    {
        
        $this->peg_price_type = $peg_price_type;
        return $this;
    }
    
    /**
     * Gets currency
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }
  
    /**
     * Sets currency
     * @param string $currency 
     * @return $this
     */
    public function setCurrency($currency)
    {
        
        $this->currency = $currency;
        return $this;
    }
    
    /**
     * Gets settl_currency
     * @return string
     */
    public function getSettlCurrency()
    {
        return $this->settl_currency;
    }
  
    /**
     * Sets settl_currency
     * @param string $settl_currency 
     * @return $this
     */
    public function setSettlCurrency($settl_currency)
    {
        
        $this->settl_currency = $settl_currency;
        return $this;
    }
    
    /**
     * Gets exec_type
     * @return string
     */
    public function getExecType()
    {
        return $this->exec_type;
    }
  
    /**
     * Sets exec_type
     * @param string $exec_type 
     * @return $this
     */
    public function setExecType($exec_type)
    {
        
        $this->exec_type = $exec_type;
        return $this;
    }
    
    /**
     * Gets ord_type
     * @return string
     */
    public function getOrdType()
    {
        return $this->ord_type;
    }
  
    /**
     * Sets ord_type
     * @param string $ord_type 
     * @return $this
     */
    public function setOrdType($ord_type)
    {
        
        $this->ord_type = $ord_type;
        return $this;
    }
    
    /**
     * Gets time_in_force
     * @return string
     */
    public function getTimeInForce()
    {
        return $this->time_in_force;
    }
  
    /**
     * Sets time_in_force
     * @param string $time_in_force 
     * @return $this
     */
    public function setTimeInForce($time_in_force)
    {
        
        $this->time_in_force = $time_in_force;
        return $this;
    }
    
    /**
     * Gets exec_inst
     * @return string
     */
    public function getExecInst()
    {
        return $this->exec_inst;
    }
  
    /**
     * Sets exec_inst
     * @param string $exec_inst 
     * @return $this
     */
    public function setExecInst($exec_inst)
    {
        
        $this->exec_inst = $exec_inst;
        return $this;
    }
    
    /**
     * Gets contingency_type
     * @return string
     */
    public function getContingencyType()
    {
        return $this->contingency_type;
    }
  
    /**
     * Sets contingency_type
     * @param string $contingency_type 
     * @return $this
     */
    public function setContingencyType($contingency_type)
    {
        
        $this->contingency_type = $contingency_type;
        return $this;
    }
    
    /**
     * Gets ex_destination
     * @return string
     */
    public function getExDestination()
    {
        return $this->ex_destination;
    }
  
    /**
     * Sets ex_destination
     * @param string $ex_destination 
     * @return $this
     */
    public function setExDestination($ex_destination)
    {
        
        $this->ex_destination = $ex_destination;
        return $this;
    }
    
    /**
     * Gets ord_status
     * @return string
     */
    public function getOrdStatus()
    {
        return $this->ord_status;
    }
  
    /**
     * Sets ord_status
     * @param string $ord_status 
     * @return $this
     */
    public function setOrdStatus($ord_status)
    {
        
        $this->ord_status = $ord_status;
        return $this;
    }
    
    /**
     * Gets triggered
     * @return string
     */
    public function getTriggered()
    {
        return $this->triggered;
    }
  
    /**
     * Sets triggered
     * @param string $triggered 
     * @return $this
     */
    public function setTriggered($triggered)
    {
        
        $this->triggered = $triggered;
        return $this;
    }
    
    /**
     * Gets working_indicator
     * @return bool
     */
    public function getWorkingIndicator()
    {
        return $this->working_indicator;
    }
  
    /**
     * Sets working_indicator
     * @param bool $working_indicator 
     * @return $this
     */
    public function setWorkingIndicator($working_indicator)
    {
        
        $this->working_indicator = $working_indicator;
        return $this;
    }
    
    /**
     * Gets ord_rej_reason
     * @return string
     */
    public function getOrdRejReason()
    {
        return $this->ord_rej_reason;
    }
  
    /**
     * Sets ord_rej_reason
     * @param string $ord_rej_reason 
     * @return $this
     */
    public function setOrdRejReason($ord_rej_reason)
    {
        
        $this->ord_rej_reason = $ord_rej_reason;
        return $this;
    }
    
    /**
     * Gets simple_leaves_qty
     * @return double
     */
    public function getSimpleLeavesQty()
    {
        return $this->simple_leaves_qty;
    }
  
    /**
     * Sets simple_leaves_qty
     * @param double $simple_leaves_qty 
     * @return $this
     */
    public function setSimpleLeavesQty($simple_leaves_qty)
    {
        
        $this->simple_leaves_qty = $simple_leaves_qty;
        return $this;
    }
    
    /**
     * Gets leaves_qty
     * @return Number
     */
    public function getLeavesQty()
    {
        return $this->leaves_qty;
    }
  
    /**
     * Sets leaves_qty
     * @param Number $leaves_qty 
     * @return $this
     */
    public function setLeavesQty($leaves_qty)
    {
        
        $this->leaves_qty = $leaves_qty;
        return $this;
    }
    
    /**
     * Gets simple_cum_qty
     * @return double
     */
    public function getSimpleCumQty()
    {
        return $this->simple_cum_qty;
    }
  
    /**
     * Sets simple_cum_qty
     * @param double $simple_cum_qty 
     * @return $this
     */
    public function setSimpleCumQty($simple_cum_qty)
    {
        
        $this->simple_cum_qty = $simple_cum_qty;
        return $this;
    }
    
    /**
     * Gets cum_qty
     * @return Number
     */
    public function getCumQty()
    {
        return $this->cum_qty;
    }
  
    /**
     * Sets cum_qty
     * @param Number $cum_qty 
     * @return $this
     */
    public function setCumQty($cum_qty)
    {
        
        $this->cum_qty = $cum_qty;
        return $this;
    }
    
    /**
     * Gets avg_px
     * @return double
     */
    public function getAvgPx()
    {
        return $this->avg_px;
    }
  
    /**
     * Sets avg_px
     * @param double $avg_px 
     * @return $this
     */
    public function setAvgPx($avg_px)
    {
        
        $this->avg_px = $avg_px;
        return $this;
    }
    
    /**
     * Gets commission
     * @return double
     */
    public function getCommission()
    {
        return $this->commission;
    }
  
    /**
     * Sets commission
     * @param double $commission 
     * @return $this
     */
    public function setCommission($commission)
    {
        
        $this->commission = $commission;
        return $this;
    }
    
    /**
     * Gets trade_publish_indicator
     * @return string
     */
    public function getTradePublishIndicator()
    {
        return $this->trade_publish_indicator;
    }
  
    /**
     * Sets trade_publish_indicator
     * @param string $trade_publish_indicator 
     * @return $this
     */
    public function setTradePublishIndicator($trade_publish_indicator)
    {
        
        $this->trade_publish_indicator = $trade_publish_indicator;
        return $this;
    }
    
    /**
     * Gets multi_leg_reporting_type
     * @return string
     */
    public function getMultiLegReportingType()
    {
        return $this->multi_leg_reporting_type;
    }
  
    /**
     * Sets multi_leg_reporting_type
     * @param string $multi_leg_reporting_type 
     * @return $this
     */
    public function setMultiLegReportingType($multi_leg_reporting_type)
    {
        
        $this->multi_leg_reporting_type = $multi_leg_reporting_type;
        return $this;
    }
    
    /**
     * Gets text
     * @return string
     */
    public function getText()
    {
        return $this->text;
    }
  
    /**
     * Sets text
     * @param string $text 
     * @return $this
     */
    public function setText($text)
    {
        
        $this->text = $text;
        return $this;
    }
    
    /**
     * Gets trd_match_id
     * @return string
     */
    public function getTrdMatchId()
    {
        return $this->trd_match_id;
    }
  
    /**
     * Sets trd_match_id
     * @param string $trd_match_id 
     * @return $this
     */
    public function setTrdMatchId($trd_match_id)
    {
        
        $this->trd_match_id = $trd_match_id;
        return $this;
    }
    
    /**
     * Gets exec_cost
     * @return Number
     */
    public function getExecCost()
    {
        return $this->exec_cost;
    }
  
    /**
     * Sets exec_cost
     * @param Number $exec_cost 
     * @return $this
     */
    public function setExecCost($exec_cost)
    {
        
        $this->exec_cost = $exec_cost;
        return $this;
    }
    
    /**
     * Gets exec_comm
     * @return Number
     */
    public function getExecComm()
    {
        return $this->exec_comm;
    }
  
    /**
     * Sets exec_comm
     * @param Number $exec_comm 
     * @return $this
     */
    public function setExecComm($exec_comm)
    {
        
        $this->exec_comm = $exec_comm;
        return $this;
    }
    
    /**
     * Gets home_notional
     * @return double
     */
    public function getHomeNotional()
    {
        return $this->home_notional;
    }
  
    /**
     * Sets home_notional
     * @param double $home_notional 
     * @return $this
     */
    public function setHomeNotional($home_notional)
    {
        
        $this->home_notional = $home_notional;
        return $this;
    }
    
    /**
     * Gets foreign_notional
     * @return double
     */
    public function getForeignNotional()
    {
        return $this->foreign_notional;
    }
  
    /**
     * Sets foreign_notional
     * @param double $foreign_notional 
     * @return $this
     */
    public function setForeignNotional($foreign_notional)
    {
        
        $this->foreign_notional = $foreign_notional;
        return $this;
    }
    
    /**
     * Gets transact_time
     * @return \DateTime
     */
    public function getTransactTime()
    {
        return $this->transact_time;
    }
  
    /**
     * Sets transact_time
     * @param \DateTime $transact_time 
     * @return $this
     */
    public function setTransactTime($transact_time)
    {
        
        $this->transact_time = $transact_time;
        return $this;
    }
    
    /**
     * Gets timestamp
     * @return \DateTime
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }
  
    /**
     * Sets timestamp
     * @param \DateTime $timestamp 
     * @return $this
     */
    public function setTimestamp($timestamp)
    {
        
        $this->timestamp = $timestamp;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
