<?php
/**
 * User
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * User Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class User implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'Number',
        'owner_id' => 'Number',
        'firstname' => 'string',
        'lastname' => 'string',
        'status' => 'string',
        'username' => 'string',
        'email' => 'string',
        'phone' => 'string',
        'country_code' => 'Number',
        'created' => '\DateTime',
        'last_updated' => '\DateTime',
        'preferences' => '\Swagger\Client\Model\UserPreferences',
        'tfa_enabled' => 'string',
        'affiliate_id' => 'string',
        'pgp_pub_key' => 'string',
        'country' => 'string',
        'disabled' => 'bool'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'owner_id' => 'ownerId',
        'firstname' => 'firstname',
        'lastname' => 'lastname',
        'status' => 'status',
        'username' => 'username',
        'email' => 'email',
        'phone' => 'phone',
        'country_code' => 'countryCode',
        'created' => 'created',
        'last_updated' => 'lastUpdated',
        'preferences' => 'preferences',
        'tfa_enabled' => 'TFAEnabled',
        'affiliate_id' => 'affiliateID',
        'pgp_pub_key' => 'pgpPubKey',
        'country' => 'country',
        'disabled' => 'disabled'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'owner_id' => 'setOwnerId',
        'firstname' => 'setFirstname',
        'lastname' => 'setLastname',
        'status' => 'setStatus',
        'username' => 'setUsername',
        'email' => 'setEmail',
        'phone' => 'setPhone',
        'country_code' => 'setCountryCode',
        'created' => 'setCreated',
        'last_updated' => 'setLastUpdated',
        'preferences' => 'setPreferences',
        'tfa_enabled' => 'setTfaEnabled',
        'affiliate_id' => 'setAffiliateId',
        'pgp_pub_key' => 'setPgpPubKey',
        'country' => 'setCountry',
        'disabled' => 'setDisabled'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'owner_id' => 'getOwnerId',
        'firstname' => 'getFirstname',
        'lastname' => 'getLastname',
        'status' => 'getStatus',
        'username' => 'getUsername',
        'email' => 'getEmail',
        'phone' => 'getPhone',
        'country_code' => 'getCountryCode',
        'created' => 'getCreated',
        'last_updated' => 'getLastUpdated',
        'preferences' => 'getPreferences',
        'tfa_enabled' => 'getTfaEnabled',
        'affiliate_id' => 'getAffiliateId',
        'pgp_pub_key' => 'getPgpPubKey',
        'country' => 'getCountry',
        'disabled' => 'getDisabled'
    );
  
    
    /**
      * $id 
      * @var Number
      */
    protected $id;
    
    /**
      * $owner_id 
      * @var Number
      */
    protected $owner_id;
    
    /**
      * $firstname 
      * @var string
      */
    protected $firstname;
    
    /**
      * $lastname 
      * @var string
      */
    protected $lastname;
    
    /**
      * $status 
      * @var string
      */
    protected $status;
    
    /**
      * $username 
      * @var string
      */
    protected $username;
    
    /**
      * $email 
      * @var string
      */
    protected $email;
    
    /**
      * $phone 
      * @var string
      */
    protected $phone;
    
    /**
      * $country_code 
      * @var Number
      */
    protected $country_code;
    
    /**
      * $created 
      * @var \DateTime
      */
    protected $created;
    
    /**
      * $last_updated 
      * @var \DateTime
      */
    protected $last_updated;
    
    /**
      * $preferences 
      * @var \Swagger\Client\Model\UserPreferences
      */
    protected $preferences;
    
    /**
      * $tfa_enabled 
      * @var string
      */
    protected $tfa_enabled;
    
    /**
      * $affiliate_id 
      * @var string
      */
    protected $affiliate_id;
    
    /**
      * $pgp_pub_key 
      * @var string
      */
    protected $pgp_pub_key;
    
    /**
      * $country 
      * @var string
      */
    protected $country;
    
    /**
      * $disabled 
      * @var bool
      */
    protected $disabled;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->owner_id = $data["owner_id"];
            $this->firstname = $data["firstname"];
            $this->lastname = $data["lastname"];
            $this->status = $data["status"];
            $this->username = $data["username"];
            $this->email = $data["email"];
            $this->phone = $data["phone"];
            $this->country_code = $data["country_code"];
            $this->created = $data["created"];
            $this->last_updated = $data["last_updated"];
            $this->preferences = $data["preferences"];
            $this->tfa_enabled = $data["tfa_enabled"];
            $this->affiliate_id = $data["affiliate_id"];
            $this->pgp_pub_key = $data["pgp_pub_key"];
            $this->country = $data["country"];
            $this->disabled = $data["disabled"];
        }
    }
    
    /**
     * Gets id
     * @return Number
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param Number $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets owner_id
     * @return Number
     */
    public function getOwnerId()
    {
        return $this->owner_id;
    }
  
    /**
     * Sets owner_id
     * @param Number $owner_id 
     * @return $this
     */
    public function setOwnerId($owner_id)
    {
        
        $this->owner_id = $owner_id;
        return $this;
    }
    
    /**
     * Gets firstname
     * @return string
     */
    public function getFirstname()
    {
        return $this->firstname;
    }
  
    /**
     * Sets firstname
     * @param string $firstname 
     * @return $this
     */
    public function setFirstname($firstname)
    {
        
        $this->firstname = $firstname;
        return $this;
    }
    
    /**
     * Gets lastname
     * @return string
     */
    public function getLastname()
    {
        return $this->lastname;
    }
  
    /**
     * Sets lastname
     * @param string $lastname 
     * @return $this
     */
    public function setLastname($lastname)
    {
        
        $this->lastname = $lastname;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status 
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets username
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }
  
    /**
     * Sets username
     * @param string $username 
     * @return $this
     */
    public function setUsername($username)
    {
        
        $this->username = $username;
        return $this;
    }
    
    /**
     * Gets email
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }
  
    /**
     * Sets email
     * @param string $email 
     * @return $this
     */
    public function setEmail($email)
    {
        
        $this->email = $email;
        return $this;
    }
    
    /**
     * Gets phone
     * @return string
     */
    public function getPhone()
    {
        return $this->phone;
    }
  
    /**
     * Sets phone
     * @param string $phone 
     * @return $this
     */
    public function setPhone($phone)
    {
        
        $this->phone = $phone;
        return $this;
    }
    
    /**
     * Gets country_code
     * @return Number
     */
    public function getCountryCode()
    {
        return $this->country_code;
    }
  
    /**
     * Sets country_code
     * @param Number $country_code 
     * @return $this
     */
    public function setCountryCode($country_code)
    {
        
        $this->country_code = $country_code;
        return $this;
    }
    
    /**
     * Gets created
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->created;
    }
  
    /**
     * Sets created
     * @param \DateTime $created 
     * @return $this
     */
    public function setCreated($created)
    {
        
        $this->created = $created;
        return $this;
    }
    
    /**
     * Gets last_updated
     * @return \DateTime
     */
    public function getLastUpdated()
    {
        return $this->last_updated;
    }
  
    /**
     * Sets last_updated
     * @param \DateTime $last_updated 
     * @return $this
     */
    public function setLastUpdated($last_updated)
    {
        
        $this->last_updated = $last_updated;
        return $this;
    }
    
    /**
     * Gets preferences
     * @return \Swagger\Client\Model\UserPreferences
     */
    public function getPreferences()
    {
        return $this->preferences;
    }
  
    /**
     * Sets preferences
     * @param \Swagger\Client\Model\UserPreferences $preferences 
     * @return $this
     */
    public function setPreferences($preferences)
    {
        
        $this->preferences = $preferences;
        return $this;
    }
    
    /**
     * Gets tfa_enabled
     * @return string
     */
    public function getTfaEnabled()
    {
        return $this->tfa_enabled;
    }
  
    /**
     * Sets tfa_enabled
     * @param string $tfa_enabled 
     * @return $this
     */
    public function setTfaEnabled($tfa_enabled)
    {
        
        $this->tfa_enabled = $tfa_enabled;
        return $this;
    }
    
    /**
     * Gets affiliate_id
     * @return string
     */
    public function getAffiliateId()
    {
        return $this->affiliate_id;
    }
  
    /**
     * Sets affiliate_id
     * @param string $affiliate_id 
     * @return $this
     */
    public function setAffiliateId($affiliate_id)
    {
        
        $this->affiliate_id = $affiliate_id;
        return $this;
    }
    
    /**
     * Gets pgp_pub_key
     * @return string
     */
    public function getPgpPubKey()
    {
        return $this->pgp_pub_key;
    }
  
    /**
     * Sets pgp_pub_key
     * @param string $pgp_pub_key 
     * @return $this
     */
    public function setPgpPubKey($pgp_pub_key)
    {
        
        $this->pgp_pub_key = $pgp_pub_key;
        return $this;
    }
    
    /**
     * Gets country
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }
  
    /**
     * Sets country
     * @param string $country 
     * @return $this
     */
    public function setCountry($country)
    {
        
        $this->country = $country;
        return $this;
    }
    
    /**
     * Gets disabled
     * @return bool
     */
    public function getDisabled()
    {
        return $this->disabled;
    }
  
    /**
     * Sets disabled
     * @param bool $disabled 
     * @return $this
     */
    public function setDisabled($disabled)
    {
        
        $this->disabled = $disabled;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
