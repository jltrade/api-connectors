<?php
/**
 * Position
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * Position Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Position implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'account' => 'Number',
        'symbol' => 'string',
        'currency' => 'string',
        'underlying' => 'string',
        'quote_currency' => 'string',
        'commission' => 'double',
        'leverage' => 'double',
        'cross_margin' => 'bool',
        'rebalanced_pnl' => 'Number',
        'prev_realised_pnl' => 'Number',
        'prev_unrealised_pnl' => 'Number',
        'prev_close_price' => 'double',
        'opening_timestamp' => '\DateTime',
        'opening_qty' => 'Number',
        'opening_cost' => 'Number',
        'opening_comm' => 'Number',
        'open_order_buy_qty' => 'Number',
        'open_order_buy_cost' => 'Number',
        'open_order_buy_premium' => 'Number',
        'open_order_sell_qty' => 'Number',
        'open_order_sell_cost' => 'Number',
        'open_order_sell_premium' => 'Number',
        'exec_buy_qty' => 'Number',
        'exec_buy_cost' => 'Number',
        'exec_sell_qty' => 'Number',
        'exec_sell_cost' => 'Number',
        'exec_qty' => 'Number',
        'exec_cost' => 'Number',
        'exec_comm' => 'Number',
        'current_timestamp' => '\DateTime',
        'current_qty' => 'Number',
        'current_cost' => 'Number',
        'current_comm' => 'Number',
        'realised_cost' => 'Number',
        'unrealised_cost' => 'Number',
        'gross_open_cost' => 'Number',
        'gross_open_premium' => 'Number',
        'gross_exec_cost' => 'Number',
        'is_open' => 'bool',
        'mark_price' => 'double',
        'mark_value' => 'Number',
        'home_notional' => 'double',
        'foreign_notional' => 'double',
        'pos_state' => 'string',
        'pos_cost' => 'Number',
        'pos_cost2' => 'Number',
        'pos_cross' => 'Number',
        'pos_init' => 'Number',
        'pos_comm' => 'Number',
        'pos_loss' => 'Number',
        'pos_margin' => 'Number',
        'pos_maint' => 'Number',
        'pos_allowance' => 'Number',
        'taxable_margin' => 'Number',
        'init_margin' => 'Number',
        'maint_margin' => 'Number',
        'session_margin' => 'Number',
        'target_excess_margin' => 'Number',
        'var_margin' => 'Number',
        'realised_gross_pnl' => 'Number',
        'realised_tax' => 'Number',
        'realised_pnl' => 'Number',
        'unrealised_gross_pnl' => 'Number',
        'long_bankrupt' => 'Number',
        'short_bankrupt' => 'Number',
        'tax_base' => 'Number',
        'indicative_tax_rate' => 'double',
        'indicative_tax' => 'Number',
        'unrealised_tax' => 'Number',
        'unrealised_pnl' => 'Number',
        'unrealised_pnl_pcnt' => 'double',
        'unrealised_roe_pcnt' => 'double',
        'simple_qty' => 'double',
        'simple_cost' => 'double',
        'simple_value' => 'double',
        'simple_pnl' => 'double',
        'simple_pnl_pcnt' => 'double',
        'avg_cost_price' => 'double',
        'avg_entry_price' => 'double',
        'break_even_price' => 'double',
        'margin_call_price' => 'double',
        'liquidation_price' => 'double',
        'bankrupt_price' => 'double',
        'timestamp' => '\DateTime',
        'last_price' => 'double',
        'last_value' => 'Number'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'account' => 'account',
        'symbol' => 'symbol',
        'currency' => 'currency',
        'underlying' => 'underlying',
        'quote_currency' => 'quoteCurrency',
        'commission' => 'commission',
        'leverage' => 'leverage',
        'cross_margin' => 'crossMargin',
        'rebalanced_pnl' => 'rebalancedPnl',
        'prev_realised_pnl' => 'prevRealisedPnl',
        'prev_unrealised_pnl' => 'prevUnrealisedPnl',
        'prev_close_price' => 'prevClosePrice',
        'opening_timestamp' => 'openingTimestamp',
        'opening_qty' => 'openingQty',
        'opening_cost' => 'openingCost',
        'opening_comm' => 'openingComm',
        'open_order_buy_qty' => 'openOrderBuyQty',
        'open_order_buy_cost' => 'openOrderBuyCost',
        'open_order_buy_premium' => 'openOrderBuyPremium',
        'open_order_sell_qty' => 'openOrderSellQty',
        'open_order_sell_cost' => 'openOrderSellCost',
        'open_order_sell_premium' => 'openOrderSellPremium',
        'exec_buy_qty' => 'execBuyQty',
        'exec_buy_cost' => 'execBuyCost',
        'exec_sell_qty' => 'execSellQty',
        'exec_sell_cost' => 'execSellCost',
        'exec_qty' => 'execQty',
        'exec_cost' => 'execCost',
        'exec_comm' => 'execComm',
        'current_timestamp' => 'currentTimestamp',
        'current_qty' => 'currentQty',
        'current_cost' => 'currentCost',
        'current_comm' => 'currentComm',
        'realised_cost' => 'realisedCost',
        'unrealised_cost' => 'unrealisedCost',
        'gross_open_cost' => 'grossOpenCost',
        'gross_open_premium' => 'grossOpenPremium',
        'gross_exec_cost' => 'grossExecCost',
        'is_open' => 'isOpen',
        'mark_price' => 'markPrice',
        'mark_value' => 'markValue',
        'home_notional' => 'homeNotional',
        'foreign_notional' => 'foreignNotional',
        'pos_state' => 'posState',
        'pos_cost' => 'posCost',
        'pos_cost2' => 'posCost2',
        'pos_cross' => 'posCross',
        'pos_init' => 'posInit',
        'pos_comm' => 'posComm',
        'pos_loss' => 'posLoss',
        'pos_margin' => 'posMargin',
        'pos_maint' => 'posMaint',
        'pos_allowance' => 'posAllowance',
        'taxable_margin' => 'taxableMargin',
        'init_margin' => 'initMargin',
        'maint_margin' => 'maintMargin',
        'session_margin' => 'sessionMargin',
        'target_excess_margin' => 'targetExcessMargin',
        'var_margin' => 'varMargin',
        'realised_gross_pnl' => 'realisedGrossPnl',
        'realised_tax' => 'realisedTax',
        'realised_pnl' => 'realisedPnl',
        'unrealised_gross_pnl' => 'unrealisedGrossPnl',
        'long_bankrupt' => 'longBankrupt',
        'short_bankrupt' => 'shortBankrupt',
        'tax_base' => 'taxBase',
        'indicative_tax_rate' => 'indicativeTaxRate',
        'indicative_tax' => 'indicativeTax',
        'unrealised_tax' => 'unrealisedTax',
        'unrealised_pnl' => 'unrealisedPnl',
        'unrealised_pnl_pcnt' => 'unrealisedPnlPcnt',
        'unrealised_roe_pcnt' => 'unrealisedRoePcnt',
        'simple_qty' => 'simpleQty',
        'simple_cost' => 'simpleCost',
        'simple_value' => 'simpleValue',
        'simple_pnl' => 'simplePnl',
        'simple_pnl_pcnt' => 'simplePnlPcnt',
        'avg_cost_price' => 'avgCostPrice',
        'avg_entry_price' => 'avgEntryPrice',
        'break_even_price' => 'breakEvenPrice',
        'margin_call_price' => 'marginCallPrice',
        'liquidation_price' => 'liquidationPrice',
        'bankrupt_price' => 'bankruptPrice',
        'timestamp' => 'timestamp',
        'last_price' => 'lastPrice',
        'last_value' => 'lastValue'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'account' => 'setAccount',
        'symbol' => 'setSymbol',
        'currency' => 'setCurrency',
        'underlying' => 'setUnderlying',
        'quote_currency' => 'setQuoteCurrency',
        'commission' => 'setCommission',
        'leverage' => 'setLeverage',
        'cross_margin' => 'setCrossMargin',
        'rebalanced_pnl' => 'setRebalancedPnl',
        'prev_realised_pnl' => 'setPrevRealisedPnl',
        'prev_unrealised_pnl' => 'setPrevUnrealisedPnl',
        'prev_close_price' => 'setPrevClosePrice',
        'opening_timestamp' => 'setOpeningTimestamp',
        'opening_qty' => 'setOpeningQty',
        'opening_cost' => 'setOpeningCost',
        'opening_comm' => 'setOpeningComm',
        'open_order_buy_qty' => 'setOpenOrderBuyQty',
        'open_order_buy_cost' => 'setOpenOrderBuyCost',
        'open_order_buy_premium' => 'setOpenOrderBuyPremium',
        'open_order_sell_qty' => 'setOpenOrderSellQty',
        'open_order_sell_cost' => 'setOpenOrderSellCost',
        'open_order_sell_premium' => 'setOpenOrderSellPremium',
        'exec_buy_qty' => 'setExecBuyQty',
        'exec_buy_cost' => 'setExecBuyCost',
        'exec_sell_qty' => 'setExecSellQty',
        'exec_sell_cost' => 'setExecSellCost',
        'exec_qty' => 'setExecQty',
        'exec_cost' => 'setExecCost',
        'exec_comm' => 'setExecComm',
        'current_timestamp' => 'setCurrentTimestamp',
        'current_qty' => 'setCurrentQty',
        'current_cost' => 'setCurrentCost',
        'current_comm' => 'setCurrentComm',
        'realised_cost' => 'setRealisedCost',
        'unrealised_cost' => 'setUnrealisedCost',
        'gross_open_cost' => 'setGrossOpenCost',
        'gross_open_premium' => 'setGrossOpenPremium',
        'gross_exec_cost' => 'setGrossExecCost',
        'is_open' => 'setIsOpen',
        'mark_price' => 'setMarkPrice',
        'mark_value' => 'setMarkValue',
        'home_notional' => 'setHomeNotional',
        'foreign_notional' => 'setForeignNotional',
        'pos_state' => 'setPosState',
        'pos_cost' => 'setPosCost',
        'pos_cost2' => 'setPosCost2',
        'pos_cross' => 'setPosCross',
        'pos_init' => 'setPosInit',
        'pos_comm' => 'setPosComm',
        'pos_loss' => 'setPosLoss',
        'pos_margin' => 'setPosMargin',
        'pos_maint' => 'setPosMaint',
        'pos_allowance' => 'setPosAllowance',
        'taxable_margin' => 'setTaxableMargin',
        'init_margin' => 'setInitMargin',
        'maint_margin' => 'setMaintMargin',
        'session_margin' => 'setSessionMargin',
        'target_excess_margin' => 'setTargetExcessMargin',
        'var_margin' => 'setVarMargin',
        'realised_gross_pnl' => 'setRealisedGrossPnl',
        'realised_tax' => 'setRealisedTax',
        'realised_pnl' => 'setRealisedPnl',
        'unrealised_gross_pnl' => 'setUnrealisedGrossPnl',
        'long_bankrupt' => 'setLongBankrupt',
        'short_bankrupt' => 'setShortBankrupt',
        'tax_base' => 'setTaxBase',
        'indicative_tax_rate' => 'setIndicativeTaxRate',
        'indicative_tax' => 'setIndicativeTax',
        'unrealised_tax' => 'setUnrealisedTax',
        'unrealised_pnl' => 'setUnrealisedPnl',
        'unrealised_pnl_pcnt' => 'setUnrealisedPnlPcnt',
        'unrealised_roe_pcnt' => 'setUnrealisedRoePcnt',
        'simple_qty' => 'setSimpleQty',
        'simple_cost' => 'setSimpleCost',
        'simple_value' => 'setSimpleValue',
        'simple_pnl' => 'setSimplePnl',
        'simple_pnl_pcnt' => 'setSimplePnlPcnt',
        'avg_cost_price' => 'setAvgCostPrice',
        'avg_entry_price' => 'setAvgEntryPrice',
        'break_even_price' => 'setBreakEvenPrice',
        'margin_call_price' => 'setMarginCallPrice',
        'liquidation_price' => 'setLiquidationPrice',
        'bankrupt_price' => 'setBankruptPrice',
        'timestamp' => 'setTimestamp',
        'last_price' => 'setLastPrice',
        'last_value' => 'setLastValue'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'account' => 'getAccount',
        'symbol' => 'getSymbol',
        'currency' => 'getCurrency',
        'underlying' => 'getUnderlying',
        'quote_currency' => 'getQuoteCurrency',
        'commission' => 'getCommission',
        'leverage' => 'getLeverage',
        'cross_margin' => 'getCrossMargin',
        'rebalanced_pnl' => 'getRebalancedPnl',
        'prev_realised_pnl' => 'getPrevRealisedPnl',
        'prev_unrealised_pnl' => 'getPrevUnrealisedPnl',
        'prev_close_price' => 'getPrevClosePrice',
        'opening_timestamp' => 'getOpeningTimestamp',
        'opening_qty' => 'getOpeningQty',
        'opening_cost' => 'getOpeningCost',
        'opening_comm' => 'getOpeningComm',
        'open_order_buy_qty' => 'getOpenOrderBuyQty',
        'open_order_buy_cost' => 'getOpenOrderBuyCost',
        'open_order_buy_premium' => 'getOpenOrderBuyPremium',
        'open_order_sell_qty' => 'getOpenOrderSellQty',
        'open_order_sell_cost' => 'getOpenOrderSellCost',
        'open_order_sell_premium' => 'getOpenOrderSellPremium',
        'exec_buy_qty' => 'getExecBuyQty',
        'exec_buy_cost' => 'getExecBuyCost',
        'exec_sell_qty' => 'getExecSellQty',
        'exec_sell_cost' => 'getExecSellCost',
        'exec_qty' => 'getExecQty',
        'exec_cost' => 'getExecCost',
        'exec_comm' => 'getExecComm',
        'current_timestamp' => 'getCurrentTimestamp',
        'current_qty' => 'getCurrentQty',
        'current_cost' => 'getCurrentCost',
        'current_comm' => 'getCurrentComm',
        'realised_cost' => 'getRealisedCost',
        'unrealised_cost' => 'getUnrealisedCost',
        'gross_open_cost' => 'getGrossOpenCost',
        'gross_open_premium' => 'getGrossOpenPremium',
        'gross_exec_cost' => 'getGrossExecCost',
        'is_open' => 'getIsOpen',
        'mark_price' => 'getMarkPrice',
        'mark_value' => 'getMarkValue',
        'home_notional' => 'getHomeNotional',
        'foreign_notional' => 'getForeignNotional',
        'pos_state' => 'getPosState',
        'pos_cost' => 'getPosCost',
        'pos_cost2' => 'getPosCost2',
        'pos_cross' => 'getPosCross',
        'pos_init' => 'getPosInit',
        'pos_comm' => 'getPosComm',
        'pos_loss' => 'getPosLoss',
        'pos_margin' => 'getPosMargin',
        'pos_maint' => 'getPosMaint',
        'pos_allowance' => 'getPosAllowance',
        'taxable_margin' => 'getTaxableMargin',
        'init_margin' => 'getInitMargin',
        'maint_margin' => 'getMaintMargin',
        'session_margin' => 'getSessionMargin',
        'target_excess_margin' => 'getTargetExcessMargin',
        'var_margin' => 'getVarMargin',
        'realised_gross_pnl' => 'getRealisedGrossPnl',
        'realised_tax' => 'getRealisedTax',
        'realised_pnl' => 'getRealisedPnl',
        'unrealised_gross_pnl' => 'getUnrealisedGrossPnl',
        'long_bankrupt' => 'getLongBankrupt',
        'short_bankrupt' => 'getShortBankrupt',
        'tax_base' => 'getTaxBase',
        'indicative_tax_rate' => 'getIndicativeTaxRate',
        'indicative_tax' => 'getIndicativeTax',
        'unrealised_tax' => 'getUnrealisedTax',
        'unrealised_pnl' => 'getUnrealisedPnl',
        'unrealised_pnl_pcnt' => 'getUnrealisedPnlPcnt',
        'unrealised_roe_pcnt' => 'getUnrealisedRoePcnt',
        'simple_qty' => 'getSimpleQty',
        'simple_cost' => 'getSimpleCost',
        'simple_value' => 'getSimpleValue',
        'simple_pnl' => 'getSimplePnl',
        'simple_pnl_pcnt' => 'getSimplePnlPcnt',
        'avg_cost_price' => 'getAvgCostPrice',
        'avg_entry_price' => 'getAvgEntryPrice',
        'break_even_price' => 'getBreakEvenPrice',
        'margin_call_price' => 'getMarginCallPrice',
        'liquidation_price' => 'getLiquidationPrice',
        'bankrupt_price' => 'getBankruptPrice',
        'timestamp' => 'getTimestamp',
        'last_price' => 'getLastPrice',
        'last_value' => 'getLastValue'
    );
  
    
    /**
      * $account 
      * @var Number
      */
    protected $account;
    
    /**
      * $symbol 
      * @var string
      */
    protected $symbol;
    
    /**
      * $currency 
      * @var string
      */
    protected $currency;
    
    /**
      * $underlying 
      * @var string
      */
    protected $underlying;
    
    /**
      * $quote_currency 
      * @var string
      */
    protected $quote_currency;
    
    /**
      * $commission 
      * @var double
      */
    protected $commission;
    
    /**
      * $leverage 
      * @var double
      */
    protected $leverage;
    
    /**
      * $cross_margin 
      * @var bool
      */
    protected $cross_margin;
    
    /**
      * $rebalanced_pnl 
      * @var Number
      */
    protected $rebalanced_pnl;
    
    /**
      * $prev_realised_pnl 
      * @var Number
      */
    protected $prev_realised_pnl;
    
    /**
      * $prev_unrealised_pnl 
      * @var Number
      */
    protected $prev_unrealised_pnl;
    
    /**
      * $prev_close_price 
      * @var double
      */
    protected $prev_close_price;
    
    /**
      * $opening_timestamp 
      * @var \DateTime
      */
    protected $opening_timestamp;
    
    /**
      * $opening_qty 
      * @var Number
      */
    protected $opening_qty;
    
    /**
      * $opening_cost 
      * @var Number
      */
    protected $opening_cost;
    
    /**
      * $opening_comm 
      * @var Number
      */
    protected $opening_comm;
    
    /**
      * $open_order_buy_qty 
      * @var Number
      */
    protected $open_order_buy_qty;
    
    /**
      * $open_order_buy_cost 
      * @var Number
      */
    protected $open_order_buy_cost;
    
    /**
      * $open_order_buy_premium 
      * @var Number
      */
    protected $open_order_buy_premium;
    
    /**
      * $open_order_sell_qty 
      * @var Number
      */
    protected $open_order_sell_qty;
    
    /**
      * $open_order_sell_cost 
      * @var Number
      */
    protected $open_order_sell_cost;
    
    /**
      * $open_order_sell_premium 
      * @var Number
      */
    protected $open_order_sell_premium;
    
    /**
      * $exec_buy_qty 
      * @var Number
      */
    protected $exec_buy_qty;
    
    /**
      * $exec_buy_cost 
      * @var Number
      */
    protected $exec_buy_cost;
    
    /**
      * $exec_sell_qty 
      * @var Number
      */
    protected $exec_sell_qty;
    
    /**
      * $exec_sell_cost 
      * @var Number
      */
    protected $exec_sell_cost;
    
    /**
      * $exec_qty 
      * @var Number
      */
    protected $exec_qty;
    
    /**
      * $exec_cost 
      * @var Number
      */
    protected $exec_cost;
    
    /**
      * $exec_comm 
      * @var Number
      */
    protected $exec_comm;
    
    /**
      * $current_timestamp 
      * @var \DateTime
      */
    protected $current_timestamp;
    
    /**
      * $current_qty 
      * @var Number
      */
    protected $current_qty;
    
    /**
      * $current_cost 
      * @var Number
      */
    protected $current_cost;
    
    /**
      * $current_comm 
      * @var Number
      */
    protected $current_comm;
    
    /**
      * $realised_cost 
      * @var Number
      */
    protected $realised_cost;
    
    /**
      * $unrealised_cost 
      * @var Number
      */
    protected $unrealised_cost;
    
    /**
      * $gross_open_cost 
      * @var Number
      */
    protected $gross_open_cost;
    
    /**
      * $gross_open_premium 
      * @var Number
      */
    protected $gross_open_premium;
    
    /**
      * $gross_exec_cost 
      * @var Number
      */
    protected $gross_exec_cost;
    
    /**
      * $is_open 
      * @var bool
      */
    protected $is_open;
    
    /**
      * $mark_price 
      * @var double
      */
    protected $mark_price;
    
    /**
      * $mark_value 
      * @var Number
      */
    protected $mark_value;
    
    /**
      * $home_notional 
      * @var double
      */
    protected $home_notional;
    
    /**
      * $foreign_notional 
      * @var double
      */
    protected $foreign_notional;
    
    /**
      * $pos_state 
      * @var string
      */
    protected $pos_state;
    
    /**
      * $pos_cost 
      * @var Number
      */
    protected $pos_cost;
    
    /**
      * $pos_cost2 
      * @var Number
      */
    protected $pos_cost2;
    
    /**
      * $pos_cross 
      * @var Number
      */
    protected $pos_cross;
    
    /**
      * $pos_init 
      * @var Number
      */
    protected $pos_init;
    
    /**
      * $pos_comm 
      * @var Number
      */
    protected $pos_comm;
    
    /**
      * $pos_loss 
      * @var Number
      */
    protected $pos_loss;
    
    /**
      * $pos_margin 
      * @var Number
      */
    protected $pos_margin;
    
    /**
      * $pos_maint 
      * @var Number
      */
    protected $pos_maint;
    
    /**
      * $pos_allowance 
      * @var Number
      */
    protected $pos_allowance;
    
    /**
      * $taxable_margin 
      * @var Number
      */
    protected $taxable_margin;
    
    /**
      * $init_margin 
      * @var Number
      */
    protected $init_margin;
    
    /**
      * $maint_margin 
      * @var Number
      */
    protected $maint_margin;
    
    /**
      * $session_margin 
      * @var Number
      */
    protected $session_margin;
    
    /**
      * $target_excess_margin 
      * @var Number
      */
    protected $target_excess_margin;
    
    /**
      * $var_margin 
      * @var Number
      */
    protected $var_margin;
    
    /**
      * $realised_gross_pnl 
      * @var Number
      */
    protected $realised_gross_pnl;
    
    /**
      * $realised_tax 
      * @var Number
      */
    protected $realised_tax;
    
    /**
      * $realised_pnl 
      * @var Number
      */
    protected $realised_pnl;
    
    /**
      * $unrealised_gross_pnl 
      * @var Number
      */
    protected $unrealised_gross_pnl;
    
    /**
      * $long_bankrupt 
      * @var Number
      */
    protected $long_bankrupt;
    
    /**
      * $short_bankrupt 
      * @var Number
      */
    protected $short_bankrupt;
    
    /**
      * $tax_base 
      * @var Number
      */
    protected $tax_base;
    
    /**
      * $indicative_tax_rate 
      * @var double
      */
    protected $indicative_tax_rate;
    
    /**
      * $indicative_tax 
      * @var Number
      */
    protected $indicative_tax;
    
    /**
      * $unrealised_tax 
      * @var Number
      */
    protected $unrealised_tax;
    
    /**
      * $unrealised_pnl 
      * @var Number
      */
    protected $unrealised_pnl;
    
    /**
      * $unrealised_pnl_pcnt 
      * @var double
      */
    protected $unrealised_pnl_pcnt;
    
    /**
      * $unrealised_roe_pcnt 
      * @var double
      */
    protected $unrealised_roe_pcnt;
    
    /**
      * $simple_qty 
      * @var double
      */
    protected $simple_qty;
    
    /**
      * $simple_cost 
      * @var double
      */
    protected $simple_cost;
    
    /**
      * $simple_value 
      * @var double
      */
    protected $simple_value;
    
    /**
      * $simple_pnl 
      * @var double
      */
    protected $simple_pnl;
    
    /**
      * $simple_pnl_pcnt 
      * @var double
      */
    protected $simple_pnl_pcnt;
    
    /**
      * $avg_cost_price 
      * @var double
      */
    protected $avg_cost_price;
    
    /**
      * $avg_entry_price 
      * @var double
      */
    protected $avg_entry_price;
    
    /**
      * $break_even_price 
      * @var double
      */
    protected $break_even_price;
    
    /**
      * $margin_call_price 
      * @var double
      */
    protected $margin_call_price;
    
    /**
      * $liquidation_price 
      * @var double
      */
    protected $liquidation_price;
    
    /**
      * $bankrupt_price 
      * @var double
      */
    protected $bankrupt_price;
    
    /**
      * $timestamp 
      * @var \DateTime
      */
    protected $timestamp;
    
    /**
      * $last_price 
      * @var double
      */
    protected $last_price;
    
    /**
      * $last_value 
      * @var Number
      */
    protected $last_value;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->account = $data["account"];
            $this->symbol = $data["symbol"];
            $this->currency = $data["currency"];
            $this->underlying = $data["underlying"];
            $this->quote_currency = $data["quote_currency"];
            $this->commission = $data["commission"];
            $this->leverage = $data["leverage"];
            $this->cross_margin = $data["cross_margin"];
            $this->rebalanced_pnl = $data["rebalanced_pnl"];
            $this->prev_realised_pnl = $data["prev_realised_pnl"];
            $this->prev_unrealised_pnl = $data["prev_unrealised_pnl"];
            $this->prev_close_price = $data["prev_close_price"];
            $this->opening_timestamp = $data["opening_timestamp"];
            $this->opening_qty = $data["opening_qty"];
            $this->opening_cost = $data["opening_cost"];
            $this->opening_comm = $data["opening_comm"];
            $this->open_order_buy_qty = $data["open_order_buy_qty"];
            $this->open_order_buy_cost = $data["open_order_buy_cost"];
            $this->open_order_buy_premium = $data["open_order_buy_premium"];
            $this->open_order_sell_qty = $data["open_order_sell_qty"];
            $this->open_order_sell_cost = $data["open_order_sell_cost"];
            $this->open_order_sell_premium = $data["open_order_sell_premium"];
            $this->exec_buy_qty = $data["exec_buy_qty"];
            $this->exec_buy_cost = $data["exec_buy_cost"];
            $this->exec_sell_qty = $data["exec_sell_qty"];
            $this->exec_sell_cost = $data["exec_sell_cost"];
            $this->exec_qty = $data["exec_qty"];
            $this->exec_cost = $data["exec_cost"];
            $this->exec_comm = $data["exec_comm"];
            $this->current_timestamp = $data["current_timestamp"];
            $this->current_qty = $data["current_qty"];
            $this->current_cost = $data["current_cost"];
            $this->current_comm = $data["current_comm"];
            $this->realised_cost = $data["realised_cost"];
            $this->unrealised_cost = $data["unrealised_cost"];
            $this->gross_open_cost = $data["gross_open_cost"];
            $this->gross_open_premium = $data["gross_open_premium"];
            $this->gross_exec_cost = $data["gross_exec_cost"];
            $this->is_open = $data["is_open"];
            $this->mark_price = $data["mark_price"];
            $this->mark_value = $data["mark_value"];
            $this->home_notional = $data["home_notional"];
            $this->foreign_notional = $data["foreign_notional"];
            $this->pos_state = $data["pos_state"];
            $this->pos_cost = $data["pos_cost"];
            $this->pos_cost2 = $data["pos_cost2"];
            $this->pos_cross = $data["pos_cross"];
            $this->pos_init = $data["pos_init"];
            $this->pos_comm = $data["pos_comm"];
            $this->pos_loss = $data["pos_loss"];
            $this->pos_margin = $data["pos_margin"];
            $this->pos_maint = $data["pos_maint"];
            $this->pos_allowance = $data["pos_allowance"];
            $this->taxable_margin = $data["taxable_margin"];
            $this->init_margin = $data["init_margin"];
            $this->maint_margin = $data["maint_margin"];
            $this->session_margin = $data["session_margin"];
            $this->target_excess_margin = $data["target_excess_margin"];
            $this->var_margin = $data["var_margin"];
            $this->realised_gross_pnl = $data["realised_gross_pnl"];
            $this->realised_tax = $data["realised_tax"];
            $this->realised_pnl = $data["realised_pnl"];
            $this->unrealised_gross_pnl = $data["unrealised_gross_pnl"];
            $this->long_bankrupt = $data["long_bankrupt"];
            $this->short_bankrupt = $data["short_bankrupt"];
            $this->tax_base = $data["tax_base"];
            $this->indicative_tax_rate = $data["indicative_tax_rate"];
            $this->indicative_tax = $data["indicative_tax"];
            $this->unrealised_tax = $data["unrealised_tax"];
            $this->unrealised_pnl = $data["unrealised_pnl"];
            $this->unrealised_pnl_pcnt = $data["unrealised_pnl_pcnt"];
            $this->unrealised_roe_pcnt = $data["unrealised_roe_pcnt"];
            $this->simple_qty = $data["simple_qty"];
            $this->simple_cost = $data["simple_cost"];
            $this->simple_value = $data["simple_value"];
            $this->simple_pnl = $data["simple_pnl"];
            $this->simple_pnl_pcnt = $data["simple_pnl_pcnt"];
            $this->avg_cost_price = $data["avg_cost_price"];
            $this->avg_entry_price = $data["avg_entry_price"];
            $this->break_even_price = $data["break_even_price"];
            $this->margin_call_price = $data["margin_call_price"];
            $this->liquidation_price = $data["liquidation_price"];
            $this->bankrupt_price = $data["bankrupt_price"];
            $this->timestamp = $data["timestamp"];
            $this->last_price = $data["last_price"];
            $this->last_value = $data["last_value"];
        }
    }
    
    /**
     * Gets account
     * @return Number
     */
    public function getAccount()
    {
        return $this->account;
    }
  
    /**
     * Sets account
     * @param Number $account 
     * @return $this
     */
    public function setAccount($account)
    {
        
        $this->account = $account;
        return $this;
    }
    
    /**
     * Gets symbol
     * @return string
     */
    public function getSymbol()
    {
        return $this->symbol;
    }
  
    /**
     * Sets symbol
     * @param string $symbol 
     * @return $this
     */
    public function setSymbol($symbol)
    {
        
        $this->symbol = $symbol;
        return $this;
    }
    
    /**
     * Gets currency
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }
  
    /**
     * Sets currency
     * @param string $currency 
     * @return $this
     */
    public function setCurrency($currency)
    {
        
        $this->currency = $currency;
        return $this;
    }
    
    /**
     * Gets underlying
     * @return string
     */
    public function getUnderlying()
    {
        return $this->underlying;
    }
  
    /**
     * Sets underlying
     * @param string $underlying 
     * @return $this
     */
    public function setUnderlying($underlying)
    {
        
        $this->underlying = $underlying;
        return $this;
    }
    
    /**
     * Gets quote_currency
     * @return string
     */
    public function getQuoteCurrency()
    {
        return $this->quote_currency;
    }
  
    /**
     * Sets quote_currency
     * @param string $quote_currency 
     * @return $this
     */
    public function setQuoteCurrency($quote_currency)
    {
        
        $this->quote_currency = $quote_currency;
        return $this;
    }
    
    /**
     * Gets commission
     * @return double
     */
    public function getCommission()
    {
        return $this->commission;
    }
  
    /**
     * Sets commission
     * @param double $commission 
     * @return $this
     */
    public function setCommission($commission)
    {
        
        $this->commission = $commission;
        return $this;
    }
    
    /**
     * Gets leverage
     * @return double
     */
    public function getLeverage()
    {
        return $this->leverage;
    }
  
    /**
     * Sets leverage
     * @param double $leverage 
     * @return $this
     */
    public function setLeverage($leverage)
    {
        
        $this->leverage = $leverage;
        return $this;
    }
    
    /**
     * Gets cross_margin
     * @return bool
     */
    public function getCrossMargin()
    {
        return $this->cross_margin;
    }
  
    /**
     * Sets cross_margin
     * @param bool $cross_margin 
     * @return $this
     */
    public function setCrossMargin($cross_margin)
    {
        
        $this->cross_margin = $cross_margin;
        return $this;
    }
    
    /**
     * Gets rebalanced_pnl
     * @return Number
     */
    public function getRebalancedPnl()
    {
        return $this->rebalanced_pnl;
    }
  
    /**
     * Sets rebalanced_pnl
     * @param Number $rebalanced_pnl 
     * @return $this
     */
    public function setRebalancedPnl($rebalanced_pnl)
    {
        
        $this->rebalanced_pnl = $rebalanced_pnl;
        return $this;
    }
    
    /**
     * Gets prev_realised_pnl
     * @return Number
     */
    public function getPrevRealisedPnl()
    {
        return $this->prev_realised_pnl;
    }
  
    /**
     * Sets prev_realised_pnl
     * @param Number $prev_realised_pnl 
     * @return $this
     */
    public function setPrevRealisedPnl($prev_realised_pnl)
    {
        
        $this->prev_realised_pnl = $prev_realised_pnl;
        return $this;
    }
    
    /**
     * Gets prev_unrealised_pnl
     * @return Number
     */
    public function getPrevUnrealisedPnl()
    {
        return $this->prev_unrealised_pnl;
    }
  
    /**
     * Sets prev_unrealised_pnl
     * @param Number $prev_unrealised_pnl 
     * @return $this
     */
    public function setPrevUnrealisedPnl($prev_unrealised_pnl)
    {
        
        $this->prev_unrealised_pnl = $prev_unrealised_pnl;
        return $this;
    }
    
    /**
     * Gets prev_close_price
     * @return double
     */
    public function getPrevClosePrice()
    {
        return $this->prev_close_price;
    }
  
    /**
     * Sets prev_close_price
     * @param double $prev_close_price 
     * @return $this
     */
    public function setPrevClosePrice($prev_close_price)
    {
        
        $this->prev_close_price = $prev_close_price;
        return $this;
    }
    
    /**
     * Gets opening_timestamp
     * @return \DateTime
     */
    public function getOpeningTimestamp()
    {
        return $this->opening_timestamp;
    }
  
    /**
     * Sets opening_timestamp
     * @param \DateTime $opening_timestamp 
     * @return $this
     */
    public function setOpeningTimestamp($opening_timestamp)
    {
        
        $this->opening_timestamp = $opening_timestamp;
        return $this;
    }
    
    /**
     * Gets opening_qty
     * @return Number
     */
    public function getOpeningQty()
    {
        return $this->opening_qty;
    }
  
    /**
     * Sets opening_qty
     * @param Number $opening_qty 
     * @return $this
     */
    public function setOpeningQty($opening_qty)
    {
        
        $this->opening_qty = $opening_qty;
        return $this;
    }
    
    /**
     * Gets opening_cost
     * @return Number
     */
    public function getOpeningCost()
    {
        return $this->opening_cost;
    }
  
    /**
     * Sets opening_cost
     * @param Number $opening_cost 
     * @return $this
     */
    public function setOpeningCost($opening_cost)
    {
        
        $this->opening_cost = $opening_cost;
        return $this;
    }
    
    /**
     * Gets opening_comm
     * @return Number
     */
    public function getOpeningComm()
    {
        return $this->opening_comm;
    }
  
    /**
     * Sets opening_comm
     * @param Number $opening_comm 
     * @return $this
     */
    public function setOpeningComm($opening_comm)
    {
        
        $this->opening_comm = $opening_comm;
        return $this;
    }
    
    /**
     * Gets open_order_buy_qty
     * @return Number
     */
    public function getOpenOrderBuyQty()
    {
        return $this->open_order_buy_qty;
    }
  
    /**
     * Sets open_order_buy_qty
     * @param Number $open_order_buy_qty 
     * @return $this
     */
    public function setOpenOrderBuyQty($open_order_buy_qty)
    {
        
        $this->open_order_buy_qty = $open_order_buy_qty;
        return $this;
    }
    
    /**
     * Gets open_order_buy_cost
     * @return Number
     */
    public function getOpenOrderBuyCost()
    {
        return $this->open_order_buy_cost;
    }
  
    /**
     * Sets open_order_buy_cost
     * @param Number $open_order_buy_cost 
     * @return $this
     */
    public function setOpenOrderBuyCost($open_order_buy_cost)
    {
        
        $this->open_order_buy_cost = $open_order_buy_cost;
        return $this;
    }
    
    /**
     * Gets open_order_buy_premium
     * @return Number
     */
    public function getOpenOrderBuyPremium()
    {
        return $this->open_order_buy_premium;
    }
  
    /**
     * Sets open_order_buy_premium
     * @param Number $open_order_buy_premium 
     * @return $this
     */
    public function setOpenOrderBuyPremium($open_order_buy_premium)
    {
        
        $this->open_order_buy_premium = $open_order_buy_premium;
        return $this;
    }
    
    /**
     * Gets open_order_sell_qty
     * @return Number
     */
    public function getOpenOrderSellQty()
    {
        return $this->open_order_sell_qty;
    }
  
    /**
     * Sets open_order_sell_qty
     * @param Number $open_order_sell_qty 
     * @return $this
     */
    public function setOpenOrderSellQty($open_order_sell_qty)
    {
        
        $this->open_order_sell_qty = $open_order_sell_qty;
        return $this;
    }
    
    /**
     * Gets open_order_sell_cost
     * @return Number
     */
    public function getOpenOrderSellCost()
    {
        return $this->open_order_sell_cost;
    }
  
    /**
     * Sets open_order_sell_cost
     * @param Number $open_order_sell_cost 
     * @return $this
     */
    public function setOpenOrderSellCost($open_order_sell_cost)
    {
        
        $this->open_order_sell_cost = $open_order_sell_cost;
        return $this;
    }
    
    /**
     * Gets open_order_sell_premium
     * @return Number
     */
    public function getOpenOrderSellPremium()
    {
        return $this->open_order_sell_premium;
    }
  
    /**
     * Sets open_order_sell_premium
     * @param Number $open_order_sell_premium 
     * @return $this
     */
    public function setOpenOrderSellPremium($open_order_sell_premium)
    {
        
        $this->open_order_sell_premium = $open_order_sell_premium;
        return $this;
    }
    
    /**
     * Gets exec_buy_qty
     * @return Number
     */
    public function getExecBuyQty()
    {
        return $this->exec_buy_qty;
    }
  
    /**
     * Sets exec_buy_qty
     * @param Number $exec_buy_qty 
     * @return $this
     */
    public function setExecBuyQty($exec_buy_qty)
    {
        
        $this->exec_buy_qty = $exec_buy_qty;
        return $this;
    }
    
    /**
     * Gets exec_buy_cost
     * @return Number
     */
    public function getExecBuyCost()
    {
        return $this->exec_buy_cost;
    }
  
    /**
     * Sets exec_buy_cost
     * @param Number $exec_buy_cost 
     * @return $this
     */
    public function setExecBuyCost($exec_buy_cost)
    {
        
        $this->exec_buy_cost = $exec_buy_cost;
        return $this;
    }
    
    /**
     * Gets exec_sell_qty
     * @return Number
     */
    public function getExecSellQty()
    {
        return $this->exec_sell_qty;
    }
  
    /**
     * Sets exec_sell_qty
     * @param Number $exec_sell_qty 
     * @return $this
     */
    public function setExecSellQty($exec_sell_qty)
    {
        
        $this->exec_sell_qty = $exec_sell_qty;
        return $this;
    }
    
    /**
     * Gets exec_sell_cost
     * @return Number
     */
    public function getExecSellCost()
    {
        return $this->exec_sell_cost;
    }
  
    /**
     * Sets exec_sell_cost
     * @param Number $exec_sell_cost 
     * @return $this
     */
    public function setExecSellCost($exec_sell_cost)
    {
        
        $this->exec_sell_cost = $exec_sell_cost;
        return $this;
    }
    
    /**
     * Gets exec_qty
     * @return Number
     */
    public function getExecQty()
    {
        return $this->exec_qty;
    }
  
    /**
     * Sets exec_qty
     * @param Number $exec_qty 
     * @return $this
     */
    public function setExecQty($exec_qty)
    {
        
        $this->exec_qty = $exec_qty;
        return $this;
    }
    
    /**
     * Gets exec_cost
     * @return Number
     */
    public function getExecCost()
    {
        return $this->exec_cost;
    }
  
    /**
     * Sets exec_cost
     * @param Number $exec_cost 
     * @return $this
     */
    public function setExecCost($exec_cost)
    {
        
        $this->exec_cost = $exec_cost;
        return $this;
    }
    
    /**
     * Gets exec_comm
     * @return Number
     */
    public function getExecComm()
    {
        return $this->exec_comm;
    }
  
    /**
     * Sets exec_comm
     * @param Number $exec_comm 
     * @return $this
     */
    public function setExecComm($exec_comm)
    {
        
        $this->exec_comm = $exec_comm;
        return $this;
    }
    
    /**
     * Gets current_timestamp
     * @return \DateTime
     */
    public function getCurrentTimestamp()
    {
        return $this->current_timestamp;
    }
  
    /**
     * Sets current_timestamp
     * @param \DateTime $current_timestamp 
     * @return $this
     */
    public function setCurrentTimestamp($current_timestamp)
    {
        
        $this->current_timestamp = $current_timestamp;
        return $this;
    }
    
    /**
     * Gets current_qty
     * @return Number
     */
    public function getCurrentQty()
    {
        return $this->current_qty;
    }
  
    /**
     * Sets current_qty
     * @param Number $current_qty 
     * @return $this
     */
    public function setCurrentQty($current_qty)
    {
        
        $this->current_qty = $current_qty;
        return $this;
    }
    
    /**
     * Gets current_cost
     * @return Number
     */
    public function getCurrentCost()
    {
        return $this->current_cost;
    }
  
    /**
     * Sets current_cost
     * @param Number $current_cost 
     * @return $this
     */
    public function setCurrentCost($current_cost)
    {
        
        $this->current_cost = $current_cost;
        return $this;
    }
    
    /**
     * Gets current_comm
     * @return Number
     */
    public function getCurrentComm()
    {
        return $this->current_comm;
    }
  
    /**
     * Sets current_comm
     * @param Number $current_comm 
     * @return $this
     */
    public function setCurrentComm($current_comm)
    {
        
        $this->current_comm = $current_comm;
        return $this;
    }
    
    /**
     * Gets realised_cost
     * @return Number
     */
    public function getRealisedCost()
    {
        return $this->realised_cost;
    }
  
    /**
     * Sets realised_cost
     * @param Number $realised_cost 
     * @return $this
     */
    public function setRealisedCost($realised_cost)
    {
        
        $this->realised_cost = $realised_cost;
        return $this;
    }
    
    /**
     * Gets unrealised_cost
     * @return Number
     */
    public function getUnrealisedCost()
    {
        return $this->unrealised_cost;
    }
  
    /**
     * Sets unrealised_cost
     * @param Number $unrealised_cost 
     * @return $this
     */
    public function setUnrealisedCost($unrealised_cost)
    {
        
        $this->unrealised_cost = $unrealised_cost;
        return $this;
    }
    
    /**
     * Gets gross_open_cost
     * @return Number
     */
    public function getGrossOpenCost()
    {
        return $this->gross_open_cost;
    }
  
    /**
     * Sets gross_open_cost
     * @param Number $gross_open_cost 
     * @return $this
     */
    public function setGrossOpenCost($gross_open_cost)
    {
        
        $this->gross_open_cost = $gross_open_cost;
        return $this;
    }
    
    /**
     * Gets gross_open_premium
     * @return Number
     */
    public function getGrossOpenPremium()
    {
        return $this->gross_open_premium;
    }
  
    /**
     * Sets gross_open_premium
     * @param Number $gross_open_premium 
     * @return $this
     */
    public function setGrossOpenPremium($gross_open_premium)
    {
        
        $this->gross_open_premium = $gross_open_premium;
        return $this;
    }
    
    /**
     * Gets gross_exec_cost
     * @return Number
     */
    public function getGrossExecCost()
    {
        return $this->gross_exec_cost;
    }
  
    /**
     * Sets gross_exec_cost
     * @param Number $gross_exec_cost 
     * @return $this
     */
    public function setGrossExecCost($gross_exec_cost)
    {
        
        $this->gross_exec_cost = $gross_exec_cost;
        return $this;
    }
    
    /**
     * Gets is_open
     * @return bool
     */
    public function getIsOpen()
    {
        return $this->is_open;
    }
  
    /**
     * Sets is_open
     * @param bool $is_open 
     * @return $this
     */
    public function setIsOpen($is_open)
    {
        
        $this->is_open = $is_open;
        return $this;
    }
    
    /**
     * Gets mark_price
     * @return double
     */
    public function getMarkPrice()
    {
        return $this->mark_price;
    }
  
    /**
     * Sets mark_price
     * @param double $mark_price 
     * @return $this
     */
    public function setMarkPrice($mark_price)
    {
        
        $this->mark_price = $mark_price;
        return $this;
    }
    
    /**
     * Gets mark_value
     * @return Number
     */
    public function getMarkValue()
    {
        return $this->mark_value;
    }
  
    /**
     * Sets mark_value
     * @param Number $mark_value 
     * @return $this
     */
    public function setMarkValue($mark_value)
    {
        
        $this->mark_value = $mark_value;
        return $this;
    }
    
    /**
     * Gets home_notional
     * @return double
     */
    public function getHomeNotional()
    {
        return $this->home_notional;
    }
  
    /**
     * Sets home_notional
     * @param double $home_notional 
     * @return $this
     */
    public function setHomeNotional($home_notional)
    {
        
        $this->home_notional = $home_notional;
        return $this;
    }
    
    /**
     * Gets foreign_notional
     * @return double
     */
    public function getForeignNotional()
    {
        return $this->foreign_notional;
    }
  
    /**
     * Sets foreign_notional
     * @param double $foreign_notional 
     * @return $this
     */
    public function setForeignNotional($foreign_notional)
    {
        
        $this->foreign_notional = $foreign_notional;
        return $this;
    }
    
    /**
     * Gets pos_state
     * @return string
     */
    public function getPosState()
    {
        return $this->pos_state;
    }
  
    /**
     * Sets pos_state
     * @param string $pos_state 
     * @return $this
     */
    public function setPosState($pos_state)
    {
        
        $this->pos_state = $pos_state;
        return $this;
    }
    
    /**
     * Gets pos_cost
     * @return Number
     */
    public function getPosCost()
    {
        return $this->pos_cost;
    }
  
    /**
     * Sets pos_cost
     * @param Number $pos_cost 
     * @return $this
     */
    public function setPosCost($pos_cost)
    {
        
        $this->pos_cost = $pos_cost;
        return $this;
    }
    
    /**
     * Gets pos_cost2
     * @return Number
     */
    public function getPosCost2()
    {
        return $this->pos_cost2;
    }
  
    /**
     * Sets pos_cost2
     * @param Number $pos_cost2 
     * @return $this
     */
    public function setPosCost2($pos_cost2)
    {
        
        $this->pos_cost2 = $pos_cost2;
        return $this;
    }
    
    /**
     * Gets pos_cross
     * @return Number
     */
    public function getPosCross()
    {
        return $this->pos_cross;
    }
  
    /**
     * Sets pos_cross
     * @param Number $pos_cross 
     * @return $this
     */
    public function setPosCross($pos_cross)
    {
        
        $this->pos_cross = $pos_cross;
        return $this;
    }
    
    /**
     * Gets pos_init
     * @return Number
     */
    public function getPosInit()
    {
        return $this->pos_init;
    }
  
    /**
     * Sets pos_init
     * @param Number $pos_init 
     * @return $this
     */
    public function setPosInit($pos_init)
    {
        
        $this->pos_init = $pos_init;
        return $this;
    }
    
    /**
     * Gets pos_comm
     * @return Number
     */
    public function getPosComm()
    {
        return $this->pos_comm;
    }
  
    /**
     * Sets pos_comm
     * @param Number $pos_comm 
     * @return $this
     */
    public function setPosComm($pos_comm)
    {
        
        $this->pos_comm = $pos_comm;
        return $this;
    }
    
    /**
     * Gets pos_loss
     * @return Number
     */
    public function getPosLoss()
    {
        return $this->pos_loss;
    }
  
    /**
     * Sets pos_loss
     * @param Number $pos_loss 
     * @return $this
     */
    public function setPosLoss($pos_loss)
    {
        
        $this->pos_loss = $pos_loss;
        return $this;
    }
    
    /**
     * Gets pos_margin
     * @return Number
     */
    public function getPosMargin()
    {
        return $this->pos_margin;
    }
  
    /**
     * Sets pos_margin
     * @param Number $pos_margin 
     * @return $this
     */
    public function setPosMargin($pos_margin)
    {
        
        $this->pos_margin = $pos_margin;
        return $this;
    }
    
    /**
     * Gets pos_maint
     * @return Number
     */
    public function getPosMaint()
    {
        return $this->pos_maint;
    }
  
    /**
     * Sets pos_maint
     * @param Number $pos_maint 
     * @return $this
     */
    public function setPosMaint($pos_maint)
    {
        
        $this->pos_maint = $pos_maint;
        return $this;
    }
    
    /**
     * Gets pos_allowance
     * @return Number
     */
    public function getPosAllowance()
    {
        return $this->pos_allowance;
    }
  
    /**
     * Sets pos_allowance
     * @param Number $pos_allowance 
     * @return $this
     */
    public function setPosAllowance($pos_allowance)
    {
        
        $this->pos_allowance = $pos_allowance;
        return $this;
    }
    
    /**
     * Gets taxable_margin
     * @return Number
     */
    public function getTaxableMargin()
    {
        return $this->taxable_margin;
    }
  
    /**
     * Sets taxable_margin
     * @param Number $taxable_margin 
     * @return $this
     */
    public function setTaxableMargin($taxable_margin)
    {
        
        $this->taxable_margin = $taxable_margin;
        return $this;
    }
    
    /**
     * Gets init_margin
     * @return Number
     */
    public function getInitMargin()
    {
        return $this->init_margin;
    }
  
    /**
     * Sets init_margin
     * @param Number $init_margin 
     * @return $this
     */
    public function setInitMargin($init_margin)
    {
        
        $this->init_margin = $init_margin;
        return $this;
    }
    
    /**
     * Gets maint_margin
     * @return Number
     */
    public function getMaintMargin()
    {
        return $this->maint_margin;
    }
  
    /**
     * Sets maint_margin
     * @param Number $maint_margin 
     * @return $this
     */
    public function setMaintMargin($maint_margin)
    {
        
        $this->maint_margin = $maint_margin;
        return $this;
    }
    
    /**
     * Gets session_margin
     * @return Number
     */
    public function getSessionMargin()
    {
        return $this->session_margin;
    }
  
    /**
     * Sets session_margin
     * @param Number $session_margin 
     * @return $this
     */
    public function setSessionMargin($session_margin)
    {
        
        $this->session_margin = $session_margin;
        return $this;
    }
    
    /**
     * Gets target_excess_margin
     * @return Number
     */
    public function getTargetExcessMargin()
    {
        return $this->target_excess_margin;
    }
  
    /**
     * Sets target_excess_margin
     * @param Number $target_excess_margin 
     * @return $this
     */
    public function setTargetExcessMargin($target_excess_margin)
    {
        
        $this->target_excess_margin = $target_excess_margin;
        return $this;
    }
    
    /**
     * Gets var_margin
     * @return Number
     */
    public function getVarMargin()
    {
        return $this->var_margin;
    }
  
    /**
     * Sets var_margin
     * @param Number $var_margin 
     * @return $this
     */
    public function setVarMargin($var_margin)
    {
        
        $this->var_margin = $var_margin;
        return $this;
    }
    
    /**
     * Gets realised_gross_pnl
     * @return Number
     */
    public function getRealisedGrossPnl()
    {
        return $this->realised_gross_pnl;
    }
  
    /**
     * Sets realised_gross_pnl
     * @param Number $realised_gross_pnl 
     * @return $this
     */
    public function setRealisedGrossPnl($realised_gross_pnl)
    {
        
        $this->realised_gross_pnl = $realised_gross_pnl;
        return $this;
    }
    
    /**
     * Gets realised_tax
     * @return Number
     */
    public function getRealisedTax()
    {
        return $this->realised_tax;
    }
  
    /**
     * Sets realised_tax
     * @param Number $realised_tax 
     * @return $this
     */
    public function setRealisedTax($realised_tax)
    {
        
        $this->realised_tax = $realised_tax;
        return $this;
    }
    
    /**
     * Gets realised_pnl
     * @return Number
     */
    public function getRealisedPnl()
    {
        return $this->realised_pnl;
    }
  
    /**
     * Sets realised_pnl
     * @param Number $realised_pnl 
     * @return $this
     */
    public function setRealisedPnl($realised_pnl)
    {
        
        $this->realised_pnl = $realised_pnl;
        return $this;
    }
    
    /**
     * Gets unrealised_gross_pnl
     * @return Number
     */
    public function getUnrealisedGrossPnl()
    {
        return $this->unrealised_gross_pnl;
    }
  
    /**
     * Sets unrealised_gross_pnl
     * @param Number $unrealised_gross_pnl 
     * @return $this
     */
    public function setUnrealisedGrossPnl($unrealised_gross_pnl)
    {
        
        $this->unrealised_gross_pnl = $unrealised_gross_pnl;
        return $this;
    }
    
    /**
     * Gets long_bankrupt
     * @return Number
     */
    public function getLongBankrupt()
    {
        return $this->long_bankrupt;
    }
  
    /**
     * Sets long_bankrupt
     * @param Number $long_bankrupt 
     * @return $this
     */
    public function setLongBankrupt($long_bankrupt)
    {
        
        $this->long_bankrupt = $long_bankrupt;
        return $this;
    }
    
    /**
     * Gets short_bankrupt
     * @return Number
     */
    public function getShortBankrupt()
    {
        return $this->short_bankrupt;
    }
  
    /**
     * Sets short_bankrupt
     * @param Number $short_bankrupt 
     * @return $this
     */
    public function setShortBankrupt($short_bankrupt)
    {
        
        $this->short_bankrupt = $short_bankrupt;
        return $this;
    }
    
    /**
     * Gets tax_base
     * @return Number
     */
    public function getTaxBase()
    {
        return $this->tax_base;
    }
  
    /**
     * Sets tax_base
     * @param Number $tax_base 
     * @return $this
     */
    public function setTaxBase($tax_base)
    {
        
        $this->tax_base = $tax_base;
        return $this;
    }
    
    /**
     * Gets indicative_tax_rate
     * @return double
     */
    public function getIndicativeTaxRate()
    {
        return $this->indicative_tax_rate;
    }
  
    /**
     * Sets indicative_tax_rate
     * @param double $indicative_tax_rate 
     * @return $this
     */
    public function setIndicativeTaxRate($indicative_tax_rate)
    {
        
        $this->indicative_tax_rate = $indicative_tax_rate;
        return $this;
    }
    
    /**
     * Gets indicative_tax
     * @return Number
     */
    public function getIndicativeTax()
    {
        return $this->indicative_tax;
    }
  
    /**
     * Sets indicative_tax
     * @param Number $indicative_tax 
     * @return $this
     */
    public function setIndicativeTax($indicative_tax)
    {
        
        $this->indicative_tax = $indicative_tax;
        return $this;
    }
    
    /**
     * Gets unrealised_tax
     * @return Number
     */
    public function getUnrealisedTax()
    {
        return $this->unrealised_tax;
    }
  
    /**
     * Sets unrealised_tax
     * @param Number $unrealised_tax 
     * @return $this
     */
    public function setUnrealisedTax($unrealised_tax)
    {
        
        $this->unrealised_tax = $unrealised_tax;
        return $this;
    }
    
    /**
     * Gets unrealised_pnl
     * @return Number
     */
    public function getUnrealisedPnl()
    {
        return $this->unrealised_pnl;
    }
  
    /**
     * Sets unrealised_pnl
     * @param Number $unrealised_pnl 
     * @return $this
     */
    public function setUnrealisedPnl($unrealised_pnl)
    {
        
        $this->unrealised_pnl = $unrealised_pnl;
        return $this;
    }
    
    /**
     * Gets unrealised_pnl_pcnt
     * @return double
     */
    public function getUnrealisedPnlPcnt()
    {
        return $this->unrealised_pnl_pcnt;
    }
  
    /**
     * Sets unrealised_pnl_pcnt
     * @param double $unrealised_pnl_pcnt 
     * @return $this
     */
    public function setUnrealisedPnlPcnt($unrealised_pnl_pcnt)
    {
        
        $this->unrealised_pnl_pcnt = $unrealised_pnl_pcnt;
        return $this;
    }
    
    /**
     * Gets unrealised_roe_pcnt
     * @return double
     */
    public function getUnrealisedRoePcnt()
    {
        return $this->unrealised_roe_pcnt;
    }
  
    /**
     * Sets unrealised_roe_pcnt
     * @param double $unrealised_roe_pcnt 
     * @return $this
     */
    public function setUnrealisedRoePcnt($unrealised_roe_pcnt)
    {
        
        $this->unrealised_roe_pcnt = $unrealised_roe_pcnt;
        return $this;
    }
    
    /**
     * Gets simple_qty
     * @return double
     */
    public function getSimpleQty()
    {
        return $this->simple_qty;
    }
  
    /**
     * Sets simple_qty
     * @param double $simple_qty 
     * @return $this
     */
    public function setSimpleQty($simple_qty)
    {
        
        $this->simple_qty = $simple_qty;
        return $this;
    }
    
    /**
     * Gets simple_cost
     * @return double
     */
    public function getSimpleCost()
    {
        return $this->simple_cost;
    }
  
    /**
     * Sets simple_cost
     * @param double $simple_cost 
     * @return $this
     */
    public function setSimpleCost($simple_cost)
    {
        
        $this->simple_cost = $simple_cost;
        return $this;
    }
    
    /**
     * Gets simple_value
     * @return double
     */
    public function getSimpleValue()
    {
        return $this->simple_value;
    }
  
    /**
     * Sets simple_value
     * @param double $simple_value 
     * @return $this
     */
    public function setSimpleValue($simple_value)
    {
        
        $this->simple_value = $simple_value;
        return $this;
    }
    
    /**
     * Gets simple_pnl
     * @return double
     */
    public function getSimplePnl()
    {
        return $this->simple_pnl;
    }
  
    /**
     * Sets simple_pnl
     * @param double $simple_pnl 
     * @return $this
     */
    public function setSimplePnl($simple_pnl)
    {
        
        $this->simple_pnl = $simple_pnl;
        return $this;
    }
    
    /**
     * Gets simple_pnl_pcnt
     * @return double
     */
    public function getSimplePnlPcnt()
    {
        return $this->simple_pnl_pcnt;
    }
  
    /**
     * Sets simple_pnl_pcnt
     * @param double $simple_pnl_pcnt 
     * @return $this
     */
    public function setSimplePnlPcnt($simple_pnl_pcnt)
    {
        
        $this->simple_pnl_pcnt = $simple_pnl_pcnt;
        return $this;
    }
    
    /**
     * Gets avg_cost_price
     * @return double
     */
    public function getAvgCostPrice()
    {
        return $this->avg_cost_price;
    }
  
    /**
     * Sets avg_cost_price
     * @param double $avg_cost_price 
     * @return $this
     */
    public function setAvgCostPrice($avg_cost_price)
    {
        
        $this->avg_cost_price = $avg_cost_price;
        return $this;
    }
    
    /**
     * Gets avg_entry_price
     * @return double
     */
    public function getAvgEntryPrice()
    {
        return $this->avg_entry_price;
    }
  
    /**
     * Sets avg_entry_price
     * @param double $avg_entry_price 
     * @return $this
     */
    public function setAvgEntryPrice($avg_entry_price)
    {
        
        $this->avg_entry_price = $avg_entry_price;
        return $this;
    }
    
    /**
     * Gets break_even_price
     * @return double
     */
    public function getBreakEvenPrice()
    {
        return $this->break_even_price;
    }
  
    /**
     * Sets break_even_price
     * @param double $break_even_price 
     * @return $this
     */
    public function setBreakEvenPrice($break_even_price)
    {
        
        $this->break_even_price = $break_even_price;
        return $this;
    }
    
    /**
     * Gets margin_call_price
     * @return double
     */
    public function getMarginCallPrice()
    {
        return $this->margin_call_price;
    }
  
    /**
     * Sets margin_call_price
     * @param double $margin_call_price 
     * @return $this
     */
    public function setMarginCallPrice($margin_call_price)
    {
        
        $this->margin_call_price = $margin_call_price;
        return $this;
    }
    
    /**
     * Gets liquidation_price
     * @return double
     */
    public function getLiquidationPrice()
    {
        return $this->liquidation_price;
    }
  
    /**
     * Sets liquidation_price
     * @param double $liquidation_price 
     * @return $this
     */
    public function setLiquidationPrice($liquidation_price)
    {
        
        $this->liquidation_price = $liquidation_price;
        return $this;
    }
    
    /**
     * Gets bankrupt_price
     * @return double
     */
    public function getBankruptPrice()
    {
        return $this->bankrupt_price;
    }
  
    /**
     * Sets bankrupt_price
     * @param double $bankrupt_price 
     * @return $this
     */
    public function setBankruptPrice($bankrupt_price)
    {
        
        $this->bankrupt_price = $bankrupt_price;
        return $this;
    }
    
    /**
     * Gets timestamp
     * @return \DateTime
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }
  
    /**
     * Sets timestamp
     * @param \DateTime $timestamp 
     * @return $this
     */
    public function setTimestamp($timestamp)
    {
        
        $this->timestamp = $timestamp;
        return $this;
    }
    
    /**
     * Gets last_price
     * @return double
     */
    public function getLastPrice()
    {
        return $this->last_price;
    }
  
    /**
     * Sets last_price
     * @param double $last_price 
     * @return $this
     */
    public function setLastPrice($last_price)
    {
        
        $this->last_price = $last_price;
        return $this;
    }
    
    /**
     * Gets last_value
     * @return Number
     */
    public function getLastValue()
    {
        return $this->last_value;
    }
  
    /**
     * Sets last_value
     * @param Number $last_value 
     * @return $this
     */
    public function setLastValue($last_value)
    {
        
        $this->last_value = $last_value;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
