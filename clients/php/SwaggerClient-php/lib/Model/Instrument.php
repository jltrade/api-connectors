<?php
/**
 * Instrument
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * Instrument Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Instrument implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'symbol' => 'string',
        'root_symbol' => 'string',
        'state' => 'string',
        'typ' => 'string',
        'listing' => '\DateTime',
        'front' => '\DateTime',
        'expiry' => '\DateTime',
        'settle' => '\DateTime',
        'relist_interval' => '\DateTime',
        'inverse_leg' => 'string',
        'sell_leg' => 'string',
        'buy_leg' => 'string',
        'position_currency' => 'string',
        'underlying' => 'string',
        'quote_currency' => 'string',
        'underlying_symbol' => 'string',
        'reference' => 'string',
        'reference_symbol' => 'string',
        'calc_interval' => '\DateTime',
        'publish_interval' => '\DateTime',
        'publish_time' => '\DateTime',
        'max_order_qty' => 'Number',
        'max_price' => 'double',
        'lot_size' => 'Number',
        'tick_size' => 'double',
        'multiplier' => 'Number',
        'settl_currency' => 'string',
        'underlying_to_position_multiplier' => 'Number',
        'underlying_to_settle_multiplier' => 'Number',
        'quote_to_settle_multiplier' => 'Number',
        'is_quanto' => 'bool',
        'is_inverse' => 'bool',
        'init_margin' => 'double',
        'maint_margin' => 'double',
        'limit' => 'double',
        'capped' => 'bool',
        'taxed' => 'bool',
        'maker_fee' => 'double',
        'taker_fee' => 'double',
        'settlement_fee' => 'double',
        'insurance_fee' => 'double',
        'funding_base_symbol' => 'string',
        'funding_quote_symbol' => 'string',
        'funding_premium_symbol' => 'string',
        'funding_timestamp' => '\DateTime',
        'funding_interval' => '\DateTime',
        'funding_rate' => 'double',
        'indicative_funding_rate' => 'double',
        'rebalance_timestamp' => '\DateTime',
        'rebalance_interval' => '\DateTime',
        'opening_timestamp' => '\DateTime',
        'closing_timestamp' => '\DateTime',
        'session_interval' => '\DateTime',
        'prev_close_price' => 'double',
        'limit_down_price' => 'double',
        'limit_up_price' => 'double',
        'bankrupt_limit_down_price' => 'double',
        'bankrupt_limit_up_price' => 'double',
        'prev_total_volume' => 'Number',
        'total_volume' => 'Number',
        'volume' => 'Number',
        'volume24h' => 'Number',
        'prev_total_turnover' => 'Number',
        'total_turnover' => 'Number',
        'turnover' => 'Number',
        'turnover24h' => 'Number',
        'prev_price24h' => 'double',
        'vwap' => 'double',
        'high_price' => 'double',
        'low_price' => 'double',
        'last_price' => 'double',
        'last_price_protected' => 'double',
        'last_tick_direction' => 'string',
        'last_change_pcnt' => 'double',
        'bid_price' => 'double',
        'mid_price' => 'double',
        'ask_price' => 'double',
        'impact_bid_price' => 'double',
        'impact_mid_price' => 'double',
        'impact_ask_price' => 'double',
        'has_liquidity' => 'bool',
        'open_interest' => 'Number',
        'open_value' => 'Number',
        'fair_method' => 'string',
        'fair_basis_rate' => 'double',
        'fair_basis' => 'double',
        'fair_price' => 'double',
        'mark_method' => 'string',
        'mark_price' => 'double',
        'indicative_tax_rate' => 'double',
        'indicative_settle_price' => 'double',
        'settled_price' => 'double',
        'timestamp' => '\DateTime'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'symbol' => 'symbol',
        'root_symbol' => 'rootSymbol',
        'state' => 'state',
        'typ' => 'typ',
        'listing' => 'listing',
        'front' => 'front',
        'expiry' => 'expiry',
        'settle' => 'settle',
        'relist_interval' => 'relistInterval',
        'inverse_leg' => 'inverseLeg',
        'sell_leg' => 'sellLeg',
        'buy_leg' => 'buyLeg',
        'position_currency' => 'positionCurrency',
        'underlying' => 'underlying',
        'quote_currency' => 'quoteCurrency',
        'underlying_symbol' => 'underlyingSymbol',
        'reference' => 'reference',
        'reference_symbol' => 'referenceSymbol',
        'calc_interval' => 'calcInterval',
        'publish_interval' => 'publishInterval',
        'publish_time' => 'publishTime',
        'max_order_qty' => 'maxOrderQty',
        'max_price' => 'maxPrice',
        'lot_size' => 'lotSize',
        'tick_size' => 'tickSize',
        'multiplier' => 'multiplier',
        'settl_currency' => 'settlCurrency',
        'underlying_to_position_multiplier' => 'underlyingToPositionMultiplier',
        'underlying_to_settle_multiplier' => 'underlyingToSettleMultiplier',
        'quote_to_settle_multiplier' => 'quoteToSettleMultiplier',
        'is_quanto' => 'isQuanto',
        'is_inverse' => 'isInverse',
        'init_margin' => 'initMargin',
        'maint_margin' => 'maintMargin',
        'limit' => 'limit',
        'capped' => 'capped',
        'taxed' => 'taxed',
        'maker_fee' => 'makerFee',
        'taker_fee' => 'takerFee',
        'settlement_fee' => 'settlementFee',
        'insurance_fee' => 'insuranceFee',
        'funding_base_symbol' => 'fundingBaseSymbol',
        'funding_quote_symbol' => 'fundingQuoteSymbol',
        'funding_premium_symbol' => 'fundingPremiumSymbol',
        'funding_timestamp' => 'fundingTimestamp',
        'funding_interval' => 'fundingInterval',
        'funding_rate' => 'fundingRate',
        'indicative_funding_rate' => 'indicativeFundingRate',
        'rebalance_timestamp' => 'rebalanceTimestamp',
        'rebalance_interval' => 'rebalanceInterval',
        'opening_timestamp' => 'openingTimestamp',
        'closing_timestamp' => 'closingTimestamp',
        'session_interval' => 'sessionInterval',
        'prev_close_price' => 'prevClosePrice',
        'limit_down_price' => 'limitDownPrice',
        'limit_up_price' => 'limitUpPrice',
        'bankrupt_limit_down_price' => 'bankruptLimitDownPrice',
        'bankrupt_limit_up_price' => 'bankruptLimitUpPrice',
        'prev_total_volume' => 'prevTotalVolume',
        'total_volume' => 'totalVolume',
        'volume' => 'volume',
        'volume24h' => 'volume24h',
        'prev_total_turnover' => 'prevTotalTurnover',
        'total_turnover' => 'totalTurnover',
        'turnover' => 'turnover',
        'turnover24h' => 'turnover24h',
        'prev_price24h' => 'prevPrice24h',
        'vwap' => 'vwap',
        'high_price' => 'highPrice',
        'low_price' => 'lowPrice',
        'last_price' => 'lastPrice',
        'last_price_protected' => 'lastPriceProtected',
        'last_tick_direction' => 'lastTickDirection',
        'last_change_pcnt' => 'lastChangePcnt',
        'bid_price' => 'bidPrice',
        'mid_price' => 'midPrice',
        'ask_price' => 'askPrice',
        'impact_bid_price' => 'impactBidPrice',
        'impact_mid_price' => 'impactMidPrice',
        'impact_ask_price' => 'impactAskPrice',
        'has_liquidity' => 'hasLiquidity',
        'open_interest' => 'openInterest',
        'open_value' => 'openValue',
        'fair_method' => 'fairMethod',
        'fair_basis_rate' => 'fairBasisRate',
        'fair_basis' => 'fairBasis',
        'fair_price' => 'fairPrice',
        'mark_method' => 'markMethod',
        'mark_price' => 'markPrice',
        'indicative_tax_rate' => 'indicativeTaxRate',
        'indicative_settle_price' => 'indicativeSettlePrice',
        'settled_price' => 'settledPrice',
        'timestamp' => 'timestamp'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'symbol' => 'setSymbol',
        'root_symbol' => 'setRootSymbol',
        'state' => 'setState',
        'typ' => 'setTyp',
        'listing' => 'setListing',
        'front' => 'setFront',
        'expiry' => 'setExpiry',
        'settle' => 'setSettle',
        'relist_interval' => 'setRelistInterval',
        'inverse_leg' => 'setInverseLeg',
        'sell_leg' => 'setSellLeg',
        'buy_leg' => 'setBuyLeg',
        'position_currency' => 'setPositionCurrency',
        'underlying' => 'setUnderlying',
        'quote_currency' => 'setQuoteCurrency',
        'underlying_symbol' => 'setUnderlyingSymbol',
        'reference' => 'setReference',
        'reference_symbol' => 'setReferenceSymbol',
        'calc_interval' => 'setCalcInterval',
        'publish_interval' => 'setPublishInterval',
        'publish_time' => 'setPublishTime',
        'max_order_qty' => 'setMaxOrderQty',
        'max_price' => 'setMaxPrice',
        'lot_size' => 'setLotSize',
        'tick_size' => 'setTickSize',
        'multiplier' => 'setMultiplier',
        'settl_currency' => 'setSettlCurrency',
        'underlying_to_position_multiplier' => 'setUnderlyingToPositionMultiplier',
        'underlying_to_settle_multiplier' => 'setUnderlyingToSettleMultiplier',
        'quote_to_settle_multiplier' => 'setQuoteToSettleMultiplier',
        'is_quanto' => 'setIsQuanto',
        'is_inverse' => 'setIsInverse',
        'init_margin' => 'setInitMargin',
        'maint_margin' => 'setMaintMargin',
        'limit' => 'setLimit',
        'capped' => 'setCapped',
        'taxed' => 'setTaxed',
        'maker_fee' => 'setMakerFee',
        'taker_fee' => 'setTakerFee',
        'settlement_fee' => 'setSettlementFee',
        'insurance_fee' => 'setInsuranceFee',
        'funding_base_symbol' => 'setFundingBaseSymbol',
        'funding_quote_symbol' => 'setFundingQuoteSymbol',
        'funding_premium_symbol' => 'setFundingPremiumSymbol',
        'funding_timestamp' => 'setFundingTimestamp',
        'funding_interval' => 'setFundingInterval',
        'funding_rate' => 'setFundingRate',
        'indicative_funding_rate' => 'setIndicativeFundingRate',
        'rebalance_timestamp' => 'setRebalanceTimestamp',
        'rebalance_interval' => 'setRebalanceInterval',
        'opening_timestamp' => 'setOpeningTimestamp',
        'closing_timestamp' => 'setClosingTimestamp',
        'session_interval' => 'setSessionInterval',
        'prev_close_price' => 'setPrevClosePrice',
        'limit_down_price' => 'setLimitDownPrice',
        'limit_up_price' => 'setLimitUpPrice',
        'bankrupt_limit_down_price' => 'setBankruptLimitDownPrice',
        'bankrupt_limit_up_price' => 'setBankruptLimitUpPrice',
        'prev_total_volume' => 'setPrevTotalVolume',
        'total_volume' => 'setTotalVolume',
        'volume' => 'setVolume',
        'volume24h' => 'setVolume24h',
        'prev_total_turnover' => 'setPrevTotalTurnover',
        'total_turnover' => 'setTotalTurnover',
        'turnover' => 'setTurnover',
        'turnover24h' => 'setTurnover24h',
        'prev_price24h' => 'setPrevPrice24h',
        'vwap' => 'setVwap',
        'high_price' => 'setHighPrice',
        'low_price' => 'setLowPrice',
        'last_price' => 'setLastPrice',
        'last_price_protected' => 'setLastPriceProtected',
        'last_tick_direction' => 'setLastTickDirection',
        'last_change_pcnt' => 'setLastChangePcnt',
        'bid_price' => 'setBidPrice',
        'mid_price' => 'setMidPrice',
        'ask_price' => 'setAskPrice',
        'impact_bid_price' => 'setImpactBidPrice',
        'impact_mid_price' => 'setImpactMidPrice',
        'impact_ask_price' => 'setImpactAskPrice',
        'has_liquidity' => 'setHasLiquidity',
        'open_interest' => 'setOpenInterest',
        'open_value' => 'setOpenValue',
        'fair_method' => 'setFairMethod',
        'fair_basis_rate' => 'setFairBasisRate',
        'fair_basis' => 'setFairBasis',
        'fair_price' => 'setFairPrice',
        'mark_method' => 'setMarkMethod',
        'mark_price' => 'setMarkPrice',
        'indicative_tax_rate' => 'setIndicativeTaxRate',
        'indicative_settle_price' => 'setIndicativeSettlePrice',
        'settled_price' => 'setSettledPrice',
        'timestamp' => 'setTimestamp'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'symbol' => 'getSymbol',
        'root_symbol' => 'getRootSymbol',
        'state' => 'getState',
        'typ' => 'getTyp',
        'listing' => 'getListing',
        'front' => 'getFront',
        'expiry' => 'getExpiry',
        'settle' => 'getSettle',
        'relist_interval' => 'getRelistInterval',
        'inverse_leg' => 'getInverseLeg',
        'sell_leg' => 'getSellLeg',
        'buy_leg' => 'getBuyLeg',
        'position_currency' => 'getPositionCurrency',
        'underlying' => 'getUnderlying',
        'quote_currency' => 'getQuoteCurrency',
        'underlying_symbol' => 'getUnderlyingSymbol',
        'reference' => 'getReference',
        'reference_symbol' => 'getReferenceSymbol',
        'calc_interval' => 'getCalcInterval',
        'publish_interval' => 'getPublishInterval',
        'publish_time' => 'getPublishTime',
        'max_order_qty' => 'getMaxOrderQty',
        'max_price' => 'getMaxPrice',
        'lot_size' => 'getLotSize',
        'tick_size' => 'getTickSize',
        'multiplier' => 'getMultiplier',
        'settl_currency' => 'getSettlCurrency',
        'underlying_to_position_multiplier' => 'getUnderlyingToPositionMultiplier',
        'underlying_to_settle_multiplier' => 'getUnderlyingToSettleMultiplier',
        'quote_to_settle_multiplier' => 'getQuoteToSettleMultiplier',
        'is_quanto' => 'getIsQuanto',
        'is_inverse' => 'getIsInverse',
        'init_margin' => 'getInitMargin',
        'maint_margin' => 'getMaintMargin',
        'limit' => 'getLimit',
        'capped' => 'getCapped',
        'taxed' => 'getTaxed',
        'maker_fee' => 'getMakerFee',
        'taker_fee' => 'getTakerFee',
        'settlement_fee' => 'getSettlementFee',
        'insurance_fee' => 'getInsuranceFee',
        'funding_base_symbol' => 'getFundingBaseSymbol',
        'funding_quote_symbol' => 'getFundingQuoteSymbol',
        'funding_premium_symbol' => 'getFundingPremiumSymbol',
        'funding_timestamp' => 'getFundingTimestamp',
        'funding_interval' => 'getFundingInterval',
        'funding_rate' => 'getFundingRate',
        'indicative_funding_rate' => 'getIndicativeFundingRate',
        'rebalance_timestamp' => 'getRebalanceTimestamp',
        'rebalance_interval' => 'getRebalanceInterval',
        'opening_timestamp' => 'getOpeningTimestamp',
        'closing_timestamp' => 'getClosingTimestamp',
        'session_interval' => 'getSessionInterval',
        'prev_close_price' => 'getPrevClosePrice',
        'limit_down_price' => 'getLimitDownPrice',
        'limit_up_price' => 'getLimitUpPrice',
        'bankrupt_limit_down_price' => 'getBankruptLimitDownPrice',
        'bankrupt_limit_up_price' => 'getBankruptLimitUpPrice',
        'prev_total_volume' => 'getPrevTotalVolume',
        'total_volume' => 'getTotalVolume',
        'volume' => 'getVolume',
        'volume24h' => 'getVolume24h',
        'prev_total_turnover' => 'getPrevTotalTurnover',
        'total_turnover' => 'getTotalTurnover',
        'turnover' => 'getTurnover',
        'turnover24h' => 'getTurnover24h',
        'prev_price24h' => 'getPrevPrice24h',
        'vwap' => 'getVwap',
        'high_price' => 'getHighPrice',
        'low_price' => 'getLowPrice',
        'last_price' => 'getLastPrice',
        'last_price_protected' => 'getLastPriceProtected',
        'last_tick_direction' => 'getLastTickDirection',
        'last_change_pcnt' => 'getLastChangePcnt',
        'bid_price' => 'getBidPrice',
        'mid_price' => 'getMidPrice',
        'ask_price' => 'getAskPrice',
        'impact_bid_price' => 'getImpactBidPrice',
        'impact_mid_price' => 'getImpactMidPrice',
        'impact_ask_price' => 'getImpactAskPrice',
        'has_liquidity' => 'getHasLiquidity',
        'open_interest' => 'getOpenInterest',
        'open_value' => 'getOpenValue',
        'fair_method' => 'getFairMethod',
        'fair_basis_rate' => 'getFairBasisRate',
        'fair_basis' => 'getFairBasis',
        'fair_price' => 'getFairPrice',
        'mark_method' => 'getMarkMethod',
        'mark_price' => 'getMarkPrice',
        'indicative_tax_rate' => 'getIndicativeTaxRate',
        'indicative_settle_price' => 'getIndicativeSettlePrice',
        'settled_price' => 'getSettledPrice',
        'timestamp' => 'getTimestamp'
    );
  
    
    /**
      * $symbol 
      * @var string
      */
    protected $symbol;
    
    /**
      * $root_symbol 
      * @var string
      */
    protected $root_symbol;
    
    /**
      * $state 
      * @var string
      */
    protected $state;
    
    /**
      * $typ 
      * @var string
      */
    protected $typ;
    
    /**
      * $listing 
      * @var \DateTime
      */
    protected $listing;
    
    /**
      * $front 
      * @var \DateTime
      */
    protected $front;
    
    /**
      * $expiry 
      * @var \DateTime
      */
    protected $expiry;
    
    /**
      * $settle 
      * @var \DateTime
      */
    protected $settle;
    
    /**
      * $relist_interval 
      * @var \DateTime
      */
    protected $relist_interval;
    
    /**
      * $inverse_leg 
      * @var string
      */
    protected $inverse_leg;
    
    /**
      * $sell_leg 
      * @var string
      */
    protected $sell_leg;
    
    /**
      * $buy_leg 
      * @var string
      */
    protected $buy_leg;
    
    /**
      * $position_currency 
      * @var string
      */
    protected $position_currency;
    
    /**
      * $underlying 
      * @var string
      */
    protected $underlying;
    
    /**
      * $quote_currency 
      * @var string
      */
    protected $quote_currency;
    
    /**
      * $underlying_symbol 
      * @var string
      */
    protected $underlying_symbol;
    
    /**
      * $reference 
      * @var string
      */
    protected $reference;
    
    /**
      * $reference_symbol 
      * @var string
      */
    protected $reference_symbol;
    
    /**
      * $calc_interval 
      * @var \DateTime
      */
    protected $calc_interval;
    
    /**
      * $publish_interval 
      * @var \DateTime
      */
    protected $publish_interval;
    
    /**
      * $publish_time 
      * @var \DateTime
      */
    protected $publish_time;
    
    /**
      * $max_order_qty 
      * @var Number
      */
    protected $max_order_qty;
    
    /**
      * $max_price 
      * @var double
      */
    protected $max_price;
    
    /**
      * $lot_size 
      * @var Number
      */
    protected $lot_size;
    
    /**
      * $tick_size 
      * @var double
      */
    protected $tick_size;
    
    /**
      * $multiplier 
      * @var Number
      */
    protected $multiplier;
    
    /**
      * $settl_currency 
      * @var string
      */
    protected $settl_currency;
    
    /**
      * $underlying_to_position_multiplier 
      * @var Number
      */
    protected $underlying_to_position_multiplier;
    
    /**
      * $underlying_to_settle_multiplier 
      * @var Number
      */
    protected $underlying_to_settle_multiplier;
    
    /**
      * $quote_to_settle_multiplier 
      * @var Number
      */
    protected $quote_to_settle_multiplier;
    
    /**
      * $is_quanto 
      * @var bool
      */
    protected $is_quanto;
    
    /**
      * $is_inverse 
      * @var bool
      */
    protected $is_inverse;
    
    /**
      * $init_margin 
      * @var double
      */
    protected $init_margin;
    
    /**
      * $maint_margin 
      * @var double
      */
    protected $maint_margin;
    
    /**
      * $limit 
      * @var double
      */
    protected $limit;
    
    /**
      * $capped 
      * @var bool
      */
    protected $capped;
    
    /**
      * $taxed 
      * @var bool
      */
    protected $taxed;
    
    /**
      * $maker_fee 
      * @var double
      */
    protected $maker_fee;
    
    /**
      * $taker_fee 
      * @var double
      */
    protected $taker_fee;
    
    /**
      * $settlement_fee 
      * @var double
      */
    protected $settlement_fee;
    
    /**
      * $insurance_fee 
      * @var double
      */
    protected $insurance_fee;
    
    /**
      * $funding_base_symbol 
      * @var string
      */
    protected $funding_base_symbol;
    
    /**
      * $funding_quote_symbol 
      * @var string
      */
    protected $funding_quote_symbol;
    
    /**
      * $funding_premium_symbol 
      * @var string
      */
    protected $funding_premium_symbol;
    
    /**
      * $funding_timestamp 
      * @var \DateTime
      */
    protected $funding_timestamp;
    
    /**
      * $funding_interval 
      * @var \DateTime
      */
    protected $funding_interval;
    
    /**
      * $funding_rate 
      * @var double
      */
    protected $funding_rate;
    
    /**
      * $indicative_funding_rate 
      * @var double
      */
    protected $indicative_funding_rate;
    
    /**
      * $rebalance_timestamp 
      * @var \DateTime
      */
    protected $rebalance_timestamp;
    
    /**
      * $rebalance_interval 
      * @var \DateTime
      */
    protected $rebalance_interval;
    
    /**
      * $opening_timestamp 
      * @var \DateTime
      */
    protected $opening_timestamp;
    
    /**
      * $closing_timestamp 
      * @var \DateTime
      */
    protected $closing_timestamp;
    
    /**
      * $session_interval 
      * @var \DateTime
      */
    protected $session_interval;
    
    /**
      * $prev_close_price 
      * @var double
      */
    protected $prev_close_price;
    
    /**
      * $limit_down_price 
      * @var double
      */
    protected $limit_down_price;
    
    /**
      * $limit_up_price 
      * @var double
      */
    protected $limit_up_price;
    
    /**
      * $bankrupt_limit_down_price 
      * @var double
      */
    protected $bankrupt_limit_down_price;
    
    /**
      * $bankrupt_limit_up_price 
      * @var double
      */
    protected $bankrupt_limit_up_price;
    
    /**
      * $prev_total_volume 
      * @var Number
      */
    protected $prev_total_volume;
    
    /**
      * $total_volume 
      * @var Number
      */
    protected $total_volume;
    
    /**
      * $volume 
      * @var Number
      */
    protected $volume;
    
    /**
      * $volume24h 
      * @var Number
      */
    protected $volume24h;
    
    /**
      * $prev_total_turnover 
      * @var Number
      */
    protected $prev_total_turnover;
    
    /**
      * $total_turnover 
      * @var Number
      */
    protected $total_turnover;
    
    /**
      * $turnover 
      * @var Number
      */
    protected $turnover;
    
    /**
      * $turnover24h 
      * @var Number
      */
    protected $turnover24h;
    
    /**
      * $prev_price24h 
      * @var double
      */
    protected $prev_price24h;
    
    /**
      * $vwap 
      * @var double
      */
    protected $vwap;
    
    /**
      * $high_price 
      * @var double
      */
    protected $high_price;
    
    /**
      * $low_price 
      * @var double
      */
    protected $low_price;
    
    /**
      * $last_price 
      * @var double
      */
    protected $last_price;
    
    /**
      * $last_price_protected 
      * @var double
      */
    protected $last_price_protected;
    
    /**
      * $last_tick_direction 
      * @var string
      */
    protected $last_tick_direction;
    
    /**
      * $last_change_pcnt 
      * @var double
      */
    protected $last_change_pcnt;
    
    /**
      * $bid_price 
      * @var double
      */
    protected $bid_price;
    
    /**
      * $mid_price 
      * @var double
      */
    protected $mid_price;
    
    /**
      * $ask_price 
      * @var double
      */
    protected $ask_price;
    
    /**
      * $impact_bid_price 
      * @var double
      */
    protected $impact_bid_price;
    
    /**
      * $impact_mid_price 
      * @var double
      */
    protected $impact_mid_price;
    
    /**
      * $impact_ask_price 
      * @var double
      */
    protected $impact_ask_price;
    
    /**
      * $has_liquidity 
      * @var bool
      */
    protected $has_liquidity;
    
    /**
      * $open_interest 
      * @var Number
      */
    protected $open_interest;
    
    /**
      * $open_value 
      * @var Number
      */
    protected $open_value;
    
    /**
      * $fair_method 
      * @var string
      */
    protected $fair_method;
    
    /**
      * $fair_basis_rate 
      * @var double
      */
    protected $fair_basis_rate;
    
    /**
      * $fair_basis 
      * @var double
      */
    protected $fair_basis;
    
    /**
      * $fair_price 
      * @var double
      */
    protected $fair_price;
    
    /**
      * $mark_method 
      * @var string
      */
    protected $mark_method;
    
    /**
      * $mark_price 
      * @var double
      */
    protected $mark_price;
    
    /**
      * $indicative_tax_rate 
      * @var double
      */
    protected $indicative_tax_rate;
    
    /**
      * $indicative_settle_price 
      * @var double
      */
    protected $indicative_settle_price;
    
    /**
      * $settled_price 
      * @var double
      */
    protected $settled_price;
    
    /**
      * $timestamp 
      * @var \DateTime
      */
    protected $timestamp;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->symbol = $data["symbol"];
            $this->root_symbol = $data["root_symbol"];
            $this->state = $data["state"];
            $this->typ = $data["typ"];
            $this->listing = $data["listing"];
            $this->front = $data["front"];
            $this->expiry = $data["expiry"];
            $this->settle = $data["settle"];
            $this->relist_interval = $data["relist_interval"];
            $this->inverse_leg = $data["inverse_leg"];
            $this->sell_leg = $data["sell_leg"];
            $this->buy_leg = $data["buy_leg"];
            $this->position_currency = $data["position_currency"];
            $this->underlying = $data["underlying"];
            $this->quote_currency = $data["quote_currency"];
            $this->underlying_symbol = $data["underlying_symbol"];
            $this->reference = $data["reference"];
            $this->reference_symbol = $data["reference_symbol"];
            $this->calc_interval = $data["calc_interval"];
            $this->publish_interval = $data["publish_interval"];
            $this->publish_time = $data["publish_time"];
            $this->max_order_qty = $data["max_order_qty"];
            $this->max_price = $data["max_price"];
            $this->lot_size = $data["lot_size"];
            $this->tick_size = $data["tick_size"];
            $this->multiplier = $data["multiplier"];
            $this->settl_currency = $data["settl_currency"];
            $this->underlying_to_position_multiplier = $data["underlying_to_position_multiplier"];
            $this->underlying_to_settle_multiplier = $data["underlying_to_settle_multiplier"];
            $this->quote_to_settle_multiplier = $data["quote_to_settle_multiplier"];
            $this->is_quanto = $data["is_quanto"];
            $this->is_inverse = $data["is_inverse"];
            $this->init_margin = $data["init_margin"];
            $this->maint_margin = $data["maint_margin"];
            $this->limit = $data["limit"];
            $this->capped = $data["capped"];
            $this->taxed = $data["taxed"];
            $this->maker_fee = $data["maker_fee"];
            $this->taker_fee = $data["taker_fee"];
            $this->settlement_fee = $data["settlement_fee"];
            $this->insurance_fee = $data["insurance_fee"];
            $this->funding_base_symbol = $data["funding_base_symbol"];
            $this->funding_quote_symbol = $data["funding_quote_symbol"];
            $this->funding_premium_symbol = $data["funding_premium_symbol"];
            $this->funding_timestamp = $data["funding_timestamp"];
            $this->funding_interval = $data["funding_interval"];
            $this->funding_rate = $data["funding_rate"];
            $this->indicative_funding_rate = $data["indicative_funding_rate"];
            $this->rebalance_timestamp = $data["rebalance_timestamp"];
            $this->rebalance_interval = $data["rebalance_interval"];
            $this->opening_timestamp = $data["opening_timestamp"];
            $this->closing_timestamp = $data["closing_timestamp"];
            $this->session_interval = $data["session_interval"];
            $this->prev_close_price = $data["prev_close_price"];
            $this->limit_down_price = $data["limit_down_price"];
            $this->limit_up_price = $data["limit_up_price"];
            $this->bankrupt_limit_down_price = $data["bankrupt_limit_down_price"];
            $this->bankrupt_limit_up_price = $data["bankrupt_limit_up_price"];
            $this->prev_total_volume = $data["prev_total_volume"];
            $this->total_volume = $data["total_volume"];
            $this->volume = $data["volume"];
            $this->volume24h = $data["volume24h"];
            $this->prev_total_turnover = $data["prev_total_turnover"];
            $this->total_turnover = $data["total_turnover"];
            $this->turnover = $data["turnover"];
            $this->turnover24h = $data["turnover24h"];
            $this->prev_price24h = $data["prev_price24h"];
            $this->vwap = $data["vwap"];
            $this->high_price = $data["high_price"];
            $this->low_price = $data["low_price"];
            $this->last_price = $data["last_price"];
            $this->last_price_protected = $data["last_price_protected"];
            $this->last_tick_direction = $data["last_tick_direction"];
            $this->last_change_pcnt = $data["last_change_pcnt"];
            $this->bid_price = $data["bid_price"];
            $this->mid_price = $data["mid_price"];
            $this->ask_price = $data["ask_price"];
            $this->impact_bid_price = $data["impact_bid_price"];
            $this->impact_mid_price = $data["impact_mid_price"];
            $this->impact_ask_price = $data["impact_ask_price"];
            $this->has_liquidity = $data["has_liquidity"];
            $this->open_interest = $data["open_interest"];
            $this->open_value = $data["open_value"];
            $this->fair_method = $data["fair_method"];
            $this->fair_basis_rate = $data["fair_basis_rate"];
            $this->fair_basis = $data["fair_basis"];
            $this->fair_price = $data["fair_price"];
            $this->mark_method = $data["mark_method"];
            $this->mark_price = $data["mark_price"];
            $this->indicative_tax_rate = $data["indicative_tax_rate"];
            $this->indicative_settle_price = $data["indicative_settle_price"];
            $this->settled_price = $data["settled_price"];
            $this->timestamp = $data["timestamp"];
        }
    }
    
    /**
     * Gets symbol
     * @return string
     */
    public function getSymbol()
    {
        return $this->symbol;
    }
  
    /**
     * Sets symbol
     * @param string $symbol 
     * @return $this
     */
    public function setSymbol($symbol)
    {
        
        $this->symbol = $symbol;
        return $this;
    }
    
    /**
     * Gets root_symbol
     * @return string
     */
    public function getRootSymbol()
    {
        return $this->root_symbol;
    }
  
    /**
     * Sets root_symbol
     * @param string $root_symbol 
     * @return $this
     */
    public function setRootSymbol($root_symbol)
    {
        
        $this->root_symbol = $root_symbol;
        return $this;
    }
    
    /**
     * Gets state
     * @return string
     */
    public function getState()
    {
        return $this->state;
    }
  
    /**
     * Sets state
     * @param string $state 
     * @return $this
     */
    public function setState($state)
    {
        
        $this->state = $state;
        return $this;
    }
    
    /**
     * Gets typ
     * @return string
     */
    public function getTyp()
    {
        return $this->typ;
    }
  
    /**
     * Sets typ
     * @param string $typ 
     * @return $this
     */
    public function setTyp($typ)
    {
        
        $this->typ = $typ;
        return $this;
    }
    
    /**
     * Gets listing
     * @return \DateTime
     */
    public function getListing()
    {
        return $this->listing;
    }
  
    /**
     * Sets listing
     * @param \DateTime $listing 
     * @return $this
     */
    public function setListing($listing)
    {
        
        $this->listing = $listing;
        return $this;
    }
    
    /**
     * Gets front
     * @return \DateTime
     */
    public function getFront()
    {
        return $this->front;
    }
  
    /**
     * Sets front
     * @param \DateTime $front 
     * @return $this
     */
    public function setFront($front)
    {
        
        $this->front = $front;
        return $this;
    }
    
    /**
     * Gets expiry
     * @return \DateTime
     */
    public function getExpiry()
    {
        return $this->expiry;
    }
  
    /**
     * Sets expiry
     * @param \DateTime $expiry 
     * @return $this
     */
    public function setExpiry($expiry)
    {
        
        $this->expiry = $expiry;
        return $this;
    }
    
    /**
     * Gets settle
     * @return \DateTime
     */
    public function getSettle()
    {
        return $this->settle;
    }
  
    /**
     * Sets settle
     * @param \DateTime $settle 
     * @return $this
     */
    public function setSettle($settle)
    {
        
        $this->settle = $settle;
        return $this;
    }
    
    /**
     * Gets relist_interval
     * @return \DateTime
     */
    public function getRelistInterval()
    {
        return $this->relist_interval;
    }
  
    /**
     * Sets relist_interval
     * @param \DateTime $relist_interval 
     * @return $this
     */
    public function setRelistInterval($relist_interval)
    {
        
        $this->relist_interval = $relist_interval;
        return $this;
    }
    
    /**
     * Gets inverse_leg
     * @return string
     */
    public function getInverseLeg()
    {
        return $this->inverse_leg;
    }
  
    /**
     * Sets inverse_leg
     * @param string $inverse_leg 
     * @return $this
     */
    public function setInverseLeg($inverse_leg)
    {
        
        $this->inverse_leg = $inverse_leg;
        return $this;
    }
    
    /**
     * Gets sell_leg
     * @return string
     */
    public function getSellLeg()
    {
        return $this->sell_leg;
    }
  
    /**
     * Sets sell_leg
     * @param string $sell_leg 
     * @return $this
     */
    public function setSellLeg($sell_leg)
    {
        
        $this->sell_leg = $sell_leg;
        return $this;
    }
    
    /**
     * Gets buy_leg
     * @return string
     */
    public function getBuyLeg()
    {
        return $this->buy_leg;
    }
  
    /**
     * Sets buy_leg
     * @param string $buy_leg 
     * @return $this
     */
    public function setBuyLeg($buy_leg)
    {
        
        $this->buy_leg = $buy_leg;
        return $this;
    }
    
    /**
     * Gets position_currency
     * @return string
     */
    public function getPositionCurrency()
    {
        return $this->position_currency;
    }
  
    /**
     * Sets position_currency
     * @param string $position_currency 
     * @return $this
     */
    public function setPositionCurrency($position_currency)
    {
        
        $this->position_currency = $position_currency;
        return $this;
    }
    
    /**
     * Gets underlying
     * @return string
     */
    public function getUnderlying()
    {
        return $this->underlying;
    }
  
    /**
     * Sets underlying
     * @param string $underlying 
     * @return $this
     */
    public function setUnderlying($underlying)
    {
        
        $this->underlying = $underlying;
        return $this;
    }
    
    /**
     * Gets quote_currency
     * @return string
     */
    public function getQuoteCurrency()
    {
        return $this->quote_currency;
    }
  
    /**
     * Sets quote_currency
     * @param string $quote_currency 
     * @return $this
     */
    public function setQuoteCurrency($quote_currency)
    {
        
        $this->quote_currency = $quote_currency;
        return $this;
    }
    
    /**
     * Gets underlying_symbol
     * @return string
     */
    public function getUnderlyingSymbol()
    {
        return $this->underlying_symbol;
    }
  
    /**
     * Sets underlying_symbol
     * @param string $underlying_symbol 
     * @return $this
     */
    public function setUnderlyingSymbol($underlying_symbol)
    {
        
        $this->underlying_symbol = $underlying_symbol;
        return $this;
    }
    
    /**
     * Gets reference
     * @return string
     */
    public function getReference()
    {
        return $this->reference;
    }
  
    /**
     * Sets reference
     * @param string $reference 
     * @return $this
     */
    public function setReference($reference)
    {
        
        $this->reference = $reference;
        return $this;
    }
    
    /**
     * Gets reference_symbol
     * @return string
     */
    public function getReferenceSymbol()
    {
        return $this->reference_symbol;
    }
  
    /**
     * Sets reference_symbol
     * @param string $reference_symbol 
     * @return $this
     */
    public function setReferenceSymbol($reference_symbol)
    {
        
        $this->reference_symbol = $reference_symbol;
        return $this;
    }
    
    /**
     * Gets calc_interval
     * @return \DateTime
     */
    public function getCalcInterval()
    {
        return $this->calc_interval;
    }
  
    /**
     * Sets calc_interval
     * @param \DateTime $calc_interval 
     * @return $this
     */
    public function setCalcInterval($calc_interval)
    {
        
        $this->calc_interval = $calc_interval;
        return $this;
    }
    
    /**
     * Gets publish_interval
     * @return \DateTime
     */
    public function getPublishInterval()
    {
        return $this->publish_interval;
    }
  
    /**
     * Sets publish_interval
     * @param \DateTime $publish_interval 
     * @return $this
     */
    public function setPublishInterval($publish_interval)
    {
        
        $this->publish_interval = $publish_interval;
        return $this;
    }
    
    /**
     * Gets publish_time
     * @return \DateTime
     */
    public function getPublishTime()
    {
        return $this->publish_time;
    }
  
    /**
     * Sets publish_time
     * @param \DateTime $publish_time 
     * @return $this
     */
    public function setPublishTime($publish_time)
    {
        
        $this->publish_time = $publish_time;
        return $this;
    }
    
    /**
     * Gets max_order_qty
     * @return Number
     */
    public function getMaxOrderQty()
    {
        return $this->max_order_qty;
    }
  
    /**
     * Sets max_order_qty
     * @param Number $max_order_qty 
     * @return $this
     */
    public function setMaxOrderQty($max_order_qty)
    {
        
        $this->max_order_qty = $max_order_qty;
        return $this;
    }
    
    /**
     * Gets max_price
     * @return double
     */
    public function getMaxPrice()
    {
        return $this->max_price;
    }
  
    /**
     * Sets max_price
     * @param double $max_price 
     * @return $this
     */
    public function setMaxPrice($max_price)
    {
        
        $this->max_price = $max_price;
        return $this;
    }
    
    /**
     * Gets lot_size
     * @return Number
     */
    public function getLotSize()
    {
        return $this->lot_size;
    }
  
    /**
     * Sets lot_size
     * @param Number $lot_size 
     * @return $this
     */
    public function setLotSize($lot_size)
    {
        
        $this->lot_size = $lot_size;
        return $this;
    }
    
    /**
     * Gets tick_size
     * @return double
     */
    public function getTickSize()
    {
        return $this->tick_size;
    }
  
    /**
     * Sets tick_size
     * @param double $tick_size 
     * @return $this
     */
    public function setTickSize($tick_size)
    {
        
        $this->tick_size = $tick_size;
        return $this;
    }
    
    /**
     * Gets multiplier
     * @return Number
     */
    public function getMultiplier()
    {
        return $this->multiplier;
    }
  
    /**
     * Sets multiplier
     * @param Number $multiplier 
     * @return $this
     */
    public function setMultiplier($multiplier)
    {
        
        $this->multiplier = $multiplier;
        return $this;
    }
    
    /**
     * Gets settl_currency
     * @return string
     */
    public function getSettlCurrency()
    {
        return $this->settl_currency;
    }
  
    /**
     * Sets settl_currency
     * @param string $settl_currency 
     * @return $this
     */
    public function setSettlCurrency($settl_currency)
    {
        
        $this->settl_currency = $settl_currency;
        return $this;
    }
    
    /**
     * Gets underlying_to_position_multiplier
     * @return Number
     */
    public function getUnderlyingToPositionMultiplier()
    {
        return $this->underlying_to_position_multiplier;
    }
  
    /**
     * Sets underlying_to_position_multiplier
     * @param Number $underlying_to_position_multiplier 
     * @return $this
     */
    public function setUnderlyingToPositionMultiplier($underlying_to_position_multiplier)
    {
        
        $this->underlying_to_position_multiplier = $underlying_to_position_multiplier;
        return $this;
    }
    
    /**
     * Gets underlying_to_settle_multiplier
     * @return Number
     */
    public function getUnderlyingToSettleMultiplier()
    {
        return $this->underlying_to_settle_multiplier;
    }
  
    /**
     * Sets underlying_to_settle_multiplier
     * @param Number $underlying_to_settle_multiplier 
     * @return $this
     */
    public function setUnderlyingToSettleMultiplier($underlying_to_settle_multiplier)
    {
        
        $this->underlying_to_settle_multiplier = $underlying_to_settle_multiplier;
        return $this;
    }
    
    /**
     * Gets quote_to_settle_multiplier
     * @return Number
     */
    public function getQuoteToSettleMultiplier()
    {
        return $this->quote_to_settle_multiplier;
    }
  
    /**
     * Sets quote_to_settle_multiplier
     * @param Number $quote_to_settle_multiplier 
     * @return $this
     */
    public function setQuoteToSettleMultiplier($quote_to_settle_multiplier)
    {
        
        $this->quote_to_settle_multiplier = $quote_to_settle_multiplier;
        return $this;
    }
    
    /**
     * Gets is_quanto
     * @return bool
     */
    public function getIsQuanto()
    {
        return $this->is_quanto;
    }
  
    /**
     * Sets is_quanto
     * @param bool $is_quanto 
     * @return $this
     */
    public function setIsQuanto($is_quanto)
    {
        
        $this->is_quanto = $is_quanto;
        return $this;
    }
    
    /**
     * Gets is_inverse
     * @return bool
     */
    public function getIsInverse()
    {
        return $this->is_inverse;
    }
  
    /**
     * Sets is_inverse
     * @param bool $is_inverse 
     * @return $this
     */
    public function setIsInverse($is_inverse)
    {
        
        $this->is_inverse = $is_inverse;
        return $this;
    }
    
    /**
     * Gets init_margin
     * @return double
     */
    public function getInitMargin()
    {
        return $this->init_margin;
    }
  
    /**
     * Sets init_margin
     * @param double $init_margin 
     * @return $this
     */
    public function setInitMargin($init_margin)
    {
        
        $this->init_margin = $init_margin;
        return $this;
    }
    
    /**
     * Gets maint_margin
     * @return double
     */
    public function getMaintMargin()
    {
        return $this->maint_margin;
    }
  
    /**
     * Sets maint_margin
     * @param double $maint_margin 
     * @return $this
     */
    public function setMaintMargin($maint_margin)
    {
        
        $this->maint_margin = $maint_margin;
        return $this;
    }
    
    /**
     * Gets limit
     * @return double
     */
    public function getLimit()
    {
        return $this->limit;
    }
  
    /**
     * Sets limit
     * @param double $limit 
     * @return $this
     */
    public function setLimit($limit)
    {
        
        $this->limit = $limit;
        return $this;
    }
    
    /**
     * Gets capped
     * @return bool
     */
    public function getCapped()
    {
        return $this->capped;
    }
  
    /**
     * Sets capped
     * @param bool $capped 
     * @return $this
     */
    public function setCapped($capped)
    {
        
        $this->capped = $capped;
        return $this;
    }
    
    /**
     * Gets taxed
     * @return bool
     */
    public function getTaxed()
    {
        return $this->taxed;
    }
  
    /**
     * Sets taxed
     * @param bool $taxed 
     * @return $this
     */
    public function setTaxed($taxed)
    {
        
        $this->taxed = $taxed;
        return $this;
    }
    
    /**
     * Gets maker_fee
     * @return double
     */
    public function getMakerFee()
    {
        return $this->maker_fee;
    }
  
    /**
     * Sets maker_fee
     * @param double $maker_fee 
     * @return $this
     */
    public function setMakerFee($maker_fee)
    {
        
        $this->maker_fee = $maker_fee;
        return $this;
    }
    
    /**
     * Gets taker_fee
     * @return double
     */
    public function getTakerFee()
    {
        return $this->taker_fee;
    }
  
    /**
     * Sets taker_fee
     * @param double $taker_fee 
     * @return $this
     */
    public function setTakerFee($taker_fee)
    {
        
        $this->taker_fee = $taker_fee;
        return $this;
    }
    
    /**
     * Gets settlement_fee
     * @return double
     */
    public function getSettlementFee()
    {
        return $this->settlement_fee;
    }
  
    /**
     * Sets settlement_fee
     * @param double $settlement_fee 
     * @return $this
     */
    public function setSettlementFee($settlement_fee)
    {
        
        $this->settlement_fee = $settlement_fee;
        return $this;
    }
    
    /**
     * Gets insurance_fee
     * @return double
     */
    public function getInsuranceFee()
    {
        return $this->insurance_fee;
    }
  
    /**
     * Sets insurance_fee
     * @param double $insurance_fee 
     * @return $this
     */
    public function setInsuranceFee($insurance_fee)
    {
        
        $this->insurance_fee = $insurance_fee;
        return $this;
    }
    
    /**
     * Gets funding_base_symbol
     * @return string
     */
    public function getFundingBaseSymbol()
    {
        return $this->funding_base_symbol;
    }
  
    /**
     * Sets funding_base_symbol
     * @param string $funding_base_symbol 
     * @return $this
     */
    public function setFundingBaseSymbol($funding_base_symbol)
    {
        
        $this->funding_base_symbol = $funding_base_symbol;
        return $this;
    }
    
    /**
     * Gets funding_quote_symbol
     * @return string
     */
    public function getFundingQuoteSymbol()
    {
        return $this->funding_quote_symbol;
    }
  
    /**
     * Sets funding_quote_symbol
     * @param string $funding_quote_symbol 
     * @return $this
     */
    public function setFundingQuoteSymbol($funding_quote_symbol)
    {
        
        $this->funding_quote_symbol = $funding_quote_symbol;
        return $this;
    }
    
    /**
     * Gets funding_premium_symbol
     * @return string
     */
    public function getFundingPremiumSymbol()
    {
        return $this->funding_premium_symbol;
    }
  
    /**
     * Sets funding_premium_symbol
     * @param string $funding_premium_symbol 
     * @return $this
     */
    public function setFundingPremiumSymbol($funding_premium_symbol)
    {
        
        $this->funding_premium_symbol = $funding_premium_symbol;
        return $this;
    }
    
    /**
     * Gets funding_timestamp
     * @return \DateTime
     */
    public function getFundingTimestamp()
    {
        return $this->funding_timestamp;
    }
  
    /**
     * Sets funding_timestamp
     * @param \DateTime $funding_timestamp 
     * @return $this
     */
    public function setFundingTimestamp($funding_timestamp)
    {
        
        $this->funding_timestamp = $funding_timestamp;
        return $this;
    }
    
    /**
     * Gets funding_interval
     * @return \DateTime
     */
    public function getFundingInterval()
    {
        return $this->funding_interval;
    }
  
    /**
     * Sets funding_interval
     * @param \DateTime $funding_interval 
     * @return $this
     */
    public function setFundingInterval($funding_interval)
    {
        
        $this->funding_interval = $funding_interval;
        return $this;
    }
    
    /**
     * Gets funding_rate
     * @return double
     */
    public function getFundingRate()
    {
        return $this->funding_rate;
    }
  
    /**
     * Sets funding_rate
     * @param double $funding_rate 
     * @return $this
     */
    public function setFundingRate($funding_rate)
    {
        
        $this->funding_rate = $funding_rate;
        return $this;
    }
    
    /**
     * Gets indicative_funding_rate
     * @return double
     */
    public function getIndicativeFundingRate()
    {
        return $this->indicative_funding_rate;
    }
  
    /**
     * Sets indicative_funding_rate
     * @param double $indicative_funding_rate 
     * @return $this
     */
    public function setIndicativeFundingRate($indicative_funding_rate)
    {
        
        $this->indicative_funding_rate = $indicative_funding_rate;
        return $this;
    }
    
    /**
     * Gets rebalance_timestamp
     * @return \DateTime
     */
    public function getRebalanceTimestamp()
    {
        return $this->rebalance_timestamp;
    }
  
    /**
     * Sets rebalance_timestamp
     * @param \DateTime $rebalance_timestamp 
     * @return $this
     */
    public function setRebalanceTimestamp($rebalance_timestamp)
    {
        
        $this->rebalance_timestamp = $rebalance_timestamp;
        return $this;
    }
    
    /**
     * Gets rebalance_interval
     * @return \DateTime
     */
    public function getRebalanceInterval()
    {
        return $this->rebalance_interval;
    }
  
    /**
     * Sets rebalance_interval
     * @param \DateTime $rebalance_interval 
     * @return $this
     */
    public function setRebalanceInterval($rebalance_interval)
    {
        
        $this->rebalance_interval = $rebalance_interval;
        return $this;
    }
    
    /**
     * Gets opening_timestamp
     * @return \DateTime
     */
    public function getOpeningTimestamp()
    {
        return $this->opening_timestamp;
    }
  
    /**
     * Sets opening_timestamp
     * @param \DateTime $opening_timestamp 
     * @return $this
     */
    public function setOpeningTimestamp($opening_timestamp)
    {
        
        $this->opening_timestamp = $opening_timestamp;
        return $this;
    }
    
    /**
     * Gets closing_timestamp
     * @return \DateTime
     */
    public function getClosingTimestamp()
    {
        return $this->closing_timestamp;
    }
  
    /**
     * Sets closing_timestamp
     * @param \DateTime $closing_timestamp 
     * @return $this
     */
    public function setClosingTimestamp($closing_timestamp)
    {
        
        $this->closing_timestamp = $closing_timestamp;
        return $this;
    }
    
    /**
     * Gets session_interval
     * @return \DateTime
     */
    public function getSessionInterval()
    {
        return $this->session_interval;
    }
  
    /**
     * Sets session_interval
     * @param \DateTime $session_interval 
     * @return $this
     */
    public function setSessionInterval($session_interval)
    {
        
        $this->session_interval = $session_interval;
        return $this;
    }
    
    /**
     * Gets prev_close_price
     * @return double
     */
    public function getPrevClosePrice()
    {
        return $this->prev_close_price;
    }
  
    /**
     * Sets prev_close_price
     * @param double $prev_close_price 
     * @return $this
     */
    public function setPrevClosePrice($prev_close_price)
    {
        
        $this->prev_close_price = $prev_close_price;
        return $this;
    }
    
    /**
     * Gets limit_down_price
     * @return double
     */
    public function getLimitDownPrice()
    {
        return $this->limit_down_price;
    }
  
    /**
     * Sets limit_down_price
     * @param double $limit_down_price 
     * @return $this
     */
    public function setLimitDownPrice($limit_down_price)
    {
        
        $this->limit_down_price = $limit_down_price;
        return $this;
    }
    
    /**
     * Gets limit_up_price
     * @return double
     */
    public function getLimitUpPrice()
    {
        return $this->limit_up_price;
    }
  
    /**
     * Sets limit_up_price
     * @param double $limit_up_price 
     * @return $this
     */
    public function setLimitUpPrice($limit_up_price)
    {
        
        $this->limit_up_price = $limit_up_price;
        return $this;
    }
    
    /**
     * Gets bankrupt_limit_down_price
     * @return double
     */
    public function getBankruptLimitDownPrice()
    {
        return $this->bankrupt_limit_down_price;
    }
  
    /**
     * Sets bankrupt_limit_down_price
     * @param double $bankrupt_limit_down_price 
     * @return $this
     */
    public function setBankruptLimitDownPrice($bankrupt_limit_down_price)
    {
        
        $this->bankrupt_limit_down_price = $bankrupt_limit_down_price;
        return $this;
    }
    
    /**
     * Gets bankrupt_limit_up_price
     * @return double
     */
    public function getBankruptLimitUpPrice()
    {
        return $this->bankrupt_limit_up_price;
    }
  
    /**
     * Sets bankrupt_limit_up_price
     * @param double $bankrupt_limit_up_price 
     * @return $this
     */
    public function setBankruptLimitUpPrice($bankrupt_limit_up_price)
    {
        
        $this->bankrupt_limit_up_price = $bankrupt_limit_up_price;
        return $this;
    }
    
    /**
     * Gets prev_total_volume
     * @return Number
     */
    public function getPrevTotalVolume()
    {
        return $this->prev_total_volume;
    }
  
    /**
     * Sets prev_total_volume
     * @param Number $prev_total_volume 
     * @return $this
     */
    public function setPrevTotalVolume($prev_total_volume)
    {
        
        $this->prev_total_volume = $prev_total_volume;
        return $this;
    }
    
    /**
     * Gets total_volume
     * @return Number
     */
    public function getTotalVolume()
    {
        return $this->total_volume;
    }
  
    /**
     * Sets total_volume
     * @param Number $total_volume 
     * @return $this
     */
    public function setTotalVolume($total_volume)
    {
        
        $this->total_volume = $total_volume;
        return $this;
    }
    
    /**
     * Gets volume
     * @return Number
     */
    public function getVolume()
    {
        return $this->volume;
    }
  
    /**
     * Sets volume
     * @param Number $volume 
     * @return $this
     */
    public function setVolume($volume)
    {
        
        $this->volume = $volume;
        return $this;
    }
    
    /**
     * Gets volume24h
     * @return Number
     */
    public function getVolume24h()
    {
        return $this->volume24h;
    }
  
    /**
     * Sets volume24h
     * @param Number $volume24h 
     * @return $this
     */
    public function setVolume24h($volume24h)
    {
        
        $this->volume24h = $volume24h;
        return $this;
    }
    
    /**
     * Gets prev_total_turnover
     * @return Number
     */
    public function getPrevTotalTurnover()
    {
        return $this->prev_total_turnover;
    }
  
    /**
     * Sets prev_total_turnover
     * @param Number $prev_total_turnover 
     * @return $this
     */
    public function setPrevTotalTurnover($prev_total_turnover)
    {
        
        $this->prev_total_turnover = $prev_total_turnover;
        return $this;
    }
    
    /**
     * Gets total_turnover
     * @return Number
     */
    public function getTotalTurnover()
    {
        return $this->total_turnover;
    }
  
    /**
     * Sets total_turnover
     * @param Number $total_turnover 
     * @return $this
     */
    public function setTotalTurnover($total_turnover)
    {
        
        $this->total_turnover = $total_turnover;
        return $this;
    }
    
    /**
     * Gets turnover
     * @return Number
     */
    public function getTurnover()
    {
        return $this->turnover;
    }
  
    /**
     * Sets turnover
     * @param Number $turnover 
     * @return $this
     */
    public function setTurnover($turnover)
    {
        
        $this->turnover = $turnover;
        return $this;
    }
    
    /**
     * Gets turnover24h
     * @return Number
     */
    public function getTurnover24h()
    {
        return $this->turnover24h;
    }
  
    /**
     * Sets turnover24h
     * @param Number $turnover24h 
     * @return $this
     */
    public function setTurnover24h($turnover24h)
    {
        
        $this->turnover24h = $turnover24h;
        return $this;
    }
    
    /**
     * Gets prev_price24h
     * @return double
     */
    public function getPrevPrice24h()
    {
        return $this->prev_price24h;
    }
  
    /**
     * Sets prev_price24h
     * @param double $prev_price24h 
     * @return $this
     */
    public function setPrevPrice24h($prev_price24h)
    {
        
        $this->prev_price24h = $prev_price24h;
        return $this;
    }
    
    /**
     * Gets vwap
     * @return double
     */
    public function getVwap()
    {
        return $this->vwap;
    }
  
    /**
     * Sets vwap
     * @param double $vwap 
     * @return $this
     */
    public function setVwap($vwap)
    {
        
        $this->vwap = $vwap;
        return $this;
    }
    
    /**
     * Gets high_price
     * @return double
     */
    public function getHighPrice()
    {
        return $this->high_price;
    }
  
    /**
     * Sets high_price
     * @param double $high_price 
     * @return $this
     */
    public function setHighPrice($high_price)
    {
        
        $this->high_price = $high_price;
        return $this;
    }
    
    /**
     * Gets low_price
     * @return double
     */
    public function getLowPrice()
    {
        return $this->low_price;
    }
  
    /**
     * Sets low_price
     * @param double $low_price 
     * @return $this
     */
    public function setLowPrice($low_price)
    {
        
        $this->low_price = $low_price;
        return $this;
    }
    
    /**
     * Gets last_price
     * @return double
     */
    public function getLastPrice()
    {
        return $this->last_price;
    }
  
    /**
     * Sets last_price
     * @param double $last_price 
     * @return $this
     */
    public function setLastPrice($last_price)
    {
        
        $this->last_price = $last_price;
        return $this;
    }
    
    /**
     * Gets last_price_protected
     * @return double
     */
    public function getLastPriceProtected()
    {
        return $this->last_price_protected;
    }
  
    /**
     * Sets last_price_protected
     * @param double $last_price_protected 
     * @return $this
     */
    public function setLastPriceProtected($last_price_protected)
    {
        
        $this->last_price_protected = $last_price_protected;
        return $this;
    }
    
    /**
     * Gets last_tick_direction
     * @return string
     */
    public function getLastTickDirection()
    {
        return $this->last_tick_direction;
    }
  
    /**
     * Sets last_tick_direction
     * @param string $last_tick_direction 
     * @return $this
     */
    public function setLastTickDirection($last_tick_direction)
    {
        
        $this->last_tick_direction = $last_tick_direction;
        return $this;
    }
    
    /**
     * Gets last_change_pcnt
     * @return double
     */
    public function getLastChangePcnt()
    {
        return $this->last_change_pcnt;
    }
  
    /**
     * Sets last_change_pcnt
     * @param double $last_change_pcnt 
     * @return $this
     */
    public function setLastChangePcnt($last_change_pcnt)
    {
        
        $this->last_change_pcnt = $last_change_pcnt;
        return $this;
    }
    
    /**
     * Gets bid_price
     * @return double
     */
    public function getBidPrice()
    {
        return $this->bid_price;
    }
  
    /**
     * Sets bid_price
     * @param double $bid_price 
     * @return $this
     */
    public function setBidPrice($bid_price)
    {
        
        $this->bid_price = $bid_price;
        return $this;
    }
    
    /**
     * Gets mid_price
     * @return double
     */
    public function getMidPrice()
    {
        return $this->mid_price;
    }
  
    /**
     * Sets mid_price
     * @param double $mid_price 
     * @return $this
     */
    public function setMidPrice($mid_price)
    {
        
        $this->mid_price = $mid_price;
        return $this;
    }
    
    /**
     * Gets ask_price
     * @return double
     */
    public function getAskPrice()
    {
        return $this->ask_price;
    }
  
    /**
     * Sets ask_price
     * @param double $ask_price 
     * @return $this
     */
    public function setAskPrice($ask_price)
    {
        
        $this->ask_price = $ask_price;
        return $this;
    }
    
    /**
     * Gets impact_bid_price
     * @return double
     */
    public function getImpactBidPrice()
    {
        return $this->impact_bid_price;
    }
  
    /**
     * Sets impact_bid_price
     * @param double $impact_bid_price 
     * @return $this
     */
    public function setImpactBidPrice($impact_bid_price)
    {
        
        $this->impact_bid_price = $impact_bid_price;
        return $this;
    }
    
    /**
     * Gets impact_mid_price
     * @return double
     */
    public function getImpactMidPrice()
    {
        return $this->impact_mid_price;
    }
  
    /**
     * Sets impact_mid_price
     * @param double $impact_mid_price 
     * @return $this
     */
    public function setImpactMidPrice($impact_mid_price)
    {
        
        $this->impact_mid_price = $impact_mid_price;
        return $this;
    }
    
    /**
     * Gets impact_ask_price
     * @return double
     */
    public function getImpactAskPrice()
    {
        return $this->impact_ask_price;
    }
  
    /**
     * Sets impact_ask_price
     * @param double $impact_ask_price 
     * @return $this
     */
    public function setImpactAskPrice($impact_ask_price)
    {
        
        $this->impact_ask_price = $impact_ask_price;
        return $this;
    }
    
    /**
     * Gets has_liquidity
     * @return bool
     */
    public function getHasLiquidity()
    {
        return $this->has_liquidity;
    }
  
    /**
     * Sets has_liquidity
     * @param bool $has_liquidity 
     * @return $this
     */
    public function setHasLiquidity($has_liquidity)
    {
        
        $this->has_liquidity = $has_liquidity;
        return $this;
    }
    
    /**
     * Gets open_interest
     * @return Number
     */
    public function getOpenInterest()
    {
        return $this->open_interest;
    }
  
    /**
     * Sets open_interest
     * @param Number $open_interest 
     * @return $this
     */
    public function setOpenInterest($open_interest)
    {
        
        $this->open_interest = $open_interest;
        return $this;
    }
    
    /**
     * Gets open_value
     * @return Number
     */
    public function getOpenValue()
    {
        return $this->open_value;
    }
  
    /**
     * Sets open_value
     * @param Number $open_value 
     * @return $this
     */
    public function setOpenValue($open_value)
    {
        
        $this->open_value = $open_value;
        return $this;
    }
    
    /**
     * Gets fair_method
     * @return string
     */
    public function getFairMethod()
    {
        return $this->fair_method;
    }
  
    /**
     * Sets fair_method
     * @param string $fair_method 
     * @return $this
     */
    public function setFairMethod($fair_method)
    {
        
        $this->fair_method = $fair_method;
        return $this;
    }
    
    /**
     * Gets fair_basis_rate
     * @return double
     */
    public function getFairBasisRate()
    {
        return $this->fair_basis_rate;
    }
  
    /**
     * Sets fair_basis_rate
     * @param double $fair_basis_rate 
     * @return $this
     */
    public function setFairBasisRate($fair_basis_rate)
    {
        
        $this->fair_basis_rate = $fair_basis_rate;
        return $this;
    }
    
    /**
     * Gets fair_basis
     * @return double
     */
    public function getFairBasis()
    {
        return $this->fair_basis;
    }
  
    /**
     * Sets fair_basis
     * @param double $fair_basis 
     * @return $this
     */
    public function setFairBasis($fair_basis)
    {
        
        $this->fair_basis = $fair_basis;
        return $this;
    }
    
    /**
     * Gets fair_price
     * @return double
     */
    public function getFairPrice()
    {
        return $this->fair_price;
    }
  
    /**
     * Sets fair_price
     * @param double $fair_price 
     * @return $this
     */
    public function setFairPrice($fair_price)
    {
        
        $this->fair_price = $fair_price;
        return $this;
    }
    
    /**
     * Gets mark_method
     * @return string
     */
    public function getMarkMethod()
    {
        return $this->mark_method;
    }
  
    /**
     * Sets mark_method
     * @param string $mark_method 
     * @return $this
     */
    public function setMarkMethod($mark_method)
    {
        
        $this->mark_method = $mark_method;
        return $this;
    }
    
    /**
     * Gets mark_price
     * @return double
     */
    public function getMarkPrice()
    {
        return $this->mark_price;
    }
  
    /**
     * Sets mark_price
     * @param double $mark_price 
     * @return $this
     */
    public function setMarkPrice($mark_price)
    {
        
        $this->mark_price = $mark_price;
        return $this;
    }
    
    /**
     * Gets indicative_tax_rate
     * @return double
     */
    public function getIndicativeTaxRate()
    {
        return $this->indicative_tax_rate;
    }
  
    /**
     * Sets indicative_tax_rate
     * @param double $indicative_tax_rate 
     * @return $this
     */
    public function setIndicativeTaxRate($indicative_tax_rate)
    {
        
        $this->indicative_tax_rate = $indicative_tax_rate;
        return $this;
    }
    
    /**
     * Gets indicative_settle_price
     * @return double
     */
    public function getIndicativeSettlePrice()
    {
        return $this->indicative_settle_price;
    }
  
    /**
     * Sets indicative_settle_price
     * @param double $indicative_settle_price 
     * @return $this
     */
    public function setIndicativeSettlePrice($indicative_settle_price)
    {
        
        $this->indicative_settle_price = $indicative_settle_price;
        return $this;
    }
    
    /**
     * Gets settled_price
     * @return double
     */
    public function getSettledPrice()
    {
        return $this->settled_price;
    }
  
    /**
     * Sets settled_price
     * @param double $settled_price 
     * @return $this
     */
    public function setSettledPrice($settled_price)
    {
        
        $this->settled_price = $settled_price;
        return $this;
    }
    
    /**
     * Gets timestamp
     * @return \DateTime
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }
  
    /**
     * Sets timestamp
     * @param \DateTime $timestamp 
     * @return $this
     */
    public function setTimestamp($timestamp)
    {
        
        $this->timestamp = $timestamp;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
