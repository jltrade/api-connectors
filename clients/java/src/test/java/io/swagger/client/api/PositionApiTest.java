/**
 * BitMEX API
 * REST API for the BitMEX.com trading platform.<br><br><a href=\"/app/restAPI\">REST Documentation</a><br><a href=\"/app/wsAPI\">Websocket Documentation</a>
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Position;
import io.swagger.client.model.Error;
import java.math.BigDecimal;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PositionApi
 */
public class PositionApiTest {

    private final PositionApi api = new PositionApi();

    
    /**
     * Get your positions.
     *
     * See &lt;a href&#x3D;\&quot;http://www.onixs.biz/fix-dictionary/5.0.SP2/msgType_AP_6580.html\&quot;&gt;the FIX Spec&lt;/a&gt; for explanations of these fields.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void positionGetTest() throws ApiException {
        String filter = null;
        String columns = null;
        BigDecimal count = null;
        // List<Position> response = api.positionGet(filter, columns, count);

        // TODO: test validations
    }
    
    /**
     * Enable isolated margin or cross margin per-position.
     *
     * On Speculative (DPE-Enabled) contracts, users can switch isolate margin per-position. This function allows switching margin isolation (aka fixed margin) on and off.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void positionIsolateMarginTest() throws ApiException {
        String symbol = null;
        Boolean enabled = null;
        // Position response = api.positionIsolateMargin(symbol, enabled);

        // TODO: test validations
    }
    
    /**
     * Transfer equity in or out of a position.
     *
     * When margin is isolated on a position, use this function to add or remove margin from the position. Note that you cannot remove margin below the initial margin threshold.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void positionTransferIsolatedMarginTest() throws ApiException {
        String symbol = null;
        BigDecimal amount = null;
        // Position response = api.positionTransferIsolatedMargin(symbol, amount);

        // TODO: test validations
    }
    
    /**
     * Choose leverage for a position.
     *
     * On Speculative (DPE-Enabled) contracts, users can choose an isolated leverage. This will automatically enable isolated margin.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void positionUpdateLeverageTest() throws ApiException {
        String symbol = null;
        Double leverage = null;
        // Position response = api.positionUpdateLeverage(symbol, leverage);

        // TODO: test validations
    }
    
}
