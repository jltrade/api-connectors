/**
 * BitMEX API
 * REST API for the BitMEX.com trading platform.<br><br><a href=\"/app/restAPI\">REST Documentation</a><br><a href=\"/app/wsAPI\">Websocket Documentation</a>
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.joda.time.LocalDate;


/**
 * Affiliate
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-07-05T09:40:48.217-05:00")
public class Affiliate   {
  @JsonProperty("account")
  private BigDecimal account = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("prevPayout")
  private BigDecimal prevPayout = null;

  @JsonProperty("prevTurnover")
  private BigDecimal prevTurnover = null;

  @JsonProperty("prevComm")
  private BigDecimal prevComm = null;

  @JsonProperty("prevTimestamp")
  private LocalDate prevTimestamp = null;

  @JsonProperty("execTurnover")
  private BigDecimal execTurnover = null;

  @JsonProperty("execComm")
  private BigDecimal execComm = null;

  @JsonProperty("totalReferrals")
  private BigDecimal totalReferrals = null;

  @JsonProperty("totalTurnover")
  private BigDecimal totalTurnover = null;

  @JsonProperty("totalComm")
  private BigDecimal totalComm = null;

  @JsonProperty("payoutPcnt")
  private Double payoutPcnt = null;

  @JsonProperty("pendingPayout")
  private BigDecimal pendingPayout = null;

  @JsonProperty("timestamp")
  private LocalDate timestamp = null;

  public Affiliate account(BigDecimal account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public BigDecimal getAccount() {
    return account;
  }

  public void setAccount(BigDecimal account) {
    this.account = account;
  }

  public Affiliate currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Affiliate prevPayout(BigDecimal prevPayout) {
    this.prevPayout = prevPayout;
    return this;
  }

   /**
   * Get prevPayout
   * @return prevPayout
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getPrevPayout() {
    return prevPayout;
  }

  public void setPrevPayout(BigDecimal prevPayout) {
    this.prevPayout = prevPayout;
  }

  public Affiliate prevTurnover(BigDecimal prevTurnover) {
    this.prevTurnover = prevTurnover;
    return this;
  }

   /**
   * Get prevTurnover
   * @return prevTurnover
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getPrevTurnover() {
    return prevTurnover;
  }

  public void setPrevTurnover(BigDecimal prevTurnover) {
    this.prevTurnover = prevTurnover;
  }

  public Affiliate prevComm(BigDecimal prevComm) {
    this.prevComm = prevComm;
    return this;
  }

   /**
   * Get prevComm
   * @return prevComm
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getPrevComm() {
    return prevComm;
  }

  public void setPrevComm(BigDecimal prevComm) {
    this.prevComm = prevComm;
  }

  public Affiliate prevTimestamp(LocalDate prevTimestamp) {
    this.prevTimestamp = prevTimestamp;
    return this;
  }

   /**
   * Get prevTimestamp
   * @return prevTimestamp
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getPrevTimestamp() {
    return prevTimestamp;
  }

  public void setPrevTimestamp(LocalDate prevTimestamp) {
    this.prevTimestamp = prevTimestamp;
  }

  public Affiliate execTurnover(BigDecimal execTurnover) {
    this.execTurnover = execTurnover;
    return this;
  }

   /**
   * Get execTurnover
   * @return execTurnover
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getExecTurnover() {
    return execTurnover;
  }

  public void setExecTurnover(BigDecimal execTurnover) {
    this.execTurnover = execTurnover;
  }

  public Affiliate execComm(BigDecimal execComm) {
    this.execComm = execComm;
    return this;
  }

   /**
   * Get execComm
   * @return execComm
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getExecComm() {
    return execComm;
  }

  public void setExecComm(BigDecimal execComm) {
    this.execComm = execComm;
  }

  public Affiliate totalReferrals(BigDecimal totalReferrals) {
    this.totalReferrals = totalReferrals;
    return this;
  }

   /**
   * Get totalReferrals
   * @return totalReferrals
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getTotalReferrals() {
    return totalReferrals;
  }

  public void setTotalReferrals(BigDecimal totalReferrals) {
    this.totalReferrals = totalReferrals;
  }

  public Affiliate totalTurnover(BigDecimal totalTurnover) {
    this.totalTurnover = totalTurnover;
    return this;
  }

   /**
   * Get totalTurnover
   * @return totalTurnover
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getTotalTurnover() {
    return totalTurnover;
  }

  public void setTotalTurnover(BigDecimal totalTurnover) {
    this.totalTurnover = totalTurnover;
  }

  public Affiliate totalComm(BigDecimal totalComm) {
    this.totalComm = totalComm;
    return this;
  }

   /**
   * Get totalComm
   * @return totalComm
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getTotalComm() {
    return totalComm;
  }

  public void setTotalComm(BigDecimal totalComm) {
    this.totalComm = totalComm;
  }

  public Affiliate payoutPcnt(Double payoutPcnt) {
    this.payoutPcnt = payoutPcnt;
    return this;
  }

   /**
   * Get payoutPcnt
   * @return payoutPcnt
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getPayoutPcnt() {
    return payoutPcnt;
  }

  public void setPayoutPcnt(Double payoutPcnt) {
    this.payoutPcnt = payoutPcnt;
  }

  public Affiliate pendingPayout(BigDecimal pendingPayout) {
    this.pendingPayout = pendingPayout;
    return this;
  }

   /**
   * Get pendingPayout
   * @return pendingPayout
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getPendingPayout() {
    return pendingPayout;
  }

  public void setPendingPayout(BigDecimal pendingPayout) {
    this.pendingPayout = pendingPayout;
  }

  public Affiliate timestamp(LocalDate timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(LocalDate timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Affiliate affiliate = (Affiliate) o;
    return Objects.equals(this.account, affiliate.account) &&
        Objects.equals(this.currency, affiliate.currency) &&
        Objects.equals(this.prevPayout, affiliate.prevPayout) &&
        Objects.equals(this.prevTurnover, affiliate.prevTurnover) &&
        Objects.equals(this.prevComm, affiliate.prevComm) &&
        Objects.equals(this.prevTimestamp, affiliate.prevTimestamp) &&
        Objects.equals(this.execTurnover, affiliate.execTurnover) &&
        Objects.equals(this.execComm, affiliate.execComm) &&
        Objects.equals(this.totalReferrals, affiliate.totalReferrals) &&
        Objects.equals(this.totalTurnover, affiliate.totalTurnover) &&
        Objects.equals(this.totalComm, affiliate.totalComm) &&
        Objects.equals(this.payoutPcnt, affiliate.payoutPcnt) &&
        Objects.equals(this.pendingPayout, affiliate.pendingPayout) &&
        Objects.equals(this.timestamp, affiliate.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, currency, prevPayout, prevTurnover, prevComm, prevTimestamp, execTurnover, execComm, totalReferrals, totalTurnover, totalComm, payoutPcnt, pendingPayout, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Affiliate {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    prevPayout: ").append(toIndentedString(prevPayout)).append("\n");
    sb.append("    prevTurnover: ").append(toIndentedString(prevTurnover)).append("\n");
    sb.append("    prevComm: ").append(toIndentedString(prevComm)).append("\n");
    sb.append("    prevTimestamp: ").append(toIndentedString(prevTimestamp)).append("\n");
    sb.append("    execTurnover: ").append(toIndentedString(execTurnover)).append("\n");
    sb.append("    execComm: ").append(toIndentedString(execComm)).append("\n");
    sb.append("    totalReferrals: ").append(toIndentedString(totalReferrals)).append("\n");
    sb.append("    totalTurnover: ").append(toIndentedString(totalTurnover)).append("\n");
    sb.append("    totalComm: ").append(toIndentedString(totalComm)).append("\n");
    sb.append("    payoutPcnt: ").append(toIndentedString(payoutPcnt)).append("\n");
    sb.append("    pendingPayout: ").append(toIndentedString(pendingPayout)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

