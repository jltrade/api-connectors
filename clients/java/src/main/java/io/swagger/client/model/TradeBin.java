/**
 * BitMEX API
 * REST API for the BitMEX.com trading platform.<br><br><a href=\"/app/restAPI\">REST Documentation</a><br><a href=\"/app/wsAPI\">Websocket Documentation</a>
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.joda.time.LocalDate;


/**
 * TradeBin
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-07-05T09:40:48.217-05:00")
public class TradeBin   {
  @JsonProperty("timestamp")
  private LocalDate timestamp = null;

  @JsonProperty("symbol")
  private String symbol = null;

  @JsonProperty("open")
  private Double open = null;

  @JsonProperty("high")
  private Double high = null;

  @JsonProperty("low")
  private Double low = null;

  @JsonProperty("close")
  private Double close = null;

  @JsonProperty("trades")
  private BigDecimal trades = null;

  @JsonProperty("volume")
  private BigDecimal volume = null;

  @JsonProperty("vwap")
  private Double vwap = null;

  @JsonProperty("lastSize")
  private BigDecimal lastSize = null;

  @JsonProperty("turnover")
  private BigDecimal turnover = null;

  @JsonProperty("homeNotional")
  private Double homeNotional = null;

  @JsonProperty("foreignNotional")
  private Double foreignNotional = null;

  @JsonProperty("id")
  private Double id = null;

  public TradeBin timestamp(LocalDate timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(LocalDate timestamp) {
    this.timestamp = timestamp;
  }

  public TradeBin symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public TradeBin open(Double open) {
    this.open = open;
    return this;
  }

   /**
   * Get open
   * @return open
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getOpen() {
    return open;
  }

  public void setOpen(Double open) {
    this.open = open;
  }

  public TradeBin high(Double high) {
    this.high = high;
    return this;
  }

   /**
   * Get high
   * @return high
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getHigh() {
    return high;
  }

  public void setHigh(Double high) {
    this.high = high;
  }

  public TradeBin low(Double low) {
    this.low = low;
    return this;
  }

   /**
   * Get low
   * @return low
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getLow() {
    return low;
  }

  public void setLow(Double low) {
    this.low = low;
  }

  public TradeBin close(Double close) {
    this.close = close;
    return this;
  }

   /**
   * Get close
   * @return close
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getClose() {
    return close;
  }

  public void setClose(Double close) {
    this.close = close;
  }

  public TradeBin trades(BigDecimal trades) {
    this.trades = trades;
    return this;
  }

   /**
   * Get trades
   * @return trades
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getTrades() {
    return trades;
  }

  public void setTrades(BigDecimal trades) {
    this.trades = trades;
  }

  public TradeBin volume(BigDecimal volume) {
    this.volume = volume;
    return this;
  }

   /**
   * Get volume
   * @return volume
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getVolume() {
    return volume;
  }

  public void setVolume(BigDecimal volume) {
    this.volume = volume;
  }

  public TradeBin vwap(Double vwap) {
    this.vwap = vwap;
    return this;
  }

   /**
   * Get vwap
   * @return vwap
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getVwap() {
    return vwap;
  }

  public void setVwap(Double vwap) {
    this.vwap = vwap;
  }

  public TradeBin lastSize(BigDecimal lastSize) {
    this.lastSize = lastSize;
    return this;
  }

   /**
   * Get lastSize
   * @return lastSize
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getLastSize() {
    return lastSize;
  }

  public void setLastSize(BigDecimal lastSize) {
    this.lastSize = lastSize;
  }

  public TradeBin turnover(BigDecimal turnover) {
    this.turnover = turnover;
    return this;
  }

   /**
   * Get turnover
   * @return turnover
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getTurnover() {
    return turnover;
  }

  public void setTurnover(BigDecimal turnover) {
    this.turnover = turnover;
  }

  public TradeBin homeNotional(Double homeNotional) {
    this.homeNotional = homeNotional;
    return this;
  }

   /**
   * Get homeNotional
   * @return homeNotional
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getHomeNotional() {
    return homeNotional;
  }

  public void setHomeNotional(Double homeNotional) {
    this.homeNotional = homeNotional;
  }

  public TradeBin foreignNotional(Double foreignNotional) {
    this.foreignNotional = foreignNotional;
    return this;
  }

   /**
   * Get foreignNotional
   * @return foreignNotional
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getForeignNotional() {
    return foreignNotional;
  }

  public void setForeignNotional(Double foreignNotional) {
    this.foreignNotional = foreignNotional;
  }

  public TradeBin id(Double id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getId() {
    return id;
  }

  public void setId(Double id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TradeBin tradeBin = (TradeBin) o;
    return Objects.equals(this.timestamp, tradeBin.timestamp) &&
        Objects.equals(this.symbol, tradeBin.symbol) &&
        Objects.equals(this.open, tradeBin.open) &&
        Objects.equals(this.high, tradeBin.high) &&
        Objects.equals(this.low, tradeBin.low) &&
        Objects.equals(this.close, tradeBin.close) &&
        Objects.equals(this.trades, tradeBin.trades) &&
        Objects.equals(this.volume, tradeBin.volume) &&
        Objects.equals(this.vwap, tradeBin.vwap) &&
        Objects.equals(this.lastSize, tradeBin.lastSize) &&
        Objects.equals(this.turnover, tradeBin.turnover) &&
        Objects.equals(this.homeNotional, tradeBin.homeNotional) &&
        Objects.equals(this.foreignNotional, tradeBin.foreignNotional) &&
        Objects.equals(this.id, tradeBin.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, symbol, open, high, low, close, trades, volume, vwap, lastSize, turnover, homeNotional, foreignNotional, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TradeBin {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    high: ").append(toIndentedString(high)).append("\n");
    sb.append("    low: ").append(toIndentedString(low)).append("\n");
    sb.append("    close: ").append(toIndentedString(close)).append("\n");
    sb.append("    trades: ").append(toIndentedString(trades)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    vwap: ").append(toIndentedString(vwap)).append("\n");
    sb.append("    lastSize: ").append(toIndentedString(lastSize)).append("\n");
    sb.append("    turnover: ").append(toIndentedString(turnover)).append("\n");
    sb.append("    homeNotional: ").append(toIndentedString(homeNotional)).append("\n");
    sb.append("    foreignNotional: ").append(toIndentedString(foreignNotional)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

